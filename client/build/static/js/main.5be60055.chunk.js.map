{"version":3,"sources":["components/layout/loading.gif","context/contadores/contadoresContext.js","components/layout/DateBox.js","context/auth/authContext.js","components/layout/Navbar.js","components/layout/Spinner.js","components/batches/GhostCounter.js","components/zonas/SubSectorCard.js","components/custom-buttons/NoBorderBtn.js","components/zonas/SubSectorModal.js","components/batches/GhostTotal.js","components/zonas/SectorCard.js","components/zonas/Zona.js","components/layout/GhostLoading.js","components/zonas/ZonasList.js","components/pages/Home.js","context/alert/alertContext.js","components/auth/Register.js","components/auth/Login.js","components/pages/Bienvenido.js","components/pages/Landing.js","components/layout/Alerts.js","components/routing/PrivateRoute.js","context/contadores/contadoresReducer.js","context/types.js","utils/renameKeys.js","context/contadores/ContadoresState.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","contadoresContext","createContext","registerLocale","es","DateBox","useContext","ContadoresContext","thisFecha","setFecha","className","onClick","dB","Date","setDate","getDate","selected","onChange","date","todayButton","dateFormat","showPopperArrow","popperPlacement","locale","placeholderText","shouldCloseOnSelect","calendarClassName","wrapperClassName","popperClassName","dF","authContext","Navbar","isDateBox","logout","AuthContext","useState","isExpanded","toggleExpansion","to","id","Spinner","React","memo","sb","counter","setCounter","contador","setContador","addContador","setThisContador","useEffect","_id","moment","isBefore","contadorActualizado","subsector","fecha","sector","disabled","SubSectorCard","key","nombre","nVias","NoBorderBtn","titulo","funcion","getContadorSector","zonas","type","style","transition","SubSectorModal","setShowModal","subsectores","map","GhostTotal","SectorCard","showModal","contadorSector","filtrarContadores","setThisContadorSector","Zona","zona","comuna","region","GhostLoading","src","loading","alt","width","margin","display","ZonasList","getZonas","loadingZonas","getContadores","contadores","length","Home","alertContext","Register","AlertContext","setAlert","register","error","clearErrors","userName","password","password2","user","setUser","e","target","name","value","onSubmit","preventDefault","htmlFor","required","minLength","Login","login","Bienvenido","leerMas","setLeerMas","href","rel","Landing","props","isAuthenticated","history","push","showRegister","setShowRegister","Alerts","alerts","alert","msg","PrivateRoute","Component","component","rest","render","state","action","payload","contadoresDay","filter","cont","isSame","contadorSectorDay","renameKeys","keysMap","obj","Object","keys","reduce","acc","ContadoresState","initialState","useReducer","contadoresReducer","dispatch","loadingContadores","setLoadingZonas","a","axios","get","res","data","entries","groupBy","0","1","response","sectores","z","sectoresId","i","s","Promise","all","p","flat","contadorId","sectorId","config","headers","post","deltaContador","put","Provider","subsectorId","dbStatus","cS","find","clearFilter","children","localStorage","setItem","token","removeItem","setAuthToken","defaults","common","Authorization","AuthState","getItem","authReducer","loadUser","formData","AlertState","alertReducer","timeout","uuid","setTimeout","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5be60055.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.23968a8d.gif\";","import { createContext } from 'react';\n\nconst contadoresContext = createContext();\n\nexport default contadoresContext;\n","import React, { Fragment, useContext } from 'react';\n\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport es from 'date-fns/locale/es';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\nregisterLocale('es', es);\n\nconst DateBox = () => {\n  const contadoresContext = useContext(ContadoresContext);\n  const { thisFecha, setFecha } = contadoresContext;\n\n  const dayForward = () => {\n    const dF = new Date(thisFecha.setDate(thisFecha.getDate() + 1));\n    setFecha(dF);\n  };\n\n  const dayBackwards = () => {\n    const dB = new Date(thisFecha.setDate(thisFecha.getDate() - 1));\n    setFecha(dB);\n  };\n\n  return (\n    <Fragment>\n      <div className='flex items-stretch'>\n        <button\n          className='border-box bg-gray-400 active:bg-gray-500 p-3 rounded-l focus:outline-none'\n          onClick={dayBackwards}\n        >\n          <i className='fas fa-chevron-left'></i>\n        </button>\n\n        <DatePicker\n          selected={thisFecha}\n          onChange={(date) => {\n            setFecha(date);\n            // filtrarContadores(date);\n          }}\n          todayButton='Hoy'\n          dateFormat='dd/MM/yyyy'\n          showPopperArrow={false}\n          popperPlacement='bottom'\n          locale='es'\n          placeholderText='Weeks start on Monday'\n          shouldCloseOnSelect={false}\n          className='bg-gray-300  w-40 py-3 pl-6 text-xl tracking-wide  text-gray-700 outline-none'\n          calendarClassName='font-sans border-none  text-lg tracking-wide opacity-100  '\n          wrapperClassName=''\n          popperClassName='border-none'\n        />\n\n        <button\n          className='bg-gray-400 active:bg-gray-500 p-3 rounded-r focus:outline-none'\n          onClick={dayForward}\n        >\n          <i className='fas fa-chevron-right'></i>\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default DateBox;\n","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;\n","import React, { useState, useContext } from 'react';\nimport DateBox from './DateBox';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Navbar = ({ isDateBox }) => {\n  const authContext = useContext(AuthContext);\n\n  const { logout } = authContext;\n  const onLogout = () => {\n    logout();\n  };\n\n  const [isExpanded, toggleExpansion] = useState(false);\n\n  return (\n    <nav className='flex bg-gray-100 p-3 flex-wrap border-b border-b-2 border-gray-200'>\n      <Link to='/' className='p-2 mr-4 inline-flex items-center border-r-2'>\n        <i className='fas fa-ghost fa-2x mx-2'></i>\n        <span className='text-xl text-gray font-bold uppercase tracking-wide'>\n          Ghost Climbers\n        </span>\n      </Link>\n      {isDateBox && <DateBox />}\n      <div className='md:hidden inline-flex flex-row ml-auto '>\n        <button\n          className='text-gray p-3 hover:bg-gray-300 rounded hover:text-gray outline-none'\n          onClick={() => toggleExpansion(!isExpanded)}\n        >\n          <i className='fas fa-bars'></i>\n        </button>\n      </div>\n      <div\n        className={`${\n          isExpanded ? `block` : `hidden`\n        }  top-navbar w-full md:inline-flex  md:flex-grow md:w-auto pt-2`}\n        id='navigation'\n      >\n        <div className='md:inline-flex md:flex-row md:ml-auto md:w-auto w-full md:items-center items-start  flex flex-col md:h-auto'>\n          <Link\n            to={'#!'}\n            className='md:inline-flex md:w-auto w-full px-3 py-2 rounded text-gray items-center justify-center hover:bg-gray-300 hover:text-gray'\n            onClick={onLogout}\n          >\n            <span>Cerrar Sesión</span>\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Spinner = () => {\n  return (\n    <div className='lds-ripple items-center justify-center mb-4 mr-4'>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect, useContext } from 'react';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\nimport Spinner from '../layout/Spinner';\nimport moment from 'moment';\n\nconst GhostCounter = ({ sb }) => {\n  const [counter, setCounter] = useState(0);\n  // Contador Global\n  const [contador, setContador] = useState(null);\n  // Contadores states\n  const contadoresContext = useContext(ContadoresContext);\n  const { addContador, setThisContador, thisFecha } = contadoresContext;\n\n  useEffect(() => {\n    if (sb) {\n      setContador(setThisContador(sb._id));\n      // eslint-disable-next-line\n    }\n  }, [sb, setThisContador]);\n\n  // add 1 to the couter\n  const countOne = () => {\n    if (counter <= 2) {\n      setCounter(counter + 1);\n      const contadorActualizado = {\n        subsector: {\n          _id: sb._id,\n        },\n        contador: 1,\n        fecha: thisFecha,\n      };\n\n      addContador(contadorActualizado, contador._id, sb.sector);\n    }\n  };\n\n  const resetCount = () => {\n    setCounter(0);\n    const contadorActualizado = {\n      subsector: {\n        _id: sb._id,\n      },\n      contador: -counter,\n      fecha: thisFecha,\n    };\n\n    addContador(contadorActualizado, contador._id, sb.sector);\n  };\n\n  return (\n    <div id='' className='relative flex pr-3 items-center justify-center'>\n      <button\n        className={` inline-block flex justify-center items-center rounded w-12 px-3 focus:outline-none ' \n          ${\n            contador &&\n            (moment(thisFecha).isBefore(moment(), 'day')\n              ? 'bg-gray-800 text-white'\n              : contador.contador === 0 && counter === 0\n              ? 'bg-blue-200 text-gray-500'\n              : 'bg-blue-500 text-white')\n          } \n            `}\n        onClick={countOne}\n        disabled={moment(thisFecha).isBefore(moment(), 'day')}\n      >\n        {contador ? <h5 className=''>{contador.contador}</h5> : <Spinner />}\n        <i className='fas fa-ghost ml-1'></i>\n      </button>\n      {counter > 0 ? (\n        <button\n          className='relative inset-y-0 inline-block bg-transparent focus:outline-none flex justify-center items-center text-sm  text-gray-500'\n          onClick={resetCount}\n        >\n          <i className='fas fa-undo ml-3 '></i>\n        </button>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\n//\n\nexport default React.memo(GhostCounter);\n","import React from 'react';\nimport GhostCounter from '../batches/GhostCounter';\n\nconst SubSectorCard = ({ sb }) => {\n  return (\n    <div>\n      <div\n        key={sb._id}\n        className='box-border flex items-center justify-center w-full h-full border-b hover:bg-gray-200'\n      >\n        <div className='w-full px-2 py-3'>\n          <p className=' text-lg mb-1 text-black '>{sb.nombre}</p>\n          <p className=' text-xs mb-1 text-gray-700 '>\n            {`Número de vías: ${sb.nVias}`}\n          </p>\n        </div>\n        <div className='w-full'>\n          <GhostCounter sb={sb} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SubSectorCard;\n","import React, { useContext } from 'react';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\n\nconst NoBorderBtn = ({ titulo, funcion }) => {\n  const contadoresContext = useContext(ContadoresContext);\n  const { getContadorSector, zonas } = contadoresContext;\n  return (\n    <div>\n      <button\n        className='text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1'\n        type='button'\n        style={{ transition: 'all .15s ease' }}\n        onClick={() => {\n          funcion(false);\n          // Obetener los contadores del sector actualizados\n          getContadorSector(zonas);\n        }}\n      >\n        {titulo}\n      </button>\n    </div>\n  );\n};\n\nexport default NoBorderBtn;\n","import React, { Fragment } from 'react';\nimport SubSectorCard from './SubSectorCard';\nimport NoBorderBtn from '../custom-buttons/NoBorderBtn';\n\nconst SubSectorModal = ({ setShowModal, subsectores, sector }) => {\n  return (\n    <Fragment>\n      <div className='justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none'>\n        <div className='relative w-screen  max-h-screen md:max-w-2xl my-4 mx-auto '>\n          {/*content*/}\n          <div className='rounded-t bg-gray-500 w-full h-full p-2 text-white flex items-center  justify-start '>\n            <h1 className='text-xl font-bold'>{sector}</h1>\n          </div>\n          <div className='border-0 flex flex-col w-full h-full bg-white outline-none focus:outline-none rounded-b'>\n            <div className='grid grid-cols-1 md:grid-cols-3  grid-flow-row-dense p-3 overflow-x-hidden'>\n              {subsectores &&\n                subsectores.map((sb) => <SubSectorCard key={sb._id} sb={sb} />)}\n            </div>\n            {/*footer*/}\n            <div className='flex items-center justify-end p-3 rounded-b'>\n              <NoBorderBtn\n                titulo={'Cerrar'}\n                funcion={() => setShowModal(false)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='opacity-25 fixed inset-0 z-40 bg-black'></div>\n    </Fragment>\n  );\n};\n\nexport default SubSectorModal;\n","import React from 'react';\n\nconst GhostTotal = ({ contador }) => {\n  return (\n    <div id='' className=' flex items-center justify-center px-3'>\n      <div\n        className={` inline-block flex justify-center items-center rounded w-12 px-3 focus:outline-none ' \n       ${\n         contador === 0 ? 'bg-blue-200 text-gray-500' : 'bg-blue-500 text-white'\n       }\n         `}\n      >\n        <h5 className=''>{contador}</h5>\n        <i className='fas fa-ghost ml-1'></i>\n      </div>\n    </div>\n  );\n};\n\nexport default GhostTotal;\n","import React, { useState, Fragment, useContext, useEffect } from 'react';\nimport SubSectorModal from '../zonas/SubSectorModal';\nimport GhostTotal from '../batches/GhostTotal';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\nimport Spinner from '../layout/Spinner';\n\n// Filter funcion for array of cotadores by date and sector\n// const setContador = (contadorArr, fecha, sectorId) => {\n//   const cont = contadorArr.filter((cS) => {\n//     return cS._id.sector === sectorId && sameDay(cS.fecha, fecha);\n//   });\n//   if (cont.length > 0) {\n//     const { contador: res } = cont.find(({ contador }) => contador);\n//     return res;\n//   } else {\n//     return 0;\n//   }\n// };\n\nconst SectorCard = ({ sector }) => {\n  const { nombre, subsectores } = sector;\n  const [showModal, setShowModal] = useState(false);\n  const [contador, setContador] = useState(null);\n\n  // Contadores states\n  const contadoresContext = useContext(ContadoresContext);\n  const {\n    contadorSector,\n    thisFecha,\n    filtrarContadores,\n    setThisContadorSector,\n  } = contadoresContext;\n\n  // const [contador, setContador] = useState(0);\n\n  useEffect(() => {\n    setContador(setThisContadorSector(sector._id));\n  }, [sector, setThisContadorSector]);\n\n  // if (contadorSector) {\n  //   contador = setContador(contadorSector, thisFecha, sector._id);\n  // }\n\n  return (\n    <Fragment>\n      <button\n        onClick={() => {\n          setShowModal(true);\n          filtrarContadores(thisFecha);\n        }}\n        className='inline-block flex justify-between  items-stretch md:items-center rounded shadow-lg m-3 md:w-64 bg-gray-300 focus:outline-none'\n      >\n        <div className='inline-block p-3  text-2xl'>{nombre}</div>\n        <div className='flex mr-3'>\n          {!contadorSector ? <Spinner /> : <GhostTotal contador={contador} />}\n        </div>\n      </button>\n      {showModal ? (\n        <div className='flex'>\n          <SubSectorModal\n            setShowModal={() => setShowModal()}\n            subsectores={subsectores}\n            sector={nombre}\n          />\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default SectorCard;\n","import React from 'react';\nimport SectorCard from './SectorCard';\n\nconst Zona = ({ zona }) => {\n  const { comuna, sector } = zona;\n  return (\n    <div className='box-border bg-gray-500 opacity-50s rounded  m-3 w-full md:w-auto h-auto'>\n      <div className='p-1 mx-1'>\n        <h1 className='text-2xl text-gray-100 font-bold'>{comuna}</h1>\n        <h3 className='text-lg self-end mb-1 font-hairline'>\n          {sector && sector[0].region}\n        </h3>\n      </div>\n      <div className='flex flex-col w-auto'>\n        {sector &&\n          sector.map((sector) => (\n            <SectorCard key={sector.id} sector={sector} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Zona;\n","import React from 'react';\nimport loading from './loading.gif';\nconst GhostLoading = () => {\n  return (\n    <div className='flex justify-center w-screen'>\n      <img\n        src={loading}\n        alt='Loading...'\n        style={{ width: '500px', margin: 'auto', display: 'block' }}\n      />\n    </div>\n  );\n};\n\nexport default GhostLoading;\n","import React, { useContext, useEffect } from 'react';\nimport Zona from './Zona';\nimport GhostLoading from '../layout/GhostLoading';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\n\nconst ZonasList = () => {\n  const contadoresContext = useContext(ContadoresContext);\n  const {\n    zonas,\n    getZonas,\n    loadingZonas,\n    getContadores,\n    getContadorSector,\n    filtrarContadores,\n    contadores,\n    contadorSector,\n    thisFecha,\n  } = contadoresContext;\n\n  // const loadingCont = contadoresContext.loading;\n\n  useEffect(() => {\n    getZonas();\n    getContadores();\n\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    getContadorSector(zonas);\n    // eslint-disable-next-line\n  }, [zonas]);\n\n  useEffect(() => {\n    // clearFilter();\n    if (contadores && contadorSector) {\n      filtrarContadores(thisFecha);\n    }\n    // eslint-disable-next-line\n  }, [contadores, contadorSector, thisFecha]);\n\n  if (zonas !== null && zonas.length === 0 && !loadingZonas) {\n    return <h4> Error </h4>;\n  }\n\n  return (\n    <div className='flex flex-wrap items-baseline'>\n      {loadingZonas ? (\n        <GhostLoading />\n      ) : (\n        zonas && zonas.map((zona) => <Zona key={zona.comuna} zona={zona} />)\n      )}\n    </div>\n  );\n};\n\nexport default ZonasList;\n","import React, { Fragment } from 'react';\nimport Navbar from '../layout/Navbar';\nimport ZonasList from '../zonas/ZonasList';\n\nconst Home = () => {\n  return (\n    <Fragment>\n      <Navbar isDateBox={true} />\n      <div className='flex'>\n        <ZonasList />\n      </div>\n      <footer className='bg-gray-100 h-64 flex justify-center items-center '>\n        <p> Todos los derechos reservados {'\\u00A9'} </p>\n      </footer>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Register = () => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n\n  const { register, error, clearErrors } = authContext;\n\n  useEffect(() => {\n    if (error === 'User already exists') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [error]);\n\n  const [user, setUser] = useState({\n    userName: '',\n    password: '',\n    password2: '',\n  });\n\n  const { userName, password, password2 } = user;\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (userName === '' || password === '') {\n      setAlert('Por favor complete todos los campos', 'danger');\n    } else if (password !== password2) {\n      setAlert('Las contraseñas no coinciden', 'danger');\n    } else {\n      register({\n        userName,\n        password,\n      });\n    }\n  };\n\n  return (\n    <div className='container'>\n      <h1 className='text-3xl'>Regístrate</h1>\n      <form onSubmit={onSubmit}>\n        <label htmlFor='userName' className='block'>\n          <span className='text-gray-700'>Usuario</span>\n          <input\n            className='form-input mt-1 block w-full'\n            type='text'\n            name='userName'\n            value={userName}\n            onChange={onChange}\n            required\n          />\n        </label>\n\n        <label htmlFor='password' className='block'>\n          <span className='text-gray-700'>Contraseña</span>\n          <input\n            className='form-input mt-1 block w-full'\n            type='password'\n            name='password'\n            value={password}\n            onChange={onChange}\n            required\n            minLength='6'\n          />\n        </label>\n\n        <label htmlFor='password2' className='block'>\n          <span className='text-gray-700'> Repetir Contraseña</span>\n          <input\n            className='form-input mt-1 block w-full'\n            type='password'\n            name='password2'\n            value={password2}\n            onChange={onChange}\n            required\n            minLength='6'\n          />\n        </label>\n\n        <input\n          className='block bg-blue-500 text-white rounded focus:outline-none p-3 mt-2 active:bg-gray-500 focus:shadow-outline hover:bg-blue-300'\n          type='submit'\n          value='Enviar'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Login = () => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n\n  const { login, error, clearErrors } = authContext;\n\n  useEffect(() => {\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [error]);\n\n  const [user, setUser] = useState({\n    userName: '',\n    password: '',\n  });\n\n  const { userName, password } = user;\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (userName === '' || password === '') {\n      setAlert('Por favor complete todos los campos', 'danger');\n    } else {\n      login({\n        userName,\n        password,\n      });\n    }\n  };\n\n  return (\n    <div className='container'>\n      <form onSubmit={onSubmit}>\n        <label htmlFor='userName' className='block'>\n          <span className='text-gray-700'>Usuario</span>\n          <input\n            className='form-input mt-1 block w-full'\n            type='text'\n            name='userName'\n            value={userName}\n            onChange={onChange}\n            required\n          />\n        </label>\n\n        <label htmlFor='password' className='block'>\n          <span className='text-gray-700'>Contraseña</span>\n          <input\n            className='form-input mt-1 block w-full'\n            type='password'\n            name='password'\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </label>\n        <input\n          className='block bg-blue-500 text-white rounded focus:outline-none p-3 mt-2 active:bg-gray-500 focus:shadow-outline hover:bg-blue-300'\n          type='submit'\n          value='Entrar'\n          required\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, Fragment } from 'react';\n\nexport const Bienvenido = () => {\n  const [leerMas, setLeerMas] = useState(true);\n  return (\n    <div className='flex flex-col justify-between h-full'>\n      {leerMas ? (\n        <div className='flex h-full flex-col justify-center items-center'>\n          <h3 className='text-3xl  tracking-wide font-bold '>\n            {' '}\n            Unidos para estar divididos\n          </h3>\n\n          <button\n            className='text-sm bg-transparent rounded bg-black hover:bg-gray-600 active:bg-blue-500 text-white px-3 py-2  focus:outline-none focus:font-bold mb-3 mt-10'\n            onClick={() => setLeerMas(!leerMas)}\n          >\n            <i className='fas fa-info'></i> Leer más\n          </button>\n        </div>\n      ) : (\n        <Fragment>\n          <div className='flex flex-col m-2 mt-10 lg:px-10 '>\n            <p className='mb-5'>\n              Sabemos que nadie esta escalando en roca, pero para todos esos\n              escaladores invisibles Ghost Climber los puede ayudar.\n            </p>\n            <p className='mb-5 '>\n              Ingresa y registra tu visita para poder dividrnos mejor en los\n              sectores de escalada.{' '}\n            </p>\n            <p className='mb-5 '>\n              <span>\n                <span className=' text-gray font-bold uppercase tracking-wide'>\n                  Ghost Climber\n                </span>\n              </span>{' '}\n              busca ayudar a los escaladores que viven en los alrededores de\n              Santiago a distriubirse en los distintos sectores y evitar las\n              aglomeraciones que estaban sucediendo.\n            </p>\n          </div>\n          <button\n            className='block md:inline-block w-3/4 text-sm  self-center opacity-75 bg-transparent rounded bg-black hover:bg-gray-600 active:bg-blue-500 text-white px-3 py-2  focus:outline-none focus:font-bold mb-3'\n            onClick={() => setLeerMas(!leerMas)}\n          >\n            Volver\n          </button>\n          <div className='flex justify-center items-center text-sm'>\n            <div className='w-full border-2 border-red-500 bg-red-100 rounded'>\n              <h3 className='text-left ml-3 my-3 text-red-600'>\n                <i className='fas fa-skull-crossbones'></i> ¡Importante!\n              </h3>\n              <p className='m-2 text-left '>\n                Esta página te pide que respetes todas las medidas oficiales\n                como el uso de mascarillas, el respeto a las cuarentenas, y\n                sobre todo{' '}\n                <span className='font-bold text-red-500'>\n                  evita accidentes mientras los centros de salud están\n                  saturados.\n                </span>\n              </p>\n            </div>\n          </div>\n        </Fragment>\n      )}\n\n      {/* Github link */}\n      <div className='text-sm text-gray-700 mt-10'>\n        Este es una versión <span className='font-bold'>beta</span> de un\n        proyecto código abierto, aporta en{' '}\n        <a\n          href='https://github.com/elevyg/ghost_climber'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <i className='fab fa-2x fa-github-square hover:text-blue-500'></i>\n        </a>\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment, useState, useContext, useEffect } from 'react';\nimport Register from '../auth/Register';\nimport Login from '../auth/Login';\nimport { Bienvenido } from './Bienvenido';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Landing = (props) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n  }, [isAuthenticated, props.history]);\n\n  const [showRegister, setShowRegister] = useState(false);\n\n  return (\n    <Fragment>\n      <div className='flex flex-col md:flex-row w-full md:h-full md:justify-center md:items-stretch'>\n        <div className='hidden md:flex flex-col w-1/2 h-screen p-3 text-center bg-gray-200  justify-between'>\n          <Bienvenido />\n        </div>\n        {/* Segunda mitad */}\n        <div className='md:w-1/2 h-screen md:h-full flex flex-col justify-center items-center'>\n          <div className=' p-2 md:mr-4 inline-flex items-center mb-10 md:mt-20'>\n            <i className='fas fa-ghost fa-3x mx-2 '></i>\n            <span className='text-3xl text-gray font-bold uppercase tracking-wide'>\n              Ghost Climber\n            </span>\n          </div>\n          <div className='w-11/12 p-5 bg-gray-200 border'>\n            {showRegister ? <Register /> : <Login />}\n          </div>\n\n          {!showRegister ? (\n            <div className=' w-11/12 m-3 pt-3 px-3 bg-gray-200 border'>\n              ¿No tienes cuenta?,{' '}\n              <input\n                className='inline-block bg-transparent text-blue-500 focus:outline-none focus:font-bold mb-5'\n                type='submit'\n                value='Regístrate'\n                onClick={() => setShowRegister(true)}\n              />\n            </div>\n          ) : (\n            <div className='w-11/12 m-3 pt-3 px-3 bg-gray-200 border '>\n              Ya tienes cuenta,{' '}\n              <input\n                className='inline-block bg-transparent text-blue-500 focus:outline-none focus:font-bold mb-5'\n                type='submit'\n                value='Iniciar Sesión'\n                onClick={() => setShowRegister(false)}\n              />\n            </div>\n          )}\n\n          <a\n            href='#bienvenidos'\n            className='md:hidden flex flex-col justify-center items-center  text-gray-500 mt-10'\n          >\n            <p>Más Info </p>{' '}\n            <i className='block fas fa-2x fa-arrow-alt-circle-down'></i>\n          </a>\n        </div>\n        <div\n          id='bienvenidos'\n          className='md:hidden h-screen p-3 text-center bg-gray-200  justify-around'\n        >\n          <Bienvenido />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Landing;\n","import React, { useContext } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Alerts = () => {\n  const alertContext = useContext(AlertContext);\n\n  return (\n    alertContext.alerts.length > 0 &&\n    alertContext.alerts.map((alert) => (\n      <div key={alert.id} className={`alert alert-${alert.type}`}>\n        <i className='fas fa-info-circle'></i> {alert.msg}\n      </div>\n    ))\n  );\n};\n\nexport default Alerts;\n","import React, { useContext, Fragment } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n\n  const { isAuthenticated, loading } = authContext;\n\n  return (\n    <Fragment>\n      <Route\n        {...rest}\n        render={(props) =>\n          !isAuthenticated && !loading ? (\n            <Redirect to='/landing' />\n          ) : (\n            <Component {...props} />\n          )\n        }\n      />\n    </Fragment>\n  );\n};\n\nexport default PrivateRoute;\n","import {\n  GET_CONTADORES,\n  GET_ZONAS,\n  GET_CONTADORES_SECTOR,\n  ADD_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  UPDATE_CONTADORES,\n  FILTRAR_CONTADORES,\n  CLEAR_FILTER,\n  SET_FECHA,\n  LOADING_ZONAS,\n} from '../types';\n\nimport moment from 'moment';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_ZONAS:\n      return { ...state, loadingZonas: false, zonas: action.payload };\n    case LOADING_CONTADORES:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOADING_ZONAS:\n      return {\n        ...state,\n        loadingZonas: true,\n      };\n    case SET_FECHA:\n      return {\n        ...state,\n        thisFecha: action.payload,\n      };\n    case GET_CONTADORES:\n      return {\n        ...state,\n        contadores: action.payload,\n        loading: false,\n      };\n    case GET_CONTADORES_SECTOR:\n      return {\n        ...state,\n        contadorSector: action.payload,\n        loading: false,\n      };\n\n    case UPDATE_CONTADORES:\n      return {\n        ...state,\n        contadores: state.contadores.map((contador) =>\n          contador._id === action.payload._id ? action.payload : contador\n        ),\n        // contadorSector: state.contadorSector.map((cS) =>\n        //   cS._id.sector === action.payload.sectorId &&\n        //   moment(cS.fecha).isSame(action.payload.fecha, 'day')\n        //     ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n        //     : cS\n        // ),\n        loading: false,\n      };\n    case ADD_CONTADORES:\n      return {\n        ...state,\n        contadores: [...state.contadores, action.payload],\n        // contadorSector: state.contadorSector.map((cS) =>\n        //   cS._id.sector === action.payload.sectorId &&\n        //   moment(cS.fecha).isSame(action.payload.fecha, 'day')\n        //     ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n        //     : cS\n        // ),\n      };\n    case FILTRAR_CONTADORES:\n      return {\n        ...state,\n        contadoresDay: state.contadores.filter((cont) =>\n          moment(cont.fecha).isSame(action.payload, 'day')\n        ),\n        contadorSectorDay: state.contadorSector.filter((cont) =>\n          moment(cont.fecha).isSame(action.payload, 'day')\n        ),\n        loading: false,\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        contadoresDay: null,\n        contadorSectorDay: null,\n      };\n    case ERROR_CONTADORES:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","// Zonas y Contadores\nexport const GET_ZONAS = 'GET_ZONAS';\nexport const GET_CONTADORES = 'GET_CONTADORES';\nexport const GET_CONTADORES_SECTOR = 'GET_CONTADORES_SECTOR';\nexport const ADD_CONTADORES = 'ADD_CONTADORES';\nexport const ADD_CONTADOR_SECTOR = 'ADD_CONTADOR_SECTOR';\nexport const LOADING_CONTADORES = 'LOADING_CONTADORES';\nexport const ERROR_CONTADORES = 'ERROR_CONTADORES';\nexport const UPDATE_CONTADORES = 'UPDATE_CONTADORES';\nexport const FILTRAR_CONTADORES = 'FILTRAR_CONTADORES';\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\nexport const SET_FECHA = 'SET_FECHA';\nexport const LOADING_ZONAS = 'LOADING_ZONAS';\n\n// Auth\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\n// Alert\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n","const renameKeys = (keysMap, obj) =>\n  Object.keys(obj).reduce(\n    (acc, key) => ({\n      ...acc,\n      ...{ [keysMap[key] || key]: obj[key] },\n    }),\n    {}\n  );\n\nexport default renameKeys;\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport ContadoresContext from './contadoresContext';\nimport contadoresReducer from './contadoresReducer';\n\nimport groupBy from 'lodash/groupBy';\nimport renameKeys from '../../utils/renameKeys';\n\nimport {\n  GET_CONTADORES,\n  GET_ZONAS,\n  ADD_CONTADORES,\n  LOADING_CONTADORES,\n  LOADING_ZONAS,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n  FILTRAR_CONTADORES,\n  CLEAR_FILTER,\n  SET_FECHA,\n} from '../types';\nimport moment from 'moment';\n\nconst ContadoresState = (props) => {\n  const initialState = {\n    zonas: null,\n    contadores: null,\n    contadoresDay: null,\n    contadorSector: null,\n    contadorSectorDay: null,\n    thisFecha: new Date(),\n    loading: false,\n    loadingZonas: false,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contadoresReducer, initialState);\n\n  // Loading contadores\n  const loadingContadores = () => {\n    dispatch({ type: LOADING_CONTADORES });\n  };\n  // Loading\n  const setLoadingZonas = () => {\n    dispatch({ type: LOADING_ZONAS });\n  };\n\n  // Get Zonas\n  const getZonas = async () => {\n    setLoadingZonas();\n    try {\n      const res = await axios.get('/api/v1/sectores');\n\n      let zonas = res.data.data;\n\n      zonas = Object.entries(groupBy(zonas, 'comuna')).map((zona) =>\n        renameKeys({ 0: 'comuna', 1: 'sector' }, zona)\n      );\n\n      dispatch({ type: GET_ZONAS, payload: zonas });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Obtener contadores por subsector\n  const getContadores = async () => {\n    loadingContadores();\n    try {\n      const res = await axios.get(`/api/v1/contadores`);\n\n      let contadores = res.data.data;\n\n      dispatch({ type: GET_CONTADORES, payload: contadores });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Obtener contadores por sector\n  const getContadorSector = async (zonas) => {\n    loadingContadores();\n    try {\n      const sectores = zonas.map((z) => z.sector);\n\n      const sectoresId = [];\n\n      for (let i = 0; i < sectores.length; i++) {\n        sectores[i].map((s) => sectoresId.push(s._id));\n      }\n\n      const res = await Promise.all(\n        sectoresId.map((id) => axios.get(`/api/v1/sectores/${id}/contadores`))\n      );\n\n      const contadorSector = res.map((p) => p.data.data).flat(2);\n\n      dispatch({ type: GET_CONTADORES_SECTOR, payload: contadorSector });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Add contador\n  const addContador = async (contador, contadorId, sectorId) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    if (!contadorId) {\n      try {\n        const res = await axios.post(\n          `/api/v1/subsectores/${contador.subsector._id}/contadores/`,\n          contador,\n          config\n        );\n\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n\n        dispatch({ type: ADD_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    } else {\n      try {\n        const res = await axios.put(\n          `/api/v1/contadores/${contadorId}`,\n          contador,\n          config\n        );\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n\n        dispatch({ type: UPDATE_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    }\n  };\n\n  // Filtrar contador para subsector\n  const setThisContador = (subsectorId) => {\n    if (state.contadores) {\n      let contador = state.contadores.filter(\n        (cont) =>\n          (cont.subsector._id === subsectorId ||\n            cont.subsector === subsectorId) &&\n          moment(cont.fecha).isSame(state.thisFecha, 'day')\n      );\n\n      if (contador.length === 0) {\n        contador = [\n          {\n            subsector: {\n              _id: subsectorId,\n            },\n            fecha: state.thisFecha,\n            contador: 0,\n            dbStatus: 401,\n          },\n        ];\n      }\n\n      return contador[0];\n    }\n  };\n\n  const setThisContadorSector = (sectorId) => {\n    if (state.contadorSector) {\n      const cont = state.contadorSector.filter(\n        (cS) =>\n          cS._id.sector === sectorId &&\n          moment(cS.fecha).isSame(state.thisFecha, 'day')\n      );\n\n      if (cont.length > 0) {\n        const { contador: res } = cont.find(({ contador }) => contador);\n        return res;\n      } else {\n        return 0;\n      }\n    }\n  };\n\n  // Fijar fecha\n  const setFecha = (fecha) => {\n    dispatch({ type: SET_FECHA, payload: fecha });\n  };\n\n  // Filtrar contadores por día seleccionado\n  const filtrarContadores = (fecha) => {\n    loadingContadores();\n    dispatch({ type: FILTRAR_CONTADORES, payload: fecha });\n  };\n\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContadoresContext.Provider\n      value={{\n        zonas: state.zonas,\n        contadores: state.contadores,\n        contadoresDay: state.contadoresDay,\n        contadorSector: state.contadorSector,\n        contadorSectorDay: state.contadorSectorDay,\n        thisFecha: state.thisFecha,\n        loading: state.loading,\n        loadingZonas: state.loadingZonas,\n        error: state.error,\n        getZonas,\n        getContadores,\n        loadingContadores,\n        getContadorSector,\n        addContador,\n        setThisContador,\n        setThisContadorSector,\n        filtrarContadores,\n        setFecha,\n        clearFilter,\n        setLoadingZonas,\n      }}\n    >\n      {props.children}\n    </ContadoresContext.Provider>\n  );\n};\n\nexport default ContadoresState;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common = { Authorization: `bearer ${token}` };\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setAuthToken;\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    user: null,\n    isAuthenticated: null,\n    loading: false,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/v1/auth/me');\n\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  // Register User\n\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('api/v1/auth/register', formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Login User\n\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('api/v1/auth/login', formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Logout\n\n  const logout = async () => {\n    try {\n      await axios.get('api/v1/auth/logout');\n      dispatch({ type: LOGOUT });\n    } catch (err) {}\n  };\n\n  // Clear Errors\n\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        user: state.user,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        error: state.error,\n        register,\n        login,\n        logout,\n        clearErrors,\n        loadUser,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload);\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = (props) => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  // Set Alert\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid();\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type, id },\n    });\n\n    setTimeout(() => {\n      dispatch({ type: REMOVE_ALERT, payload: id });\n    }, timeout);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert,\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport Landing from './components/pages/Landing';\nimport Alerts from './components/layout/Alerts';\nimport PrivateRoute from './components/routing/PrivateRoute';\n\n// Import Contexts\nimport ContadoresState from './context/contadores/ContadoresState';\nimport AuthState from './context/auth/AuthState';\nimport AlertState from './context/alert/AlertState';\n\nimport setAuthToken from './utils/setAuthToken';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  return (\n    <AuthState>\n      <ContadoresState>\n        <AlertState>\n          <Router>\n            <Alerts />\n            <Switch>\n              <PrivateRoute exact path='/' component={Home} />\n              <Route exact path='/landing' component={Landing} />\n            </Switch>\n          </Router>\n        </AlertState>\n      </ContadoresState>\n    </AuthState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}