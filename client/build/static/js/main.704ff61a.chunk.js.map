{"version":3,"sources":["components/layout/loading.gif","context/contadores/contadoresContext.js","components/layout/DateBox.js","components/layout/Navbar.js","utils/isPast.js","components/layout/Spinner.js","components/batches/GhostCounter.js","components/zonas/SubSectorCard.js","components/custom-buttons/NoBorderBtn.js","components/zonas/SubSectorModal.js","components/batches/GhostTotal.js","components/zonas/SectorCard.js","components/zonas/Zona.js","components/layout/GhostLoading.js","components/zonas/ZonasList.js","components/pages/Home.js","components/pages/Dev.js","context/contadores/contadoresReducer.js","context/types.js","utils/renameKeys.js","context/contadores/ContadoresState.js","App.js","index.js"],"names":["module","exports","contadoresContext","createContext","registerLocale","es","DateBox","useContext","ContadoresContext","thisFecha","filtrarContadores","setFecha","className","onClick","dB","Date","setDate","getDate","selected","onChange","date","todayButton","dateFormat","showPopperArrow","popperPlacement","locale","placeholderText","shouldCloseOnSelect","calendarClassName","wrapperClassName","popperClassName","dF","Navbar","useState","isExpanded","toggleExpansion","to","id","name","h_ref","map","content","key","isPast","dOne","d1","d2","getFullYear","getMonth","Spinner","React","memo","sb","counter","setCounter","contador","setContador","addContador","setThisContador","useEffect","_id","moment","isBefore","contadorActualizado","subsector","fecha","sector","disabled","SubSectorCard","nombre","nVias","NoBorderBtn","titulo","funcion","getContadorSector","zonas","type","style","transition","SubSectorModal","setShowModal","subsectores","GhostTotal","SectorCard","showModal","contadorSector","setThisContadorSector","Zona","zona","comuna","region","GhostLoading","src","loading","alt","width","margin","display","ZonasList","getZonas","loadingZonas","getContadores","contadores","clearFilter","length","Home","Dev","state","action","payload","contadoresDay","filter","cont","isSame","contadorSectorDay","error","renameKeys","keysMap","obj","Object","keys","reduce","acc","ContadoresState","props","initialState","useReducer","contadoresReducer","dispatch","loadingContadores","setLoadingZonas","a","axios","get","res","data","entries","groupBy","0","1","response","sectores","z","sectoresId","i","s","push","Promise","all","p","flat","contadorId","sectorId","config","headers","post","deltaContador","msg","put","Provider","value","subsectorId","dbStatus","cS","find","children","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,qC,oNCI5BC,EAFWC,0BCG1BC,yBAAe,KAAMC,KAErB,IAwDeC,EAxDC,WACd,IAAMJ,EAAoBK,qBAAWC,GACVC,GAAwBP,EAA3CQ,kBAA2CR,EAAxBO,WAAWE,EAAaT,EAAbS,SActC,OACE,kBAAC,WAAD,KACE,yBAAKC,UAAU,sBACb,4BACEA,UAAU,6EACVC,QAXa,WACnB,IAAMC,EAAK,IAAIC,KAAKN,EAAUO,QAAQP,EAAUQ,UAAY,IAC5DN,EAASG,KAWH,uBAAGF,UAAU,yBAGf,kBAAC,IAAD,CACEM,SAAUT,EACVU,SAAU,SAACC,GACTT,EAASS,IAGXC,YAAY,MACZC,WAAW,aACXC,iBAAiB,EACjBC,gBAAgB,SAChBC,OAAO,KACPC,gBAAgB,wBAChBC,qBAAqB,EACrBf,UAAU,gFACVgB,kBAAkB,6DAClBC,iBAAiB,GACjBC,gBAAgB,gBAGlB,4BACElB,UAAU,kEACVC,QA3CW,WACjB,IAAMkB,EAAK,IAAIhB,KAAKN,EAAUO,QAAQP,EAAUQ,UAAY,IAC5DN,EAASoB,KA2CH,uBAAGnB,UAAU,6BCNRoB,EA9CA,WACb,IADmB,EAKmBC,oBAAS,GAL5B,mBAKZC,EALY,KAKAC,EALA,KAOnB,OACE,yBAAKvB,UAAU,sEACb,kBAAC,IAAD,CAAMwB,GAAG,IAAIxB,UAAU,gDACrB,uBAAGA,UAAU,4BACb,0BAAMA,UAAU,uDAAhB,mBAIF,kBAAC,EAAD,MACA,yBAAKA,UAAU,2CACb,4BACEA,UAAU,uEACVC,QAAS,kBAAMsB,GAAiBD,KAEhC,uBAAGtB,UAAU,kBAGjB,yBACEA,UAAS,UACPsB,EAAU,iBADH,mEAGTG,GAAG,cAEH,yBAAKzB,UAAU,+GA7BF,CACjB,CAAE0B,KAAM,SAAUC,MAAO,IAAKF,GAAI,KAClC,CAAEC,KAAM,oBAAkBC,MAAO,KAAMF,GAAI,MA4BzBG,KAAI,SAACC,GAAD,OACd,kBAAC,IAAD,CACEC,IAAKD,EAAQJ,GACbD,GAAIK,EAAQF,MACZ3B,UAAU,6HAEV,8BAAO6B,EAAQH,cC5BdK,EAbA,SAACC,GACd,IAAMC,EAAK,IAAI9B,KAAK6B,GACdE,EAAK,IAAI/B,KAEf,OACE8B,EAAGE,cAAgBD,EAAGC,eACrBF,EAAGG,WAAaF,EAAGE,YAAcH,EAAGE,cAAgBD,EAAGC,eACvDF,EAAG5B,UAAY6B,EAAG7B,WACjB4B,EAAGG,WAAaF,EAAGE,YACnBH,EAAGE,cAAgBD,EAAGC,eCEbE,EATC,WACd,OACE,yBAAKrC,UAAU,oDACb,8BACA,gCC+ESsC,MAAMC,MA/EA,SAAC,GAAY,IAAVC,EAAS,EAATA,GAAS,EACDnB,mBAAS,GADR,mBACxBoB,EADwB,KACfC,EADe,OAGCrB,mBAAS,MAHV,mBAGxBsB,EAHwB,KAGdC,EAHc,KAKzBtD,EAAoBK,qBAAWC,GAC7BiD,EAA4CvD,EAA5CuD,YAAaC,EAA+BxD,EAA/BwD,gBAAiBjD,EAAcP,EAAdO,UAEtCkD,qBAAU,WACJP,GACFI,EAAYE,EAAgBN,EAAGQ,QAGhC,CAACR,EAAIM,IA+BR,OACE,yBAAKrB,GAAG,GAAGzB,UAAU,kDACnB,4BACEA,UAAS,4GAEL2C,IACCM,IAAOpD,GAAWqD,SAASD,MAAU,OAClC,yBACsB,IAAtBN,EAASA,UAA8B,IAAZF,EAC3B,4BACA,0BAPC,mBAUTxC,QAzCW,WACf,GAAIwC,GAAW,EAAG,CAChBC,EAAWD,EAAU,GACrB,IAAMU,EAAsB,CAC1BC,UAAW,CACTJ,IAAKR,EAAGQ,KAEVL,SAAU,EACVU,MAAOxD,GAGTgD,EAAYM,EAAqBR,EAASK,IAAKR,EAAGc,UA+BhDC,SAAUxB,EAAOlC,IAEhB8C,EAAW,wBAAI3C,UAAU,IAAI2C,EAASA,UAAiB,kBAAC,EAAD,MACxD,uBAAG3C,UAAU,uBAEdyC,EAAU,EACT,4BACEzC,UAAU,4HACVC,QAnCW,WACjByC,EAAW,GACX,IAAMS,EAAsB,CAC1BC,UAAW,CACTJ,IAAKR,EAAGQ,KAEVL,UAAWF,EACXY,MAAOxD,GAGTgD,EAAYM,EAAqBR,EAASK,IAAKR,EAAGc,UA2B5C,uBAAGtD,UAAU,uBAGf,OCrDOwD,EArBO,SAAC,GAAY,IAAVhB,EAAS,EAATA,GACvB,OACE,6BACE,yBACEV,IAAKU,EAAGQ,IACRhD,UAAU,wFAEV,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,6BAA6BwC,EAAGiB,QAC7C,uBAAGzD,UAAU,gCAAb,gCACsBwC,EAAGkB,SAG3B,yBAAK1D,UAAU,UACb,kBAAC,EAAD,CAAcwC,GAAIA,QCObmB,EArBK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACvBvE,EAAoBK,qBAAWC,GAC7BkE,EAA6BxE,EAA7BwE,kBAAmBC,EAAUzE,EAAVyE,MAC3B,OACE,6BACE,4BACE/D,UAAU,sHACVgE,KAAK,SACLC,MAAO,CAAEC,WAAY,iBACrBjE,QAAS,WACP4D,GAAQ,GAERC,EAAkBC,KAGnBH,KCeMO,EA7BQ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,YAAaf,EAAa,EAAbA,OACnD,OACE,kBAAC,WAAD,KACE,yBAAKtD,UAAU,yHACb,yBAAKA,UAAU,8DAEb,yBAAKA,UAAU,wFACb,wBAAIA,UAAU,qBAAqBsD,IAErC,yBAAKtD,UAAU,2FACb,yBAAKA,UAAU,8EACZqE,GACCA,EAAYzC,KAAI,SAACY,GAAD,OAAQ,kBAAC,EAAD,CAAeV,IAAKU,EAAGQ,IAAKR,GAAIA,QAG5D,yBAAKxC,UAAU,+CACb,kBAAC,EAAD,CACE4D,OAAQ,SACRC,QAAS,kBAAMO,GAAa,UAMtC,yBAAKpE,UAAU,6CCTNsE,EAjBI,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SACpB,OACE,yBAAKlB,GAAG,GAAGzB,UAAU,0CACnB,yBACEA,UAAS,yGAEK,IAAb2C,EAAiB,4BAA8B,yBAFvC,gBAMT,wBAAI3C,UAAU,IAAI2C,GAClB,uBAAG3C,UAAU,yBC0DNuE,G,MAnDI,SAAC,GAAgB,IAAdjB,EAAa,EAAbA,OACZG,EAAwBH,EAAxBG,OAAQY,EAAgBf,EAAhBe,YADiB,EAEChD,oBAAS,GAFV,mBAE1BmD,EAF0B,KAEfJ,EAFe,OAGD/C,mBAAS,MAHR,mBAG1BsB,EAH0B,KAGhBC,EAHgB,KAM3BtD,EAAoBK,qBAAWC,GAEnC6E,EAIEnF,EAJFmF,eACA5E,EAGEP,EAHFO,UACAC,EAEER,EAFFQ,kBACA4E,EACEpF,EADFoF,sBAaF,OARA3B,qBAAU,WACRH,EAAY8B,EAAsBpB,EAAON,QACxC,CAACM,EAAQoB,IAOV,kBAAC,WAAD,KACE,4BACEzE,QAAS,WACPmE,GAAa,GACbtE,EAAkBD,IAEpBG,UAAU,iIAEV,yBAAKA,UAAU,8BAA8ByD,GAC7C,yBAAKzD,UAAU,aACXyE,EAA+B,kBAAC,EAAD,CAAY9B,SAAUA,IAApC,kBAAC,EAAD,QAGtB6B,EACC,yBAAKxE,UAAU,QACb,kBAAC,EAAD,CACEoE,aAAc,kBAAMA,KACpBC,YAAaA,EACbf,OAAQG,KAGV,QC3CKkB,EApBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACNC,EAAmBD,EAAnBC,OAAQvB,EAAWsB,EAAXtB,OAChB,OACE,yBAAKtD,UAAU,2EACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,oCAAoC6E,GAClD,wBAAI7E,UAAU,uCACXsD,GAAUA,EAAO,GAAGwB,SAGzB,yBAAK9E,UAAU,wBACZsD,GACCA,EAAO1B,KAAI,SAAC0B,GAAD,OACT,kBAAC,EAAD,CAAYxB,IAAKwB,EAAO7B,GAAI6B,OAAQA,U,kBCFjCyB,EAZM,WACnB,OACE,yBAAK/E,UAAU,gCACb,yBACEgF,IAAKC,IACLC,IAAI,aACJjB,MAAO,CAAEkB,MAAO,QAASC,OAAQ,OAAQC,QAAS,aCgD3CC,EAnDG,WAChB,IAAMhG,EAAoBK,qBAAWC,GAEnCmE,EAUEzE,EAVFyE,MACAwB,EASEjG,EATFiG,SACAC,EAQElG,EARFkG,aACAC,EAOEnG,EAPFmG,cACA3B,EAMExE,EANFwE,kBACAhE,EAKER,EALFQ,kBAEA4F,GAGEpG,EAJFqG,YAIErG,EAHFoG,YACAjB,EAEEnF,EAFFmF,eACA5E,EACEP,EADFO,UAwBF,OAnBAkD,qBAAU,WACRwC,IACAE,MAGC,IACH1C,qBAAU,WACRe,EAAkBC,KAEjB,CAACA,IAEJhB,qBAAU,WAEJ2C,GAAcjB,GAChB3E,EAAkBD,KAGnB,CAAC6F,EAAYjB,EAAgB5E,IAElB,OAAVkE,GAAmC,IAAjBA,EAAM6B,QAAiBJ,EAK3C,yBAAKxF,UAAU,iCACZwF,EACC,kBAAC,EAAD,MAEAzB,GAASA,EAAMnC,KAAI,SAACgD,GAAD,OAAU,kBAAC,EAAD,CAAM9C,IAAK8C,EAAKC,OAAQD,KAAMA,QARxD,wCCxBIiB,EAdF,WACX,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,yBAAK7F,UAAU,QACb,kBAAC,EAAD,OAEF,4BAAQA,UAAU,sDAChB,6DAAmC,OAAnC,QCEO8F,EAXH,WACV,OACE,yBAAK9F,UAAU,sDACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,qB,0DCQR,WAAC+F,EAAOC,GACrB,OAAQA,EAAOhC,MACb,IClBqB,YDmBnB,OAAO,2BAAK+B,GAAZ,IAAmBP,cAAc,EAAOzB,MAAOiC,EAAOC,UACxD,ICf8B,qBDgB5B,OAAO,2BACFF,GADL,IAEEd,SAAS,IAEb,ICdyB,gBDevB,OAAO,2BACFc,GADL,IAEEP,cAAc,IAElB,ICpBqB,YDqBnB,OAAO,2BACFO,GADL,IAEElG,UAAWmG,EAAOC,UAEtB,IClC0B,iBDmCxB,OAAO,2BACFF,GADL,IAEEL,WAAYM,EAAOC,QACnBhB,SAAS,IAEb,ICvCiC,wBDwC/B,OAAO,2BACFc,GADL,IAEEtB,eAAgBuB,EAAOC,QACvBhB,SAAS,IAGb,ICzC6B,oBD0C3B,OAAO,2BACFc,GADL,IAEEL,WAAYK,EAAML,WAAW9D,KAAI,SAACe,GAAD,OAC/BA,EAASK,MAAQgD,EAAOC,QAAQjD,IAAMgD,EAAOC,QAAUtD,KAQzDsC,SAAS,IAEb,IC3D0B,iBD4DxB,OAAO,2BACFc,GADL,IAEEL,WAAW,GAAD,mBAAMK,EAAML,YAAZ,CAAwBM,EAAOC,YAQ7C,ICjE8B,qBDkE5B,OAAO,2BACFF,GADL,IAEEG,cAAeH,EAAML,WAAWS,QAAO,SAACC,GAAD,OACrCnD,IAAOmD,EAAK/C,OAAOgD,OAAOL,EAAOC,QAAS,UAE5CK,kBAAmBP,EAAMtB,eAAe0B,QAAO,SAACC,GAAD,OAC7CnD,IAAOmD,EAAK/C,OAAOgD,OAAOL,EAAOC,QAAS,UAE5ChB,SAAS,IAEb,IC3EwB,eD4EtB,OAAO,2BACFc,GADL,IAEEG,cAAe,KACfI,kBAAmB,OAEvB,ICpF4B,mBDqF1B,OAAO,2BACFP,GADL,IAEEd,SAAS,EACTsB,MAAOP,EAAOC,UAElB,QACE,OAAOF,I,0BExFES,EATI,SAACC,EAASC,GAAV,OACjBC,OAAOC,KAAKF,GAAKG,QACf,SAACC,EAAKhF,GAAN,mBAAC,eACIgF,GADL,eAEQL,EAAQ3E,IAAQA,EAAM4E,EAAI5E,OAElC,KCkOWiF,EAhNS,SAACC,GACvB,IAAMC,EAAe,CACnBlD,MAAO,KACP2B,WAAY,KACZQ,cAAe,KACfzB,eAAgB,KAChB6B,kBAAmB,KACnBzG,UAAW,IAAIM,KACf8E,SAAS,EACTO,cAAc,EACde,MAAO,MAVwB,EAaPW,qBAAWC,EAAmBF,GAbvB,mBAa1BlB,EAb0B,KAanBqB,EAbmB,KAgB3BC,EAAoB,WACxBD,EAAS,CAAEpD,KFpCmB,wBEuC1BsD,EAAkB,WACtBF,EAAS,CAAEpD,KFlCc,mBEsCrBuB,EAAQ,uCAAG,8BAAAgC,EAAA,6DACfD,IADe,kBAGKE,IAAMC,IAAI,oBAHf,OAGPC,EAHO,OAKT3D,EAAQ2D,EAAIC,KAAKA,KAErB5D,EAAQ4C,OAAOiB,QAAQC,IAAQ9D,EAAO,WAAWnC,KAAI,SAACgD,GAAD,OACnD4B,EAAW,CAAEsB,EAAG,SAAUC,EAAG,UAAYnD,MAG3CwC,EAAS,CAAEpD,KF5DQ,YE4DSiC,QAASlC,IAXxB,kDAabqD,EAAS,CAAEpD,KFxDe,mBEwDSiC,QAAS,KAAI+B,WAbnC,0DAAH,qDAkBRvC,EAAa,uCAAG,8BAAA8B,EAAA,6DACpBF,IADoB,kBAGAG,IAAMC,IAAN,sBAHA,OAGZC,EAHY,OAKdhC,EAAagC,EAAIC,KAAKA,KAE1BP,EAAS,CAAEpD,KFzEa,iBEyESiC,QAASP,IAPxB,gDASlB0B,EAAS,CAAEpD,KFtEe,mBEsESiC,QAAS,KAAI+B,WAT9B,yDAAH,qDAcblE,EAAiB,uCAAG,WAAOC,GAAP,SAAAwD,EAAA,6DACxBF,IADwB,2BAAAE,EAAA,0CAAAA,EAAA,sDAOtB,IAJMU,EAAWlE,EAAMnC,KAAI,SAACsG,GAAD,OAAOA,EAAE5E,UAE9B6E,EAAa,GAEVC,EAAI,EAAGA,EAAIH,EAASrC,OAAQwC,IACnCH,EAASG,GAAGxG,KAAI,SAACyG,GAAD,OAAOF,EAAWG,KAAKD,EAAErF,QARrB,gBAWJuF,QAAQC,IACxBL,EAAWvG,KAAI,SAACH,GAAD,OAAQ+F,IAAMC,IAAN,2BAA8BhG,EAA9B,oBAZH,OAWhBiG,EAXgB,OAehBjD,EAAiBiD,EAAI9F,KAAI,SAAC6G,GAAD,OAAOA,EAAEd,KAAKA,QAAMe,KAAK,GAExDtB,EAAS,CAAEpD,KFhGoB,wBEgGSiC,QAASxB,IAjB3B,0GAmBtB2C,EAAS,CAAEpD,KF9Fe,mBE8FSiC,QAAS,KAAI+B,WAnB1B,wDAAH,sDAwBjBnF,EAAW,uCAAG,WAAOF,EAAUgG,EAAYC,GAA7B,mBAAArB,EAAA,yDACZsB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAGfH,EANa,0CAQInB,IAAMuB,KAAN,8BACOpG,EAASS,UAAUJ,IAD1B,gBAEhBL,EACAkG,GAXY,QAQRnB,EARQ,QAcVC,KAAKA,KAAKiB,SAAWA,EACzBlB,EAAIC,KAAKA,KAAKqB,cAAgBrG,EAASA,SAEvCyE,EAAS,CAAEpD,KFvHW,iBEuHWiC,QAASyB,EAAIC,KAAKA,OAjBrC,kDAmBdP,EAAS,CAAEpD,KFtHa,mBEsHWiC,QAAS,KAAI+B,SAASiB,MAnB3C,2DAuBIzB,IAAM0B,IAAN,6BACMP,GACtBhG,EACAkG,GA1BY,SAuBRnB,EAvBQ,QA4BVC,KAAKA,KAAKiB,SAAWA,EACzBlB,EAAIC,KAAKA,KAAKqB,cAAgBrG,EAASA,SAEvCyE,EAAS,CAAEpD,KFjIc,oBEiIWiC,QAASyB,EAAIC,KAAKA,OA/BxC,mDAiCdP,EAAS,CAAEpD,KFpIa,mBEoIWiC,QAAS,KAAI+B,SAASiB,MAjC3C,kEAAH,0DAiGjB,OACE,kBAAC,EAAkBE,SAAnB,CACEC,MAAO,CACLrF,MAAOgC,EAAMhC,MACb2B,WAAYK,EAAML,WAClBQ,cAAeH,EAAMG,cACrBzB,eAAgBsB,EAAMtB,eACtB6B,kBAAmBP,EAAMO,kBACzBzG,UAAWkG,EAAMlG,UACjBoF,QAASc,EAAMd,QACfO,aAAcO,EAAMP,aACpBe,MAAOR,EAAMQ,MACbhB,WACAE,gBACA4B,oBACAvD,oBACAjB,cACAC,gBA3EkB,SAACuG,GACvB,GAAItD,EAAML,WAAY,CACpB,IAAI/C,EAAWoD,EAAML,WAAWS,QAC9B,SAACC,GAAD,OACGA,EAAKhD,UAAUJ,MAAQqG,GACtBjD,EAAKhD,YAAciG,IACrBpG,IAAOmD,EAAK/C,OAAOgD,OAAON,EAAMlG,UAAW,UAgB/C,OAbwB,IAApB8C,EAASiD,SACXjD,EAAW,CACT,CACES,UAAW,CACTJ,IAAKqG,GAEPhG,MAAO0C,EAAMlG,UACb8C,SAAU,EACV2G,SAAU,OAKT3G,EAAS,KAsDd+B,sBAlDwB,SAACkE,GAC7B,GAAI7C,EAAMtB,eAAgB,CACxB,IAAM2B,EAAOL,EAAMtB,eAAe0B,QAChC,SAACoD,GAAD,OACEA,EAAGvG,IAAIM,SAAWsF,GAClB3F,IAAOsG,EAAGlG,OAAOgD,OAAON,EAAMlG,UAAW,UAG7C,OAAIuG,EAAKR,OAAS,EACUQ,EAAKoD,MAAK,qBAAG7G,YAA/BA,SAGD,IAuCP7C,kBA5BoB,SAACuD,GACzBgE,IACAD,EAAS,CAAEpD,KF3LmB,qBE2LOiC,QAAS5C,KA2B1CtD,SAlCW,SAACsD,GAChB+D,EAAS,CAAEpD,KFnLU,YEmLOiC,QAAS5C,KAkCjCsC,YAzBc,WAClByB,EAAS,CAAEpD,KF9La,kBEuNpBsD,oBAGDN,EAAMyC,WC9MEC,MAff,WACE,OACE,yBAAK1J,UAAU,gBACb,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAO2J,OAAK,EAACC,KAAK,IAAIC,UAAWhE,IACjC,kBAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,OAAOC,UAAW/D,SCPhDgE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.704ff61a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.23968a8d.gif\";","import { createContext } from 'react';\n\nconst contadoresContext = createContext();\n\nexport default contadoresContext;\n","import React, { Fragment, useContext } from 'react';\nimport moment from 'moment';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport es from 'date-fns/locale/es';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\nregisterLocale('es', es);\n\nconst DateBox = () => {\n  const contadoresContext = useContext(ContadoresContext);\n  const { filtrarContadores, thisFecha, setFecha } = contadoresContext;\n\n  const dayForward = () => {\n    const dF = new Date(thisFecha.setDate(thisFecha.getDate() + 1));\n    setFecha(dF);\n    // filtrarContadores(dF);\n  };\n\n  const dayBackwards = () => {\n    const dB = new Date(thisFecha.setDate(thisFecha.getDate() - 1));\n    setFecha(dB);\n    // filtrarContadores(dB);\n  };\n\n  return (\n    <Fragment>\n      <div className='flex items-stretch'>\n        <button\n          className='border-box bg-gray-400 active:bg-gray-500 p-3 rounded-l focus:outline-none'\n          onClick={dayBackwards}\n        >\n          <i className='fas fa-chevron-left'></i>\n        </button>\n\n        <DatePicker\n          selected={thisFecha}\n          onChange={(date) => {\n            setFecha(date);\n            // filtrarContadores(date);\n          }}\n          todayButton='Hoy'\n          dateFormat='dd/MM/yyyy'\n          showPopperArrow={false}\n          popperPlacement='bottom'\n          locale='es'\n          placeholderText='Weeks start on Monday'\n          shouldCloseOnSelect={false}\n          className='bg-gray-300  w-40 py-3 pl-6 text-xl tracking-wide  text-gray-700 outline-none'\n          calendarClassName='font-sans border-none  text-lg tracking-wide opacity-100  '\n          wrapperClassName=''\n          popperClassName='border-none'\n        />\n\n        <button\n          className='bg-gray-400 active:bg-gray-500 p-3 rounded-r focus:outline-none'\n          onClick={dayForward}\n        >\n          <i className='fas fa-chevron-right'></i>\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default DateBox;\n","import React, { useState } from 'react';\nimport DateBox from './DateBox';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  const NavContent = [\n    { name: 'Inicio', h_ref: '/', id: '1' },\n    { name: 'Iniciar Sesión', h_ref: '#!', id: '3' },\n  ];\n  const [isExpanded, toggleExpansion] = useState(false);\n\n  return (\n    <nav className='flex bg-gray-100 p-3 flex-wrap border-b border-b-2 border-gray-200'>\n      <Link to='/' className='p-2 mr-4 inline-flex items-center border-r-2'>\n        <i className='fas fa-ghost fa-2x mx-2'></i>\n        <span className='text-xl text-gray font-bold uppercase tracking-wide'>\n          Ghost Climbers\n        </span>\n      </Link>\n      <DateBox />\n      <div className='md:hidden inline-flex flex-row ml-auto '>\n        <button\n          className='text-gray p-3 hover:bg-gray-300 rounded hover:text-gray outline-none'\n          onClick={() => toggleExpansion(!isExpanded)}\n        >\n          <i className='fas fa-bars'></i>\n        </button>\n      </div>\n      <div\n        className={`${\n          isExpanded ? `block` : `hidden`\n        }  top-navbar w-full md:inline-flex  md:flex-grow md:w-auto pt-2`}\n        id='navigation'\n      >\n        <div className='md:inline-flex md:flex-row md:ml-auto md:w-auto w-full md:items-center items-start  flex flex-col md:h-auto'>\n          {NavContent.map((content) => (\n            <Link\n              key={content.id}\n              to={content.h_ref}\n              className='md:inline-flex md:w-auto w-full px-3 py-2 rounded text-gray items-center justify-center hover:bg-gray-300 hover:text-gray'\n            >\n              <span>{content.name}</span>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","const isPast = (dOne) => {\n  const d1 = new Date(dOne);\n  const d2 = new Date(); // Today\n\n  return (\n    d1.getFullYear() < d2.getFullYear() ||\n    (d1.getMonth() < d2.getMonth() && d1.getFullYear() < d2.getFullYear()) ||\n    (d1.getDate() < d2.getDate() &&\n      d1.getMonth() < d2.getMonth() &&\n      d1.getFullYear() < d2.getFullYear())\n  );\n};\n\nexport default isPast;\n","import React from 'react';\n\nconst Spinner = () => {\n  return (\n    <div className='lds-ripple items-center justify-center mb-4 mr-4'>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect, useContext } from 'react';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\nimport isPast from '../../utils/isPast';\nimport Spinner from '../layout/Spinner';\nimport moment from 'moment';\n\nconst GhostCounter = ({ sb }) => {\n  const [counter, setCounter] = useState(0);\n  // Contador Global\n  const [contador, setContador] = useState(null);\n  // Contadores states\n  const contadoresContext = useContext(ContadoresContext);\n  const { addContador, setThisContador, thisFecha } = contadoresContext;\n\n  useEffect(() => {\n    if (sb) {\n      setContador(setThisContador(sb._id));\n      // eslint-disable-next-line\n    }\n  }, [sb, setThisContador]);\n\n  // add 1 to the couter\n  const countOne = () => {\n    if (counter <= 2) {\n      setCounter(counter + 1);\n      const contadorActualizado = {\n        subsector: {\n          _id: sb._id,\n        },\n        contador: 1,\n        fecha: thisFecha,\n      };\n\n      addContador(contadorActualizado, contador._id, sb.sector);\n    }\n  };\n\n  const resetCount = () => {\n    setCounter(0);\n    const contadorActualizado = {\n      subsector: {\n        _id: sb._id,\n      },\n      contador: -counter,\n      fecha: thisFecha,\n    };\n\n    addContador(contadorActualizado, contador._id, sb.sector);\n  };\n\n  return (\n    <div id='' className='relative flex pr-3 items-center justify-center'>\n      <button\n        className={` inline-block flex justify-center items-center rounded w-12 px-3 focus:outline-none ' \n          ${\n            contador &&\n            (moment(thisFecha).isBefore(moment(), 'day')\n              ? 'bg-gray-800 text-white'\n              : contador.contador === 0 && counter === 0\n              ? 'bg-blue-200 text-gray-500'\n              : 'bg-blue-500 text-white')\n          } \n            `}\n        onClick={countOne}\n        disabled={isPast(thisFecha)}\n      >\n        {contador ? <h5 className=''>{contador.contador}</h5> : <Spinner />}\n        <i className='fas fa-ghost ml-1'></i>\n      </button>\n      {counter > 0 ? (\n        <button\n          className='relative inset-y-0 inline-block bg-transparent focus:outline-none flex justify-center items-center text-sm  text-gray-500'\n          onClick={resetCount}\n        >\n          <i className='fas fa-undo ml-3 '></i>\n        </button>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\n//\n\nexport default React.memo(GhostCounter);\n","import React from 'react';\nimport GhostCounter from '../batches/GhostCounter';\n\nconst SubSectorCard = ({ sb }) => {\n  return (\n    <div>\n      <div\n        key={sb._id}\n        className='box-border flex items-center justify-center w-full h-full border-b hover:bg-gray-200'\n      >\n        <div className='w-full px-2 py-3'>\n          <p className=' text-lg mb-1 text-black '>{sb.nombre}</p>\n          <p className=' text-xs mb-1 text-gray-700 '>\n            {`Número de vías: ${sb.nVias}`}\n          </p>\n        </div>\n        <div className='w-full'>\n          <GhostCounter sb={sb} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SubSectorCard;\n","import React, { useContext } from 'react';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\n\nconst NoBorderBtn = ({ titulo, funcion }) => {\n  const contadoresContext = useContext(ContadoresContext);\n  const { getContadorSector, zonas } = contadoresContext;\n  return (\n    <div>\n      <button\n        className='text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1'\n        type='button'\n        style={{ transition: 'all .15s ease' }}\n        onClick={() => {\n          funcion(false);\n          // Obetener los contadores del sector actualizados\n          getContadorSector(zonas);\n        }}\n      >\n        {titulo}\n      </button>\n    </div>\n  );\n};\n\nexport default NoBorderBtn;\n","import React, { Fragment } from 'react';\nimport SubSectorCard from './SubSectorCard';\nimport NoBorderBtn from '../custom-buttons/NoBorderBtn';\n\nconst SubSectorModal = ({ setShowModal, subsectores, sector }) => {\n  return (\n    <Fragment>\n      <div className='justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none'>\n        <div className='relative w-screen  max-h-screen md:max-w-2xl my-4 mx-auto '>\n          {/*content*/}\n          <div className='rounded-t bg-gray-500 w-full h-full p-2 text-white flex items-center  justify-start '>\n            <h1 className='text-xl font-bold'>{sector}</h1>\n          </div>\n          <div className='border-0 flex flex-col w-full h-full bg-white outline-none focus:outline-none rounded-b'>\n            <div className='grid grid-cols-1 md:grid-cols-3  grid-flow-row-dense p-3 overflow-x-hidden'>\n              {subsectores &&\n                subsectores.map((sb) => <SubSectorCard key={sb._id} sb={sb} />)}\n            </div>\n            {/*footer*/}\n            <div className='flex items-center justify-end p-3 rounded-b'>\n              <NoBorderBtn\n                titulo={'Cerrar'}\n                funcion={() => setShowModal(false)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='opacity-25 fixed inset-0 z-40 bg-black'></div>\n    </Fragment>\n  );\n};\n\nexport default SubSectorModal;\n","import React from 'react';\n\nconst GhostTotal = ({ contador }) => {\n  return (\n    <div id='' className=' flex items-center justify-center px-3'>\n      <div\n        className={` inline-block flex justify-center items-center rounded w-12 px-3 focus:outline-none ' \n       ${\n         contador === 0 ? 'bg-blue-200 text-gray-500' : 'bg-blue-500 text-white'\n       }\n         `}\n      >\n        <h5 className=''>{contador}</h5>\n        <i className='fas fa-ghost ml-1'></i>\n      </div>\n    </div>\n  );\n};\n\nexport default GhostTotal;\n","import React, { useState, Fragment, useContext, useEffect } from 'react';\nimport SubSectorModal from '../zonas/SubSectorModal';\nimport GhostTotal from '../batches/GhostTotal';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\nimport Spinner from '../layout/Spinner';\nimport sameDay from '../../utils/sameDay';\n\n// Filter funcion for array of cotadores by date and sector\n// const setContador = (contadorArr, fecha, sectorId) => {\n//   const cont = contadorArr.filter((cS) => {\n//     return cS._id.sector === sectorId && sameDay(cS.fecha, fecha);\n//   });\n//   if (cont.length > 0) {\n//     const { contador: res } = cont.find(({ contador }) => contador);\n//     return res;\n//   } else {\n//     return 0;\n//   }\n// };\n\nconst SectorCard = ({ sector }) => {\n  const { nombre, subsectores } = sector;\n  const [showModal, setShowModal] = useState(false);\n  const [contador, setContador] = useState(null);\n\n  // Contadores states\n  const contadoresContext = useContext(ContadoresContext);\n  const {\n    contadorSector,\n    thisFecha,\n    filtrarContadores,\n    setThisContadorSector,\n  } = contadoresContext;\n\n  // const [contador, setContador] = useState(0);\n\n  useEffect(() => {\n    setContador(setThisContadorSector(sector._id));\n  }, [sector, setThisContadorSector]);\n\n  // if (contadorSector) {\n  //   contador = setContador(contadorSector, thisFecha, sector._id);\n  // }\n\n  return (\n    <Fragment>\n      <button\n        onClick={() => {\n          setShowModal(true);\n          filtrarContadores(thisFecha);\n        }}\n        className='inline-block flex justify-between  items-stretch md:items-center rounded shadow-lg m-3 md:w-64 bg-gray-300 focus:outline-none'\n      >\n        <div className='inline-block p-3  text-2xl'>{nombre}</div>\n        <div className='flex mr-3'>\n          {!contadorSector ? <Spinner /> : <GhostTotal contador={contador} />}\n        </div>\n      </button>\n      {showModal ? (\n        <div className='flex'>\n          <SubSectorModal\n            setShowModal={() => setShowModal()}\n            subsectores={subsectores}\n            sector={nombre}\n          />\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default SectorCard;\n","import React from 'react';\nimport SectorCard from './SectorCard';\n\nconst Zona = ({ zona }) => {\n  const { comuna, sector } = zona;\n  return (\n    <div className='box-border bg-gray-500 opacity-50s rounded  m-3 w-full md:w-auto h-auto'>\n      <div className='p-1 mx-1'>\n        <h1 className='text-2xl text-gray-100 font-bold'>{comuna}</h1>\n        <h3 className='text-lg self-end mb-1 font-hairline'>\n          {sector && sector[0].region}\n        </h3>\n      </div>\n      <div className='flex flex-col w-auto'>\n        {sector &&\n          sector.map((sector) => (\n            <SectorCard key={sector.id} sector={sector} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Zona;\n","import React from 'react';\nimport loading from './loading.gif';\nconst GhostLoading = () => {\n  return (\n    <div className='flex justify-center w-screen'>\n      <img\n        src={loading}\n        alt='Loading...'\n        style={{ width: '500px', margin: 'auto', display: 'block' }}\n      />\n    </div>\n  );\n};\n\nexport default GhostLoading;\n","import React, { useContext, useEffect } from 'react';\nimport Zona from './Zona';\nimport GhostLoading from '../layout/GhostLoading';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\n\nconst ZonasList = () => {\n  const contadoresContext = useContext(ContadoresContext);\n  const {\n    zonas,\n    getZonas,\n    loadingZonas,\n    getContadores,\n    getContadorSector,\n    filtrarContadores,\n    clearFilter,\n    contadores,\n    contadorSector,\n    thisFecha,\n  } = contadoresContext;\n\n  // const loadingCont = contadoresContext.loading;\n\n  useEffect(() => {\n    getZonas();\n    getContadores();\n\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    getContadorSector(zonas);\n    // eslint-disable-next-line\n  }, [zonas]);\n\n  useEffect(() => {\n    // clearFilter();\n    if (contadores && contadorSector) {\n      filtrarContadores(thisFecha);\n    }\n    // eslint-disable-next-line\n  }, [contadores, contadorSector, thisFecha]);\n\n  if (zonas !== null && zonas.length === 0 && !loadingZonas) {\n    return <h4> Error </h4>;\n  }\n\n  return (\n    <div className='flex flex-wrap items-baseline'>\n      {loadingZonas ? (\n        <GhostLoading />\n      ) : (\n        zonas && zonas.map((zona) => <Zona key={zona.comuna} zona={zona} />)\n      )}\n    </div>\n  );\n};\n\nexport default ZonasList;\n","import React, { Fragment } from 'react';\nimport Navbar from '../layout/Navbar';\nimport ZonasList from '../zonas/ZonasList';\n\nconst Home = () => {\n  return (\n    <Fragment>\n      <Navbar />\n      <div className='flex'>\n        <ZonasList />\n      </div>\n      <footer className='bg-gray-100 h-64 flex justify-center items-center '>\n        <p> Todos los derechos reservados {'\\u00A9'} </p>\n      </footer>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport DateBox from '../layout/DateBox';\n\nconst Dev = () => {\n  return (\n    <div className='h-screen w-screen flex justify-center items-center'>\n      <div className='mt-20'>\n        <DateBox />\n        <div className='w-32 h-screen'></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dev;\n","import {\n  GET_CONTADORES,\n  GET_ZONAS,\n  GET_CONTADORES_SECTOR,\n  ADD_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  UPDATE_CONTADORES,\n  FILTRAR_CONTADORES,\n  CLEAR_FILTER,\n  SET_FECHA,\n  LOADING_ZONAS,\n} from '../types';\n\nimport moment from 'moment';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_ZONAS:\n      return { ...state, loadingZonas: false, zonas: action.payload };\n    case LOADING_CONTADORES:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOADING_ZONAS:\n      return {\n        ...state,\n        loadingZonas: true,\n      };\n    case SET_FECHA:\n      return {\n        ...state,\n        thisFecha: action.payload,\n      };\n    case GET_CONTADORES:\n      return {\n        ...state,\n        contadores: action.payload,\n        loading: false,\n      };\n    case GET_CONTADORES_SECTOR:\n      return {\n        ...state,\n        contadorSector: action.payload,\n        loading: false,\n      };\n\n    case UPDATE_CONTADORES:\n      return {\n        ...state,\n        contadores: state.contadores.map((contador) =>\n          contador._id === action.payload._id ? action.payload : contador\n        ),\n        // contadorSector: state.contadorSector.map((cS) =>\n        //   cS._id.sector === action.payload.sectorId &&\n        //   moment(cS.fecha).isSame(action.payload.fecha, 'day')\n        //     ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n        //     : cS\n        // ),\n        loading: false,\n      };\n    case ADD_CONTADORES:\n      return {\n        ...state,\n        contadores: [...state.contadores, action.payload],\n        // contadorSector: state.contadorSector.map((cS) =>\n        //   cS._id.sector === action.payload.sectorId &&\n        //   moment(cS.fecha).isSame(action.payload.fecha, 'day')\n        //     ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n        //     : cS\n        // ),\n      };\n    case FILTRAR_CONTADORES:\n      return {\n        ...state,\n        contadoresDay: state.contadores.filter((cont) =>\n          moment(cont.fecha).isSame(action.payload, 'day')\n        ),\n        contadorSectorDay: state.contadorSector.filter((cont) =>\n          moment(cont.fecha).isSame(action.payload, 'day')\n        ),\n        loading: false,\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        contadoresDay: null,\n        contadorSectorDay: null,\n      };\n    case ERROR_CONTADORES:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const GET_ZONAS = 'GET_ZONAS';\nexport const GET_CONTADORES = 'GET_CONTADORES';\nexport const GET_CONTADORES_SECTOR = 'GET_CONTADORES_SECTOR';\nexport const ADD_CONTADORES = 'ADD_CONTADORES';\nexport const ADD_CONTADOR_SECTOR = 'ADD_CONTADOR_SECTOR';\nexport const LOADING_CONTADORES = 'LOADING_CONTADORES';\nexport const ERROR_CONTADORES = 'ERROR_CONTADORES';\nexport const UPDATE_CONTADORES = 'UPDATE_CONTADORES';\nexport const FILTRAR_CONTADORES = 'FILTRAR_CONTADORES';\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\nexport const SET_FECHA = 'SET_FECHA';\nexport const LOADING_ZONAS = 'LOADING_ZONAS';\n","const renameKeys = (keysMap, obj) =>\n  Object.keys(obj).reduce(\n    (acc, key) => ({\n      ...acc,\n      ...{ [keysMap[key] || key]: obj[key] },\n    }),\n    {}\n  );\n\nexport default renameKeys;\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport ContadoresContext from './contadoresContext';\nimport contadoresReducer from './contadoresReducer';\n\nimport groupBy from 'lodash/groupBy';\nimport renameKeys from '../../utils/renameKeys';\n\nimport {\n  GET_CONTADORES,\n  GET_ZONAS,\n  ADD_CONTADORES,\n  LOADING_CONTADORES,\n  LOADING_ZONAS,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n  FILTRAR_CONTADORES,\n  CLEAR_FILTER,\n  SET_FECHA,\n} from '../types';\nimport moment from 'moment';\n\nconst ContadoresState = (props) => {\n  const initialState = {\n    zonas: null,\n    contadores: null,\n    contadoresDay: null,\n    contadorSector: null,\n    contadorSectorDay: null,\n    thisFecha: new Date(),\n    loading: false,\n    loadingZonas: false,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contadoresReducer, initialState);\n\n  // Loading contadores\n  const loadingContadores = () => {\n    dispatch({ type: LOADING_CONTADORES });\n  };\n  // Loading\n  const setLoadingZonas = () => {\n    dispatch({ type: LOADING_ZONAS });\n  };\n\n  // Get Zonas\n  const getZonas = async () => {\n    setLoadingZonas();\n    try {\n      const res = await axios.get('/api/v1/sectores');\n\n      let zonas = res.data.data;\n\n      zonas = Object.entries(groupBy(zonas, 'comuna')).map((zona) =>\n        renameKeys({ 0: 'comuna', 1: 'sector' }, zona)\n      );\n\n      dispatch({ type: GET_ZONAS, payload: zonas });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Obtener contadores por subsector\n  const getContadores = async () => {\n    loadingContadores();\n    try {\n      const res = await axios.get(`/api/v1/contadores`);\n\n      let contadores = res.data.data;\n\n      dispatch({ type: GET_CONTADORES, payload: contadores });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Obtener contadores por sector\n  const getContadorSector = async (zonas) => {\n    loadingContadores();\n    try {\n      const sectores = zonas.map((z) => z.sector);\n\n      const sectoresId = [];\n\n      for (let i = 0; i < sectores.length; i++) {\n        sectores[i].map((s) => sectoresId.push(s._id));\n      }\n\n      const res = await Promise.all(\n        sectoresId.map((id) => axios.get(`/api/v1/sectores/${id}/contadores`))\n      );\n\n      const contadorSector = res.map((p) => p.data.data).flat(2);\n\n      dispatch({ type: GET_CONTADORES_SECTOR, payload: contadorSector });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Add contador\n  const addContador = async (contador, contadorId, sectorId) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    if (!contadorId) {\n      try {\n        const res = await axios.post(\n          `/api/v1/subsectores/${contador.subsector._id}/contadores/`,\n          contador,\n          config\n        );\n\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n\n        dispatch({ type: ADD_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    } else {\n      try {\n        const res = await axios.put(\n          `/api/v1/contadores/${contadorId}`,\n          contador,\n          config\n        );\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n\n        dispatch({ type: UPDATE_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    }\n  };\n\n  // Filtrar contador para subsector\n  const setThisContador = (subsectorId) => {\n    if (state.contadores) {\n      let contador = state.contadores.filter(\n        (cont) =>\n          (cont.subsector._id === subsectorId ||\n            cont.subsector === subsectorId) &&\n          moment(cont.fecha).isSame(state.thisFecha, 'day')\n      );\n\n      if (contador.length === 0) {\n        contador = [\n          {\n            subsector: {\n              _id: subsectorId,\n            },\n            fecha: state.thisFecha,\n            contador: 0,\n            dbStatus: 401,\n          },\n        ];\n      }\n\n      return contador[0];\n    }\n  };\n\n  const setThisContadorSector = (sectorId) => {\n    if (state.contadorSector) {\n      const cont = state.contadorSector.filter(\n        (cS) =>\n          cS._id.sector === sectorId &&\n          moment(cS.fecha).isSame(state.thisFecha, 'day')\n      );\n\n      if (cont.length > 0) {\n        const { contador: res } = cont.find(({ contador }) => contador);\n        return res;\n      } else {\n        return 0;\n      }\n    }\n  };\n\n  // Fijar fecha\n  const setFecha = (fecha) => {\n    dispatch({ type: SET_FECHA, payload: fecha });\n  };\n\n  // Filtrar contadores por día seleccionado\n  const filtrarContadores = (fecha) => {\n    loadingContadores();\n    dispatch({ type: FILTRAR_CONTADORES, payload: fecha });\n  };\n\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContadoresContext.Provider\n      value={{\n        zonas: state.zonas,\n        contadores: state.contadores,\n        contadoresDay: state.contadoresDay,\n        contadorSector: state.contadorSector,\n        contadorSectorDay: state.contadorSectorDay,\n        thisFecha: state.thisFecha,\n        loading: state.loading,\n        loadingZonas: state.loadingZonas,\n        error: state.error,\n        getZonas,\n        getContadores,\n        loadingContadores,\n        getContadorSector,\n        addContador,\n        setThisContador,\n        setThisContadorSector,\n        filtrarContadores,\n        setFecha,\n        clearFilter,\n        setLoadingZonas,\n      }}\n    >\n      {props.children}\n    </ContadoresContext.Provider>\n  );\n};\n\nexport default ContadoresState;\n","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport Dev from './components/pages/Dev';\nimport ContadoresState from './context/contadores/ContadoresState';\n\nfunction App() {\n  return (\n    <div className='App h-screen'>\n      <ContadoresState>\n        <Router>\n          <Fragment>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/dev' component={Dev} />\n          </Fragment>\n        </Router>\n      </ContadoresState>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}