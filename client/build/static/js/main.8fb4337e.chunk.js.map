{"version":3,"sources":["components/layout/Navbar.js","context/zonas/zonasContext.js","context/contadores/contadoresContext.js","components/batches/GhostCounter.js","components/zonas/SubSectorCard.js","components/custom-buttons/BorderBtn.js","components/custom-buttons/NoBorderBtn.js","components/zonas/SubSectorModal.js","components/batches/GhostTotal.js","components/layout/Spinner.js","components/zonas/SectorCard.js","components/zonas/Zona.js","components/layout/GhostLoading.js","components/zonas/ZonasList.js","components/pages/Home.js","utils/renameKeys.js","context/zonas/zonasReducer.js","context/types.js","context/zonas/ZonasState.js","context/contadores/contadoresReducer.js","context/contadores/ContadoresState.js","App.js","index.js","components/layout/loading.gif"],"names":["Navbar","useState","isExpanded","toggleExpansion","className","to","onClick","id","name","h_ref","map","content","key","zonasContext","createContext","contadoresContext","GhostCounter","sb","counter","setCounter","contador","setContador","useContext","ContadoresContext","addContador","setThisContador","useEffect","_id","contadorActualizado","subsector","fecha","Date","now","SubSectorCard","nombre","nVias","BorderBtn","titulo","funcion","type","style","transition","NoBorderBtn","SubSectorModal","setShowModal","subsectores","sector","GhostTotal","loading","Spinner","SectorCard","showModal","contadorSector","filter","cS","Zona","zona","comuna","region","GhostLoading","src","alt","width","margin","display","ZonasList","ZonasContext","zonas","getZonas","getContadores","getContadorSector","contadores","addContadores","length","Home","renameKeys","keysMap","obj","Object","keys","reduce","acc","state","action","payload","error","ZonasState","props","useReducer","zonasReducer","current","filtered","dispatch","loadingZonas","a","axios","get","res","data","entries","groupBy","0","1","response","Provider","value","children","ContadoresState","contadoresReducer","loadingContadores","sectores","z","sectoresId","i","s","push","Promise","all","p","contadorId","config","headers","post","msg","put","subsectorId","cont","dbStatus","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8fb4337e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  const NavContent = [\n    { name: 'Inicio', h_ref: '/', id: '1' },\n    { name: 'Iniciar Sesión', h_ref: '#!', id: '3' },\n  ];\n  const [isExpanded, toggleExpansion] = useState(false);\n\n  return (\n    <nav className='flex bg-gray-100 p-3 flex-wrap border-b border-b-2 border-gray-200'>\n      <Link to='/' className='p-2 mr-4 inline-flex items-center border-r-2'>\n        <i className='fas fa-ghost fa-2x mx-2'></i>\n        <span className='text-xl text-gray font-bold uppercase tracking-wide'>\n          Ghost Climbers\n        </span>\n      </Link>\n\n      <div className='md:hidden inline-flex flex-row ml-auto '>\n        <button\n          className='text-gray p-3 hover:bg-gray-300 rounded hover:text-gray outline-none'\n          onClick={() => toggleExpansion(!isExpanded)}\n        >\n          <i className='fas fa-bars'></i>\n        </button>\n      </div>\n      <div\n        className={`${\n          isExpanded ? `block` : `hidden`\n        }  top-navbar w-full md:inline-flex  md:flex-grow md:w-auto pt-2`}\n        id='navigation'\n      >\n        <div className='md:inline-flex md:flex-row md:ml-auto md:w-auto w-full md:items-center items-start  flex flex-col md:h-auto'>\n          {NavContent.map((content) => (\n            <Link\n              key={content.id}\n              to={content.h_ref}\n              className='md:inline-flex md:w-auto w-full px-3 py-2 rounded text-gray items-center justify-center hover:bg-gray-300 hover:text-gray'\n            >\n              <span>{content.name}</span>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { createContext } from 'react';\n\nconst zonasContext = createContext();\n\nexport default zonasContext;\n","import { createContext } from 'react';\n\nconst contadoresContext = createContext();\n\nexport default contadoresContext;\n","import React, { useState, useEffect, useContext } from 'react';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\n\nconst GhostCounter = ({ sb }) => {\n  const [counter, setCounter] = useState(0);\n  const [contador, setContador] = useState(0);\n  // Contadores states\n  const contadoresContext = useContext(ContadoresContext);\n  const { addContador, setThisContador } = contadoresContext;\n\n  // add 1 to the couter\n  const countOne = () => {\n    if (counter <= 2) {\n      let count = counter + 1;\n      setCounter(count);\n      const contadorActualizado = {\n        subsector: {\n          _id: sb._id,\n        },\n        contador: 1,\n        fecha: Date.now(),\n      };\n\n      addContador(contadorActualizado, contador._id);\n    }\n  };\n\n  const resetCount = () => {\n    setCounter(0);\n    const contadorActualizado = {\n      subsector: {\n        _id: sb._id,\n      },\n      contador: -counter,\n      fecha: Date.now(),\n    };\n\n    addContador(contadorActualizado, contador._id);\n  };\n\n  useEffect(() => {\n    if (sb) {\n      setContador(setThisContador(sb._id));\n      // eslint-disable-next-line\n    }\n  }, [sb, setThisContador]);\n\n  return (\n    <div id='' className='relative flex pr-3 items-center justify-center'>\n      <button\n        className={` inline-block flex justify-center items-center rounded w-12 px-3 focus:outline-none ' \n          ${\n            contador.contador === 0 && counter === 0\n              ? 'bg-blue-200 text-gray-500'\n              : 'bg-blue-500 text-white'\n          }\n            `}\n        onClick={countOne}\n      >\n        {contador && <h5 className=''>{contador.contador}</h5>}\n        <i className='fas fa-ghost ml-1'></i>\n      </button>\n      {counter > 0 ? (\n        <button\n          className='relative inset-y-0 inline-block bg-transparent focus:outline-none flex justify-center items-center text-sm  text-gray-500'\n          onClick={resetCount}\n        >\n          <i className='fas fa-undo ml-3 '></i>\n        </button>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\n//\n\nexport default GhostCounter;\n","import React from 'react';\nimport GhostCounter from '../batches/GhostCounter';\n\nconst SubSectorCard = ({ sb }) => {\n  return (\n    <div>\n      <div\n        key={sb._id}\n        className='box-border flex items-center justify-center w-full h-full border-b hover:bg-gray-200'\n      >\n        <div className='w-full px-2 py-3'>\n          <p className=' text-lg mb-1 text-black '>{sb.nombre}</p>\n          <p className=' text-xs mb-1 text-gray-700 '>\n            {`Número de vías: ${sb.nVias}`}\n          </p>\n        </div>\n        <div className='w-full'>\n          <GhostCounter sb={sb} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SubSectorCard;\n","import React from 'react';\n\nconst BorderBtn = ({ titulo, funcion }) => {\n  return (\n    <div>\n      <button\n        className={`bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1`}\n        type='button'\n        style={{ transition: 'all .15s ease' }}\n        onClick={() => funcion(false)}\n      >\n        {titulo}\n      </button>\n    </div>\n  );\n};\n\nexport default BorderBtn;\n","import React from 'react';\n\nconst NoBorderBtn = ({ titulo, funcion }) => {\n  return (\n    <div>\n      <button\n        className='text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1'\n        type='button'\n        style={{ transition: 'all .15s ease' }}\n        onClick={() => funcion(false)}\n      >\n        {titulo}\n      </button>\n    </div>\n  );\n};\n\nexport default NoBorderBtn;\n","import React, { Fragment } from 'react';\nimport SubSectorCard from './SubSectorCard';\nimport BorderBtn from '../custom-buttons/BorderBtn';\nimport NoBorderBtn from '../custom-buttons/NoBorderBtn';\n\nconst SubSectorModal = ({ setShowModal, subsectores, sector }) => {\n  return (\n    <Fragment>\n      <div className='justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none'>\n        <div className='relative w-screen  max-h-screen md:max-w-2xl my-4 mx-auto '>\n          {/*content*/}\n          <div className='rounded-t bg-gray-500 w-full h-full p-2 text-white flex items-center  justify-start '>\n            <h1 className='text-xl font-bold'>{sector}</h1>\n          </div>\n          <div className='border-0 flex flex-col w-full h-full bg-white outline-none focus:outline-none rounded-b'>\n            <div className='grid grid-cols-1 md:grid-cols-3  grid-flow-row-dense p-3 overflow-x-hidden'>\n              {subsectores &&\n                subsectores.map((sb) => <SubSectorCard key={sb._id} sb={sb} />)}\n            </div>\n            {/*footer*/}\n            <div className='flex items-center justify-end p-3 rounded-b'>\n              <NoBorderBtn\n                titulo={'Cerrar'}\n                funcion={() => setShowModal(false)}\n              />\n              <BorderBtn\n                titulo={'Guardar'}\n                funcion={() => setShowModal(false)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='opacity-25 fixed inset-0 z-40 bg-black'></div>\n    </Fragment>\n  );\n};\n\nexport default SubSectorModal;\n","import React from 'react';\n\nconst GhostTotal = ({ contador, loading }) => {\n  return (\n    <div id='' className=' flex items-center justify-center px-3'>\n      <div\n        className={` inline-block flex justify-center items-center rounded w-12 px-3 focus:outline-none ' \n       ${\n         contador === 0 || !contador\n           ? 'bg-blue-200 text-gray-500'\n           : 'bg-blue-500 text-white'\n       }\n         `}\n      >\n        <h5 className=''>{loading ? 0 : contador}</h5>\n        <i className='fas fa-ghost ml-1'></i>\n      </div>\n    </div>\n  );\n};\n\nexport default GhostTotal;\n","import React from 'react';\n\nconst Spinner = () => {\n  return (\n    <div className='lds-ripple'>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, Fragment, useContext } from 'react';\nimport SubSectorModal from '../zonas/SubSectorModal';\nimport GhostTotal from '../batches/GhostTotal';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\nimport Spinner from '../layout/Spinner';\n\nconst SectorCard = ({ sector }) => {\n  const { nombre, subsectores } = sector;\n  const [showModal, setShowModal] = useState(false);\n\n  // Contadores states\n  const contadoresContext = useContext(ContadoresContext);\n  const { contadorSector, loading } = contadoresContext;\n\n  let contador;\n  if (contadorSector) {\n    const cont = contadorSector.filter((cS) => cS._id.sector === sector._id);\n    contador = cont[0].contador;\n  }\n\n  return (\n    <Fragment>\n      <button\n        onClick={() => setShowModal(true)}\n        className='inline-block flex justify-between  items-stretch md:items-center rounded shadow-lg m-3 md:w-64 bg-gray-300 focus:outline-none'\n      >\n        <div className='inline-block p-3  text-2xl'>{nombre}</div>\n        <div className='flex mr-3'>\n          {loading ? (\n            <Spinner />\n          ) : (\n            <GhostTotal contador={contador} loading={loading} />\n          )}\n        </div>\n      </button>\n      {showModal ? (\n        <div className='flex'>\n          <SubSectorModal\n            setShowModal={() => setShowModal()}\n            subsectores={subsectores}\n            sector={nombre}\n          />\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default SectorCard;\n","import React from 'react';\nimport SectorCard from './SectorCard';\n\nconst Zona = ({ zona }) => {\n  const { comuna, sector } = zona;\n  return (\n    <div className='box-border border-2 rounded border-gray-400 m-3 w-full md:w-auto h-auto'>\n      <div className='p-1 mx-1'>\n        <h1 className='text-2xl'>{comuna}</h1>\n        <h3 className='text-lg self-end mb-1'>{sector && sector[0].region}</h3>\n      </div>\n      <div className='flex flex-col w-auto'>\n        {sector &&\n          sector.map((sector) => (\n            <SectorCard key={sector.id} sector={sector} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Zona;\n","import React from 'react';\nimport loading from './loading.gif';\nconst GhostLoading = () => {\n  return (\n    <div className='flex justify-center w-screen'>\n      <img\n        src={loading}\n        alt='Loading...'\n        style={{ width: '500px', margin: 'auto', display: 'block' }}\n      />\n    </div>\n  );\n};\n\nexport default GhostLoading;\n","import React, { useContext, useEffect } from 'react';\n// import { useAsync } from 'react-async-hook';\nimport ZonasContext from '../../context/zonas/zonasContext';\nimport Zona from './Zona';\nimport GhostLoading from '../layout/GhostLoading';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\n\nconst ZonasList = () => {\n  const zonasContext = useContext(ZonasContext);\n  const { zonas, getZonas, loading } = zonasContext;\n\n  const contadoresContext = useContext(ContadoresContext);\n  const {\n    getContadores,\n    getContadorSector,\n    contadores,\n    addContadores,\n  } = contadoresContext;\n\n  // const loadingCont = contadoresContext.loading;\n\n  useEffect(() => {\n    getZonas();\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    getContadores();\n    // eslint-disable-next-line\n  }, [addContadores]);\n\n  useEffect(() => {\n    getContadorSector(zonas);\n    // eslint-disable-next-line\n  }, [zonas, contadores]);\n\n  if (zonas !== null && zonas.length === 0 && !loading) {\n    return <h4> Error </h4>;\n  }\n\n  return (\n    <div className='flex flex-wrap items-baseline'>\n      {loading & !zonas ? (\n        <GhostLoading />\n      ) : (\n        zonas && zonas.map((zona) => <Zona key={zona.comuna} zona={zona} />)\n      )}\n    </div>\n  );\n};\n\nexport default ZonasList;\n","import React, { Fragment } from 'react';\nimport Navbar from '../layout/Navbar';\nimport ZonasList from '../zonas/ZonasList';\n\nconst Home = () => {\n  return (\n    <Fragment>\n      <Navbar />\n      <div className='flex'>\n        <ZonasList />\n      </div>\n      <footer className='bg-gray-100 h-40 '></footer>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","const renameKeys = (keysMap, obj) =>\n  Object.keys(obj).reduce(\n    (acc, key) => ({\n      ...acc,\n      ...{ [keysMap[key] || key]: obj[key] },\n    }),\n    {}\n  );\n\nexport default renameKeys;\n","import { GET_ZONAS, ZONAS_ERROR, LOADING_ZONAS } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_ZONAS:\n      return { ...state, loading: false, zonas: action.payload };\n    case LOADING_ZONAS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ZONAS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const GET_ZONAS = 'GET_ZONAS';\nexport const ZONAS_ERROR = 'ZONAS_ERROR';\nexport const LOADING_ZONAS = 'LOADING_ZONAS';\n\nexport const GET_CONTADORES = 'GET_CONTADORES';\nexport const GET_CONTADORES_SECTOR = 'GET_CONTADORES_SECTOR';\nexport const ADD_CONTADORES = 'ADD_CONTADORES';\nexport const REST_CONTADORES = 'REST_CONTADORES';\nexport const LOADING_CONTADORES = 'LOADING_CONTADORES';\nexport const ERROR_CONTADORES = 'ERROR_CONTADORES';\nexport const UPDATE_CONTADORES = 'UPDATE_CONTADORES';\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport groupBy from 'lodash/groupBy';\nimport renameKeys from '../../utils/renameKeys';\n\nimport ZonasContext from './zonasContext';\nimport zonasReducer from './zonasReducer';\n\nimport { GET_ZONAS, ZONAS_ERROR, LOADING_ZONAS } from '../types';\n\nconst ZonasState = (props) => {\n  const initialState = {\n    zonas: null,\n    loading: false,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(zonasReducer, initialState);\n\n  // Loading\n  const loadingZonas = () => {\n    const loading = true;\n    dispatch({ type: LOADING_ZONAS, payload: loading });\n  };\n\n  // Get Zonas\n  const getZonas = async () => {\n    try {\n      loadingZonas();\n      const res = await axios.get('/api/v1/sectores');\n\n      let zonas = res.data.data;\n\n      zonas = Object.entries(groupBy(zonas, 'comuna')).map((zona) =>\n        renameKeys({ 0: 'comuna', 1: 'sector' }, zona)\n      );\n\n      dispatch({ type: GET_ZONAS, payload: zonas });\n    } catch (err) {\n      dispatch({ type: ZONAS_ERROR, payload: err.response });\n    }\n  };\n\n  // // Filter Contacts\n  // const filterContacts = (text) => {\n  //   dispatch({ type: FILTER_CONTACTS, payload: text });\n  // };\n\n  // // Clear Filter\n  // const clearFilter = () => {\n  //   dispatch({ type: CLEAR_FILTER });\n  // };\n\n  // // Clear Contacts\n\n  // const clearContacts = () => dispatch({ type: CLEAR_CONTACTS });\n\n  return (\n    <ZonasContext.Provider\n      value={{\n        zonas: state.zonas,\n        loading: state.loading,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        // filterContacts,\n        // clearFilter,\n        getZonas,\n        // clearContacts,\n        loadingZonas,\n      }}\n    >\n      {props.children}\n    </ZonasContext.Provider>\n  );\n};\n\nexport default ZonasState;\n","import {\n  GET_CONTADORES,\n  ADD_CONTADORES,\n  REST_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOADING_CONTADORES:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_CONTADORES:\n      return {\n        ...state,\n        contadores: action.payload,\n        loading: false,\n      };\n    case GET_CONTADORES_SECTOR:\n      return {\n        ...state,\n        contadorSector: action.payload,\n        loading: false,\n      };\n    case UPDATE_CONTADORES:\n      return {\n        ...state,\n        contadores: state.contadores.map((contador) =>\n          contador._id === action.payload._id ? action.payload : contador\n        ),\n        loading: false,\n      };\n    case ADD_CONTADORES:\n      return {\n        ...state,\n        contadores: [...state.contadores, action.payload],\n      };\n    case ERROR_CONTADORES:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport ContadoresContext from './contadoresContext';\nimport contadoresReducer from './contadoresReducer';\n\nimport {\n  GET_CONTADORES,\n  ADD_CONTADORES,\n  REST_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n} from '../types';\n\nconst ContadoresState = (props) => {\n  const initialState = {\n    contadores: null,\n    contadorSector: null,\n    loading: false,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contadoresReducer, initialState);\n\n  // Loading\n  const loadingContadores = () => {\n    const loading = true;\n    dispatch({ type: LOADING_CONTADORES, payload: loading });\n  };\n\n  // Obtener contadores por subsector\n  const getContadores = async () => {\n    try {\n      loadingContadores();\n\n      const res = await axios.get(`/api/v1/contadores`);\n\n      let contadores = res.data.data;\n\n      dispatch({ type: GET_CONTADORES, payload: contadores });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Obtener contadores por sector\n  const getContadorSector = async (zonas) => {\n    try {\n      loadingContadores();\n\n      const sectores = zonas.map((z) => z.sector);\n      const sectoresId = [];\n\n      for (let i = 0; i < sectores.length; i++) {\n        sectores[i].map((s) => sectoresId.push(s._id));\n      }\n\n      const res = await Promise.all(\n        sectoresId.map((id) => axios.get(`/api/v1/sectores/${id}/contadores`))\n      );\n\n      const contadorSector = res.map((p) => p.data.data);\n\n      dispatch({ type: GET_CONTADORES_SECTOR, payload: contadorSector });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Add contador\n  const addContador = async (contador, contadorId) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    if (!contadorId) {\n      try {\n        const res = await axios.post(\n          `/api/v1/subsectores/${contador.subsector._id}/contadores/`,\n          contador,\n          config\n        );\n        dispatch({ type: ADD_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    } else {\n      try {\n        const res = await axios.put(\n          `/api/v1/contadores/${contadorId}`,\n          contador,\n          config\n        );\n        dispatch({ type: UPDATE_CONTADORES, payload: res.data.data });\n\n        // dispatch({ type: ADD_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    }\n  };\n\n  const setThisContador = (subsectorId) => {\n    if (state.contadores) {\n      let contador = state.contadores.filter(\n        (cont) =>\n          cont.subsector._id === subsectorId || cont.subsector === subsectorId\n      );\n\n      if (contador.length === 0) {\n        contador = [\n          {\n            subsector: {\n              _id: subsectorId,\n            },\n            fecha: Date.now(),\n            contador: 0,\n            dbStatus: 401,\n          },\n        ];\n      }\n\n      return contador[0];\n    }\n  };\n\n  return (\n    <ContadoresContext.Provider\n      value={{\n        contadores: state.contadores,\n        contadorSector: state.contadorSector,\n        loading: state.loading,\n        error: state.error,\n        getContadores,\n        loadingContadores,\n        getContadorSector,\n        addContador,\n        setThisContador,\n      }}\n    >\n      {props.children}\n    </ContadoresContext.Provider>\n  );\n};\n\nexport default ContadoresState;\n","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport ZonasState from './context/zonas/ZonasState';\nimport ContadoresState from './context/contadores/ContadoresState';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <ZonasState>\n        <ContadoresState>\n          <Router>\n            <Fragment>\n              <Route exact path='/' component={Home} />\n            </Fragment>\n          </Router>\n        </ContadoresState>\n      </ZonasState>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/loading.23968a8d.gif\";"],"sourceRoot":""}