{"ast":null,"code":"import _toConsumableArray from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_CONTADORES,ADD_CONTADORES,LOADING_CONTADORES,ERROR_CONTADORES,GET_CONTADORES_SECTOR,UPDATE_CONTADORES,FILTRAR_CONTADORES,SET_FECHA,ADD_CONTADOR_SECTOR}from'../types';import sameDay from'../../utils/sameDay';export default(function(state,action){switch(action.type){case LOADING_CONTADORES:return _objectSpread(_objectSpread({},state),{},{loading:true});case SET_FECHA:return _objectSpread(_objectSpread({},state),{},{thisFecha:action.payload});case GET_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadores:action.payload,loading:false});case GET_CONTADORES_SECTOR:return _objectSpread(_objectSpread({},state),{},{contadorSector:action.payload,loading:false});case UPDATE_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadores:state.contadores.map(function(contador){return contador._id===action.payload._id?action.payload:contador;}),contadorSector:state.contadorSector.map(function(cS){return cS._id.sector===action.payload.sectorId?_objectSpread(_objectSpread({},cS),{},{contador:cS.contador+action.payload.deltaContador}):cS;}),loading:false});case ADD_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadores:[].concat(_toConsumableArray(state.contadores),[action.payload]),contadorSector:state.contadorSector.map(function(cS){return cS._id.sector===action.payload.sectorId?_objectSpread(_objectSpread({},cS),{},{contador:cS.contador+action.payload.deltaContador}):cS;})});case ADD_CONTADOR_SECTOR:return _objectSpread(_objectSpread({},state),{},{contadorSector:[].concat(_toConsumableArray(state.contadorSector),[action.payload])});case FILTRAR_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadoresDay:state.contadores.filter(function(cont){return sameDay(cont.fecha,action.payload);}),contadorSectorDay:state.contadorSector.filter(function(cont){return sameDay(cont.fecha,action.payload);}),loading:false});case ERROR_CONTADORES:return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});default:return state;}});","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/contadoresReducer.js"],"names":["GET_CONTADORES","ADD_CONTADORES","LOADING_CONTADORES","ERROR_CONTADORES","GET_CONTADORES_SECTOR","UPDATE_CONTADORES","FILTRAR_CONTADORES","SET_FECHA","ADD_CONTADOR_SECTOR","sameDay","state","action","type","loading","thisFecha","payload","contadores","contadorSector","map","contador","_id","cS","sector","sectorId","deltaContador","contadoresDay","filter","cont","fecha","contadorSectorDay","error"],"mappings":"mVAAA,OACEA,cADF,CAEEC,cAFF,CAGEC,kBAHF,CAIEC,gBAJF,CAKEC,qBALF,CAMEC,iBANF,CAOEC,kBAPF,CAQEC,SARF,CASEC,mBATF,KAUO,UAVP,CAYA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CAEA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKV,CAAAA,kBAAL,CACE,sCACKQ,KADL,MAEEG,OAAO,CAAE,IAFX,GAIF,IAAKN,CAAAA,SAAL,CACE,sCACKG,KADL,MAEEI,SAAS,CAAEH,MAAM,CAACI,OAFpB,GAIF,IAAKf,CAAAA,cAAL,CACE,sCACKU,KADL,MAEEM,UAAU,CAAEL,MAAM,CAACI,OAFrB,CAGEF,OAAO,CAAE,KAHX,GAKF,IAAKT,CAAAA,qBAAL,CACE,sCACKM,KADL,MAEEO,cAAc,CAAEN,MAAM,CAACI,OAFzB,CAGEF,OAAO,CAAE,KAHX,GAMF,IAAKR,CAAAA,iBAAL,CACE,sCACKK,KADL,MAEEM,UAAU,CAAEN,KAAK,CAACM,UAAN,CAAiBE,GAAjB,CAAqB,SAACC,QAAD,QAC/BA,CAAAA,QAAQ,CAACC,GAAT,GAAiBT,MAAM,CAACI,OAAP,CAAeK,GAAhC,CAAsCT,MAAM,CAACI,OAA7C,CAAuDI,QADxB,EAArB,CAFd,CAKEF,cAAc,CAAEP,KAAK,CAACO,cAAN,CAAqBC,GAArB,CAAyB,SAACG,EAAD,QACvCA,CAAAA,EAAE,CAACD,GAAH,CAAOE,MAAP,GAAkBX,MAAM,CAACI,OAAP,CAAeQ,QAAjC,gCACSF,EADT,MACaF,QAAQ,CAAEE,EAAE,CAACF,QAAH,CAAcR,MAAM,CAACI,OAAP,CAAeS,aADpD,GAEIH,EAHmC,EAAzB,CALlB,CAUER,OAAO,CAAE,KAVX,GAYF,IAAKZ,CAAAA,cAAL,CACE,sCACKS,KADL,MAEEM,UAAU,8BAAMN,KAAK,CAACM,UAAZ,GAAwBL,MAAM,CAACI,OAA/B,EAFZ,CAGEE,cAAc,CAAEP,KAAK,CAACO,cAAN,CAAqBC,GAArB,CAAyB,SAACG,EAAD,QACvCA,CAAAA,EAAE,CAACD,GAAH,CAAOE,MAAP,GAAkBX,MAAM,CAACI,OAAP,CAAeQ,QAAjC,gCACSF,EADT,MACaF,QAAQ,CAAEE,EAAE,CAACF,QAAH,CAAcR,MAAM,CAACI,OAAP,CAAeS,aADpD,GAEIH,EAHmC,EAAzB,CAHlB,GASF,IAAKb,CAAAA,mBAAL,CACE,sCACKE,KADL,MAEEO,cAAc,8BAAMP,KAAK,CAACO,cAAZ,GAA4BN,MAAM,CAACI,OAAnC,EAFhB,GAIF,IAAKT,CAAAA,kBAAL,CACE,sCACKI,KADL,MAEEe,aAAa,CAAEf,KAAK,CAACM,UAAN,CAAiBU,MAAjB,CAAwB,SAACC,IAAD,QACrClB,CAAAA,OAAO,CAACkB,IAAI,CAACC,KAAN,CAAajB,MAAM,CAACI,OAApB,CAD8B,EAAxB,CAFjB,CAKEc,iBAAiB,CAAEnB,KAAK,CAACO,cAAN,CAAqBS,MAArB,CAA4B,SAACC,IAAD,QAC7ClB,CAAAA,OAAO,CAACkB,IAAI,CAACC,KAAN,CAAajB,MAAM,CAACI,OAApB,CADsC,EAA5B,CALrB,CAQEF,OAAO,CAAE,KARX,GAUF,IAAKV,CAAAA,gBAAL,CACE,sCACKO,KADL,MAEEG,OAAO,CAAE,KAFX,CAGEiB,KAAK,CAAEnB,MAAM,CAACI,OAHhB,GAKF,QACE,MAAOL,CAAAA,KAAP,CAtEJ,CAwED,CAzED","sourcesContent":["import {\n  GET_CONTADORES,\n  ADD_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n  FILTRAR_CONTADORES,\n  SET_FECHA,\n  ADD_CONTADOR_SECTOR,\n} from '../types';\n\nimport sameDay from '../../utils/sameDay';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOADING_CONTADORES:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_FECHA:\n      return {\n        ...state,\n        thisFecha: action.payload,\n      };\n    case GET_CONTADORES:\n      return {\n        ...state,\n        contadores: action.payload,\n        loading: false,\n      };\n    case GET_CONTADORES_SECTOR:\n      return {\n        ...state,\n        contadorSector: action.payload,\n        loading: false,\n      };\n\n    case UPDATE_CONTADORES:\n      return {\n        ...state,\n        contadores: state.contadores.map((contador) =>\n          contador._id === action.payload._id ? action.payload : contador\n        ),\n        contadorSector: state.contadorSector.map((cS) =>\n          cS._id.sector === action.payload.sectorId\n            ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n            : cS\n        ),\n        loading: false,\n      };\n    case ADD_CONTADORES:\n      return {\n        ...state,\n        contadores: [...state.contadores, action.payload],\n        contadorSector: state.contadorSector.map((cS) =>\n          cS._id.sector === action.payload.sectorId\n            ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n            : cS\n        ),\n      };\n    case ADD_CONTADOR_SECTOR:\n      return {\n        ...state,\n        contadorSector: [...state.contadorSector, action.payload],\n      };\n    case FILTRAR_CONTADORES:\n      return {\n        ...state,\n        contadoresDay: state.contadores.filter((cont) =>\n          sameDay(cont.fecha, action.payload)\n        ),\n        contadorSectorDay: state.contadorSector.filter((cont) =>\n          sameDay(cont.fecha, action.payload)\n        ),\n        loading: false,\n      };\n    case ERROR_CONTADORES:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}