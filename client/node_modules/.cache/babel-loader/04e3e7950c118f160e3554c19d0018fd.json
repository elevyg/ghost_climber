{"ast":null,"code":"var _jsxFileName = \"/Users/eyallevyg/developer/ghost_climber/client/src/components/routing/PrivateRoute.js\";\nimport React, { useContext, Fragment } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const authContext = useContext(AuthContext);\n  const {\n    isAuthenticated,\n    loading\n  } = authContext;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, console.log('Hello'), /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Fragment","Route","Redirect","AuthContext","PrivateRoute","component","Component","rest","authContext","isAuthenticated","loading","console","log","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,QAAMC,WAAW,GAAGT,UAAU,CAACI,WAAD,CAA9B;AAEA,QAAM;AAAEM,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA+BF,WAArC;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,CAACC,GAAR,CAAY,OAAZ,CADH,eAEE,oBAAC,KAAD,oBACML,IADN;AAEE,IAAA,MAAM,EAAGM,KAAD,IACN,CAACJ,eAAD,IAAoB,CAACC,OAArB,gBACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAGE,oBAAC,SAAD,oBAAeG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAeD,CApBD;;AAsBA,eAAeT,YAAf","sourcesContent":["import React, { useContext, Fragment } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n\n  const { isAuthenticated, loading } = authContext;\n\n  return (\n    <Fragment>\n      {console.log('Hello')}\n      <Route\n        {...rest}\n        render={(props) =>\n          !isAuthenticated && !loading ? (\n            <Redirect to='/login' />\n          ) : (\n            <Component {...props} />\n          )\n        }\n      />\n    </Fragment>\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}