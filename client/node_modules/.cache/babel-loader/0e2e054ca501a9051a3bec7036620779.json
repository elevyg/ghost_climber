{"ast":null,"code":"import _toConsumableArray from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_CONTADORES,ADD_CONTADORES,REST_CONTADORES,LOADING_CONTADORES,ERROR_CONTADORES,GET_CONTADORES_SECTOR,UPDATE_CONTADORES}from'../types';export default(function(state,action){switch(action.type){case LOADING_CONTADORES:return _objectSpread(_objectSpread({},state),{},{loading:true});case GET_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadores:action.payload,loading:false});case GET_CONTADORES_SECTOR:return _objectSpread(_objectSpread({},state),{},{contadorSector:action.payload,loading:false});case UPDATE_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadores:state.contadores.map(function(contador){return contador._id===action.payload._id?action.payload:contador;}),loading:false});case ADD_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadores:[].concat(_toConsumableArray(state.contadores),[action.payload])});case ERROR_CONTADORES:return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});default:return state;}});","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/contadoresReducer.js"],"names":["GET_CONTADORES","ADD_CONTADORES","REST_CONTADORES","LOADING_CONTADORES","ERROR_CONTADORES","GET_CONTADORES_SECTOR","UPDATE_CONTADORES","state","action","type","loading","contadores","payload","contadorSector","map","contador","_id","error"],"mappings":"mVAAA,OACEA,cADF,CAEEC,cAFF,CAGEC,eAHF,CAIEC,kBAJF,CAKEC,gBALF,CAMEC,qBANF,CAOEC,iBAPF,KAQO,UARP,CAUA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,kBAAL,CACE,sCACKI,KADL,MAEEG,OAAO,CAAE,IAFX,GAIF,IAAKV,CAAAA,cAAL,CACE,sCACKO,KADL,MAEEI,UAAU,CAAEH,MAAM,CAACI,OAFrB,CAGEF,OAAO,CAAE,KAHX,GAKF,IAAKL,CAAAA,qBAAL,CACE,sCACKE,KADL,MAEEM,cAAc,CAAEL,MAAM,CAACI,OAFzB,CAGEF,OAAO,CAAE,KAHX,GAKF,IAAKJ,CAAAA,iBAAL,CACE,sCACKC,KADL,MAEEI,UAAU,CAAEJ,KAAK,CAACI,UAAN,CAAiBG,GAAjB,CAAqB,SAACC,QAAD,QAC/BA,CAAAA,QAAQ,CAACC,GAAT,GAAiBR,MAAM,CAACI,OAAP,CAAeI,GAAhC,CAAsCR,MAAM,CAACI,OAA7C,CAAuDG,QADxB,EAArB,CAFd,CAKEL,OAAO,CAAE,KALX,GAOF,IAAKT,CAAAA,cAAL,CACE,sCACKM,KADL,MAEEI,UAAU,8BAAMJ,KAAK,CAACI,UAAZ,GAAwBH,MAAM,CAACI,OAA/B,EAFZ,GAIF,IAAKR,CAAAA,gBAAL,CACE,sCACKG,KADL,MAEEG,OAAO,CAAE,KAFX,CAGEO,KAAK,CAAET,MAAM,CAACI,OAHhB,GAKF,QACE,MAAOL,CAAAA,KAAP,CAtCJ,CAwCD,CAzCD","sourcesContent":["import {\n  GET_CONTADORES,\n  ADD_CONTADORES,\n  REST_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOADING_CONTADORES:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_CONTADORES:\n      return {\n        ...state,\n        contadores: action.payload,\n        loading: false,\n      };\n    case GET_CONTADORES_SECTOR:\n      return {\n        ...state,\n        contadorSector: action.payload,\n        loading: false,\n      };\n    case UPDATE_CONTADORES:\n      return {\n        ...state,\n        contadores: state.contadores.map((contador) =>\n          contador._id === action.payload._id ? action.payload : contador\n        ),\n        loading: false,\n      };\n    case ADD_CONTADORES:\n      return {\n        ...state,\n        contadores: [...state.contadores, action.payload],\n      };\n    case ERROR_CONTADORES:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}