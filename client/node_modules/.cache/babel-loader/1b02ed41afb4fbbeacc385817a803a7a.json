{"ast":null,"code":"var _jsxFileName = \"/Users/eyallevyg/developer/ghost_climber/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    user: null,\n    isAuthenticated: null,\n    loading: false,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Loading true\n\n  const loading = () => {\n    dispatch({\n      type: LOADING\n    });\n  }; // Load User\n\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/v1/auth/me');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('api/v1/auth/register', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('api/v1/auth/login', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Logout\n\n\n  const logout = async () => {\n    try {\n      await axios.get('api/v1/auth/logout');\n      dispatch({\n        type: LOGOUT\n      });\n    } catch (err) {}\n  }; // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      user: state.user,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      error: state.error,\n      register,\n      login,\n      logout,\n      clearErrors,\n      loadUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","user","isAuthenticated","loading","error","state","dispatch","type","LOADING","loadUser","res","get","payload","data","err","register","formData","config","headers","post","response","msg","login","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    user: null,\n    isAuthenticated: null,\n    loading: false,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Loading true\n  const loading = () => {\n    dispatch({ type: LOADING });\n  };\n\n  // Load User\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/v1/auth/me');\n\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  // Register User\n\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('api/v1/auth/register', formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Login User\n\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('api/v1/auth/login', formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Logout\n\n  const logout = async () => {\n    try {\n      await axios.get('api/v1/auth/logout');\n      dispatch({ type: LOGOUT });\n    } catch (err) {}\n  };\n\n  // Clear Errors\n\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        user: state.user,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        error: state.error,\n        register,\n        login,\n        logout,\n        clearErrors,\n        loadUser,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}