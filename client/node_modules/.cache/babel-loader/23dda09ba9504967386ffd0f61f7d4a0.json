{"ast":null,"code":"import _regeneratorRuntime from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axios from'axios';import ContadoresContext from'./contadoresContext';import contadoresReducer from'./contadoresReducer';import groupBy from'lodash/groupBy';import renameKeys from'../../utils/renameKeys';import{GET_CONTADORES,GET_ZONAS,ADD_CONTADORES,LOADING_CONTADORES,LOADING_ZONAS,ERROR_CONTADORES,GET_CONTADORES_SECTOR,UPDATE_CONTADORES,FILTRAR_CONTADORES,CLEAR_FILTER,SET_FECHA}from'../types';import moment from'moment';var ContadoresState=function ContadoresState(props){var initialState={zonas:null,contadores:null,contadoresDay:null,contadorSector:null,contadorSectorDay:null,thisFecha:new Date(),loading:false,loadingZonas:false,error:null};var _useReducer=useReducer(contadoresReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Loading contadores\nvar loadingContadores=function loadingContadores(){dispatch({type:LOADING_CONTADORES});};// Loading\nvar setLoadingZonas=function setLoadingZonas(){dispatch({type:LOADING_ZONAS});};// Get Zonas\nvar getZonas=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,zonas;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoadingZonas();_context.prev=1;_context.next=4;return axios.get('/api/v1/sectores');case 4:res=_context.sent;zonas=res.data.data;zonas=Object.entries(groupBy(zonas,'comuna')).map(function(zona){return renameKeys({0:'comuna',1:'sector'},zona);});dispatch({type:GET_ZONAS,payload:zonas});_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);dispatch({type:ERROR_CONTADORES,payload:_context.t0.response});case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function getZonas(){return _ref.apply(this,arguments);};}();// Obtener contadores por subsector\nvar getContadores=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,contadores;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:loadingContadores();_context2.prev=1;_context2.next=4;return axios.get(\"/api/v1/contadores\");case 4:res=_context2.sent;contadores=res.data.data;dispatch({type:GET_CONTADORES,payload:contadores});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);dispatch({type:ERROR_CONTADORES,payload:_context2.t0.response});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,9]]);}));return function getContadores(){return _ref2.apply(this,arguments);};}();// Obtener contadores por sector\nvar getContadorSector=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(zonas){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:loadingContadores();_context4.prev=1;return _context4.delegateYield(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var sectores,sectoresId,i,res,contadorSector;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:sectores=zonas.map(function(z){return z.sector;});sectoresId=[];for(i=0;i<sectores.length;i++){sectores[i].map(function(s){return sectoresId.push(s._id);});}_context3.next=5;return Promise.all(sectoresId.map(function(id){return axios.get(\"/api/v1/sectores/\".concat(id,\"/contadores\"));}));case 5:res=_context3.sent;contadorSector=res.map(function(p){return p.data.data;}).flat(2);dispatch({type:GET_CONTADORES_SECTOR,payload:contadorSector});case 8:case\"end\":return _context3.stop();}}},_callee3);})(),\"t0\",3);case 3:_context4.next=8;break;case 5:_context4.prev=5;_context4.t1=_context4[\"catch\"](1);dispatch({type:ERROR_CONTADORES,payload:_context4.t1.response});case 8:case\"end\":return _context4.stop();}}},_callee4,null,[[1,5]]);}));return function getContadorSector(_x){return _ref3.apply(this,arguments);};}();// Add contador\nvar addContador=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(contador,contadorId,sectorId){var config,res,_res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:config={headers:{'Content-Type':'application/json'}};if(contadorId){_context5.next=16;break;}_context5.prev=2;_context5.next=5;return axios.post(\"/api/v1/subsectores/\".concat(contador.subsector._id,\"/contadores/\"),contador,config);case 5:res=_context5.sent;res.data.data.sectorId=sectorId;res.data.data.deltaContador=contador.contador;dispatch({type:ADD_CONTADORES,payload:res.data.data});_context5.next=14;break;case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](2);dispatch({type:ERROR_CONTADORES,payload:_context5.t0.response.msg});case 14:_context5.next=28;break;case 16:_context5.prev=16;_context5.next=19;return axios.put(\"/api/v1/contadores/\".concat(contadorId),contador,config);case 19:_res=_context5.sent;_res.data.data.sectorId=sectorId;_res.data.data.deltaContador=contador.contador;dispatch({type:UPDATE_CONTADORES,payload:_res.data.data});_context5.next=28;break;case 25:_context5.prev=25;_context5.t1=_context5[\"catch\"](16);dispatch({type:ERROR_CONTADORES,payload:_context5.t1.response.msg});case 28:case\"end\":return _context5.stop();}}},_callee5,null,[[2,11],[16,25]]);}));return function addContador(_x2,_x3,_x4){return _ref4.apply(this,arguments);};}();// Filtrar contador para subsector\nvar setThisContador=function setThisContador(subsectorId){if(state.contadores){var contador=state.contadores.filter(function(cont){return(cont.subsector._id===subsectorId||cont.subsector===subsectorId)&&moment(cont.fecha).isSame(state.thisFecha,'day');});if(contador.length===0){contador=[{subsector:{_id:subsectorId},fecha:state.thisFecha,contador:0,dbStatus:401}];}return contador[0];}};var setThisContadorSector=function setThisContadorSector(sectorId){if(state.contadorSector){var cont=state.contadorSector.filter(function(cS){return cS._id.sector===sectorId&&moment(cS.fecha).isSame(state.thisFecha,'day');});if(cont.length>0){var _cont$find=cont.find(function(_ref5){var contador=_ref5.contador;return contador;}),res=_cont$find.contador;return res;}else{return 0;}}};// Fijar fecha\nvar setFecha=function setFecha(fecha){dispatch({type:SET_FECHA,payload:fecha});};// Filtrar contadores por d√≠a seleccionado\nvar filtrarContadores=function filtrarContadores(fecha){loadingContadores();dispatch({type:FILTRAR_CONTADORES,payload:fecha});};var clearFilter=function clearFilter(){dispatch({type:CLEAR_FILTER});};return/*#__PURE__*/React.createElement(ContadoresContext.Provider,{value:{zonas:state.zonas,contadores:state.contadores,contadoresDay:state.contadoresDay,contadorSector:state.contadorSector,contadorSectorDay:state.contadorSectorDay,thisFecha:state.thisFecha,loading:state.loading,loadingZonas:state.loadingZonas,error:state.error,getZonas:getZonas,getContadores:getContadores,loadingContadores:loadingContadores,getContadorSector:getContadorSector,addContador:addContador,setThisContador:setThisContador,setThisContadorSector:setThisContadorSector,filtrarContadores:filtrarContadores,setFecha:setFecha,clearFilter:clearFilter,setLoadingZonas:setLoadingZonas}},props.children);};export default ContadoresState;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/ContadoresState.js"],"names":["React","useReducer","axios","ContadoresContext","contadoresReducer","groupBy","renameKeys","GET_CONTADORES","GET_ZONAS","ADD_CONTADORES","LOADING_CONTADORES","LOADING_ZONAS","ERROR_CONTADORES","GET_CONTADORES_SECTOR","UPDATE_CONTADORES","FILTRAR_CONTADORES","CLEAR_FILTER","SET_FECHA","moment","ContadoresState","props","initialState","zonas","contadores","contadoresDay","contadorSector","contadorSectorDay","thisFecha","Date","loading","loadingZonas","error","state","dispatch","loadingContadores","type","setLoadingZonas","getZonas","get","res","data","Object","entries","map","zona","payload","response","getContadores","getContadorSector","sectores","z","sector","sectoresId","i","length","s","push","_id","Promise","all","id","p","flat","addContador","contador","contadorId","sectorId","config","headers","post","subsector","deltaContador","msg","put","setThisContador","subsectorId","filter","cont","fecha","isSame","dbStatus","setThisContadorSector","cS","find","setFecha","filtrarContadores","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport ContadoresContext from './contadoresContext';\nimport contadoresReducer from './contadoresReducer';\n\nimport groupBy from 'lodash/groupBy';\nimport renameKeys from '../../utils/renameKeys';\n\nimport {\n  GET_CONTADORES,\n  GET_ZONAS,\n  ADD_CONTADORES,\n  LOADING_CONTADORES,\n  LOADING_ZONAS,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n  FILTRAR_CONTADORES,\n  CLEAR_FILTER,\n  SET_FECHA,\n} from '../types';\nimport moment from 'moment';\n\nconst ContadoresState = (props) => {\n  const initialState = {\n    zonas: null,\n    contadores: null,\n    contadoresDay: null,\n    contadorSector: null,\n    contadorSectorDay: null,\n    thisFecha: new Date(),\n    loading: false,\n    loadingZonas: false,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contadoresReducer, initialState);\n\n  // Loading contadores\n  const loadingContadores = () => {\n    dispatch({ type: LOADING_CONTADORES });\n  };\n  // Loading\n  const setLoadingZonas = () => {\n    dispatch({ type: LOADING_ZONAS });\n  };\n\n  // Get Zonas\n  const getZonas = async () => {\n    setLoadingZonas();\n    try {\n      const res = await axios.get('/api/v1/sectores');\n\n      let zonas = res.data.data;\n\n      zonas = Object.entries(groupBy(zonas, 'comuna')).map((zona) =>\n        renameKeys({ 0: 'comuna', 1: 'sector' }, zona)\n      );\n\n      dispatch({ type: GET_ZONAS, payload: zonas });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Obtener contadores por subsector\n  const getContadores = async () => {\n    loadingContadores();\n    try {\n      const res = await axios.get(`/api/v1/contadores`);\n\n      let contadores = res.data.data;\n\n      dispatch({ type: GET_CONTADORES, payload: contadores });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Obtener contadores por sector\n  const getContadorSector = async (zonas) => {\n    loadingContadores();\n    try {\n      const sectores = zonas.map((z) => z.sector);\n\n      const sectoresId = [];\n\n      for (let i = 0; i < sectores.length; i++) {\n        sectores[i].map((s) => sectoresId.push(s._id));\n      }\n\n      const res = await Promise.all(\n        sectoresId.map((id) => axios.get(`/api/v1/sectores/${id}/contadores`))\n      );\n\n      const contadorSector = res.map((p) => p.data.data).flat(2);\n\n      dispatch({ type: GET_CONTADORES_SECTOR, payload: contadorSector });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Add contador\n  const addContador = async (contador, contadorId, sectorId) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    if (!contadorId) {\n      try {\n        const res = await axios.post(\n          `/api/v1/subsectores/${contador.subsector._id}/contadores/`,\n          contador,\n          config\n        );\n\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n\n        dispatch({ type: ADD_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    } else {\n      try {\n        const res = await axios.put(\n          `/api/v1/contadores/${contadorId}`,\n          contador,\n          config\n        );\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n\n        dispatch({ type: UPDATE_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    }\n  };\n\n  // Filtrar contador para subsector\n  const setThisContador = (subsectorId) => {\n    if (state.contadores) {\n      let contador = state.contadores.filter(\n        (cont) =>\n          (cont.subsector._id === subsectorId ||\n            cont.subsector === subsectorId) &&\n          moment(cont.fecha).isSame(state.thisFecha, 'day')\n      );\n\n      if (contador.length === 0) {\n        contador = [\n          {\n            subsector: {\n              _id: subsectorId,\n            },\n            fecha: state.thisFecha,\n            contador: 0,\n            dbStatus: 401,\n          },\n        ];\n      }\n\n      return contador[0];\n    }\n  };\n\n  const setThisContadorSector = (sectorId) => {\n    if (state.contadorSector) {\n      const cont = state.contadorSector.filter(\n        (cS) =>\n          cS._id.sector === sectorId &&\n          moment(cS.fecha).isSame(state.thisFecha, 'day')\n      );\n\n      if (cont.length > 0) {\n        const { contador: res } = cont.find(({ contador }) => contador);\n        return res;\n      } else {\n        return 0;\n      }\n    }\n  };\n\n  // Fijar fecha\n  const setFecha = (fecha) => {\n    dispatch({ type: SET_FECHA, payload: fecha });\n  };\n\n  // Filtrar contadores por d√≠a seleccionado\n  const filtrarContadores = (fecha) => {\n    loadingContadores();\n    dispatch({ type: FILTRAR_CONTADORES, payload: fecha });\n  };\n\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContadoresContext.Provider\n      value={{\n        zonas: state.zonas,\n        contadores: state.contadores,\n        contadoresDay: state.contadoresDay,\n        contadorSector: state.contadorSector,\n        contadorSectorDay: state.contadorSectorDay,\n        thisFecha: state.thisFecha,\n        loading: state.loading,\n        loadingZonas: state.loadingZonas,\n        error: state.error,\n        getZonas,\n        getContadores,\n        loadingContadores,\n        getContadorSector,\n        addContador,\n        setThisContador,\n        setThisContadorSector,\n        filtrarContadores,\n        setFecha,\n        clearFilter,\n        setLoadingZonas,\n      }}\n    >\n      {props.children}\n    </ContadoresContext.Provider>\n  );\n};\n\nexport default ContadoresState;\n"]},"metadata":{},"sourceType":"module"}