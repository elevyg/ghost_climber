{"ast":null,"code":"import { GET_CONTADORES, ADD_CONTADORES, REST_CONTADORES, LOADING_CONTADORES, ERROR_CONTADORES, GET_CONTADORES_SECTOR, THIS_CONTADOR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case LOADING_CONTADORES:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_CONTADORES:\n      return { ...state,\n        contadores: action.payload,\n        loading: false\n      };\n\n    case GET_CONTADORES_SECTOR:\n      return { ...state,\n        contadorSector: action.payload,\n        loading: false\n      };\n\n    case ADD_CONTADORES:\n      console.log(action.payload._id);\n      return { ...state,\n        contadores: state.contadores.map(contador => {\n          return contador._id === action.payload._id ? action.payload && console.log(contador) : contador;\n        }),\n        loading: false\n      };\n\n    case THIS_CONTADOR:\n      return { ...state,\n        thisContador: action.payload\n      };\n\n    case ERROR_CONTADORES:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/contadoresReducer.js"],"names":["GET_CONTADORES","ADD_CONTADORES","REST_CONTADORES","LOADING_CONTADORES","ERROR_CONTADORES","GET_CONTADORES_SECTOR","THIS_CONTADOR","state","action","type","loading","contadores","payload","contadorSector","console","log","_id","map","contador","thisContador","error"],"mappings":"AAAA,SACEA,cADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,qBANF,EAOEC,aAPF,QAQO,UARP;AAUA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,kBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKV,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELI,QAAAA,UAAU,EAAEH,MAAM,CAACI,OAFd;AAGLF,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,qBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELM,QAAAA,cAAc,EAAEL,MAAM,CAACI,OAFlB;AAGLF,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,cAAL;AACEa,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACI,OAAP,CAAeI,GAA3B;AACA,aAAO,EACL,GAAGT,KADE;AAELI,QAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,CAAiBM,GAAjB,CAAsBC,QAAD,IAAc;AAC7C,iBAAOA,QAAQ,CAACF,GAAT,KAAiBR,MAAM,CAACI,OAAP,CAAeI,GAAhC,GACHR,MAAM,CAACI,OAAP,IAAkBE,OAAO,CAACC,GAAR,CAAYG,QAAZ,CADf,GAEHA,QAFJ;AAGD,SAJW,CAFP;AAOLR,QAAAA,OAAO,EAAE;AAPJ,OAAP;;AASF,SAAKJ,aAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELY,QAAAA,YAAY,EAAEX,MAAM,CAACI;AAFhB,OAAP;;AAIF,SAAKR,gBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLU,QAAAA,KAAK,EAAEZ,MAAM,CAACI;AAHT,OAAP;;AAKF;AACE,aAAOL,KAAP;AAzCJ;AA2CD,CA5CD","sourcesContent":["import {\n  GET_CONTADORES,\n  ADD_CONTADORES,\n  REST_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  THIS_CONTADOR,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOADING_CONTADORES:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_CONTADORES:\n      return {\n        ...state,\n        contadores: action.payload,\n        loading: false,\n      };\n    case GET_CONTADORES_SECTOR:\n      return {\n        ...state,\n        contadorSector: action.payload,\n        loading: false,\n      };\n    case ADD_CONTADORES:\n      console.log(action.payload._id);\n      return {\n        ...state,\n        contadores: state.contadores.map((contador) => {\n          return contador._id === action.payload._id\n            ? action.payload && console.log(contador)\n            : contador;\n        }),\n        loading: false,\n      };\n    case THIS_CONTADOR:\n      return {\n        ...state,\n        thisContador: action.payload,\n      };\n    case ERROR_CONTADORES:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}