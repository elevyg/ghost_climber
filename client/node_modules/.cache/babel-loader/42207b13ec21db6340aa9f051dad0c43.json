{"ast":null,"code":"import _regeneratorRuntime from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axios from'axios';import groupBy from'lodash/groupBy';import renameKeys from'../../utils/renameKeys';import ZonasContext from'./zonasContext';import zonasReducer from'./zonasReducer';import{GET_ZONAS,ZONAS_ERROR,LOADING_ZONAS}from'../types';var ZonasState=function ZonasState(props){var initialState={zonas:null,loading:false,current:null,filtered:null,error:null};var _useReducer=useReducer(zonasReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Loading\nvar loadingZonas=function loadingZonas(){var loading=true;dispatch({type:LOADING_ZONAS,payload:loading});};// Get Zonas\nvar getZonas=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,zonas;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;loadingZonas();_context.next=4;return axios.get('/api/v1/sectores');case 4:res=_context.sent;zonas=res.data.data;zonas=Object.entries(groupBy(zonas,'comuna')).map(function(zona){return renameKeys({0:'comuna',1:'sector'},zona);});dispatch({type:GET_ZONAS,payload:zonas});_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);dispatch({type:ZONAS_ERROR,payload:_context.t0.response});case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function getZonas(){return _ref.apply(this,arguments);};}();// // Filter Contacts\n// const filterContacts = (text) => {\n//   dispatch({ type: FILTER_CONTACTS, payload: text });\n// };\n// // Clear Filter\n// const clearFilter = () => {\n//   dispatch({ type: CLEAR_FILTER });\n// };\n// // Clear Contacts\n// const clearContacts = () => dispatch({ type: CLEAR_CONTACTS });\nreturn/*#__PURE__*/React.createElement(ZonasContext.Provider,{value:{zonas:state.zonas,loading:state.loading,current:state.current,filtered:state.filtered,error:state.error,// filterContacts,\n// clearFilter,\ngetZonas:getZonas,// clearContacts,\nloadingZonas:loadingZonas}},props.children);};export default ZonasState;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/zonas/ZonasState.js"],"names":["React","useReducer","axios","groupBy","renameKeys","ZonasContext","zonasReducer","GET_ZONAS","ZONAS_ERROR","LOADING_ZONAS","ZonasState","props","initialState","zonas","loading","current","filtered","error","state","dispatch","loadingZonas","type","payload","getZonas","get","res","data","Object","entries","map","zona","response","children"],"mappings":"+eAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,OAASC,SAAT,CAAoBC,WAApB,CAAiCC,aAAjC,KAAsD,UAAtD,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5B,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,IADY,CAEnBC,OAAO,CAAE,KAFU,CAGnBC,OAAO,CAAE,IAHU,CAInBC,QAAQ,CAAE,IAJS,CAKnBC,KAAK,CAAE,IALY,CAArB,CAD4B,gBASFhB,UAAU,CAACK,YAAD,CAAeM,YAAf,CATR,4CASrBM,KATqB,iBASdC,QATc,iBAW5B;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMN,CAAAA,OAAO,CAAG,IAAhB,CACAK,QAAQ,CAAC,CAAEE,IAAI,CAAEZ,aAAR,CAAuBa,OAAO,CAAER,OAAhC,CAAD,CAAR,CACD,CAHD,CAKA;AACA,GAAMS,CAAAA,QAAQ,0FAAG,iKAEbH,YAAY,GAFC,sBAGKlB,CAAAA,KAAK,CAACsB,GAAN,CAAU,kBAAV,CAHL,QAGPC,GAHO,eAKTZ,KALS,CAKDY,GAAG,CAACC,IAAJ,CAASA,IALR,CAObb,KAAK,CAAGc,MAAM,CAACC,OAAP,CAAezB,OAAO,CAACU,KAAD,CAAQ,QAAR,CAAtB,EAAyCgB,GAAzC,CAA6C,SAACC,IAAD,QACnD1B,CAAAA,UAAU,CAAC,CAAE,EAAG,QAAL,CAAe,EAAG,QAAlB,CAAD,CAA+B0B,IAA/B,CADyC,EAA7C,CAAR,CAIAX,QAAQ,CAAC,CAAEE,IAAI,CAAEd,SAAR,CAAmBe,OAAO,CAAET,KAA5B,CAAD,CAAR,CAXa,iFAabM,QAAQ,CAAC,CAAEE,IAAI,CAAEb,WAAR,CAAqBc,OAAO,CAAE,YAAIS,QAAlC,CAAD,CAAR,CAba,qEAAH,kBAARR,CAAAA,QAAQ,0CAAd,CAiBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA,mBACE,oBAAC,YAAD,CAAc,QAAd,EACE,KAAK,CAAE,CACLV,KAAK,CAAEK,KAAK,CAACL,KADR,CAELC,OAAO,CAAEI,KAAK,CAACJ,OAFV,CAGLC,OAAO,CAAEG,KAAK,CAACH,OAHV,CAILC,QAAQ,CAAEE,KAAK,CAACF,QAJX,CAKLC,KAAK,CAAEC,KAAK,CAACD,KALR,CAML;AACA;AACAM,QAAQ,CAARA,QARK,CASL;AACAH,YAAY,CAAZA,YAVK,CADT,EAcGT,KAAK,CAACqB,QAdT,CADF,CAkBD,CAnED,CAqEA,cAAetB,CAAAA,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport groupBy from 'lodash/groupBy';\nimport renameKeys from '../../utils/renameKeys';\n\nimport ZonasContext from './zonasContext';\nimport zonasReducer from './zonasReducer';\n\nimport { GET_ZONAS, ZONAS_ERROR, LOADING_ZONAS } from '../types';\n\nconst ZonasState = (props) => {\n  const initialState = {\n    zonas: null,\n    loading: false,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(zonasReducer, initialState);\n\n  // Loading\n  const loadingZonas = () => {\n    const loading = true;\n    dispatch({ type: LOADING_ZONAS, payload: loading });\n  };\n\n  // Get Zonas\n  const getZonas = async () => {\n    try {\n      loadingZonas();\n      const res = await axios.get('/api/v1/sectores');\n\n      let zonas = res.data.data;\n\n      zonas = Object.entries(groupBy(zonas, 'comuna')).map((zona) =>\n        renameKeys({ 0: 'comuna', 1: 'sector' }, zona)\n      );\n\n      dispatch({ type: GET_ZONAS, payload: zonas });\n    } catch (err) {\n      dispatch({ type: ZONAS_ERROR, payload: err.response });\n    }\n  };\n\n  // // Filter Contacts\n  // const filterContacts = (text) => {\n  //   dispatch({ type: FILTER_CONTACTS, payload: text });\n  // };\n\n  // // Clear Filter\n  // const clearFilter = () => {\n  //   dispatch({ type: CLEAR_FILTER });\n  // };\n\n  // // Clear Contacts\n\n  // const clearContacts = () => dispatch({ type: CLEAR_CONTACTS });\n\n  return (\n    <ZonasContext.Provider\n      value={{\n        zonas: state.zonas,\n        loading: state.loading,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        // filterContacts,\n        // clearFilter,\n        getZonas,\n        // clearContacts,\n        loadingZonas,\n      }}\n    >\n      {props.children}\n    </ZonasContext.Provider>\n  );\n};\n\nexport default ZonasState;\n"]},"metadata":{},"sourceType":"module"}