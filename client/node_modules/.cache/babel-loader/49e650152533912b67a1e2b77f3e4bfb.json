{"ast":null,"code":"import _slicedToArray from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from'react';import ContadoresContext from'../../context/contadores/contadoresContext';import isPast from'../../utils/isPast';var GhostCounter=function GhostCounter(_ref){var sb=_ref.sb;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),counter=_useState2[0],setCounter=_useState2[1];// Contador Global\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),contador=_useState4[0],setContador=_useState4[1];// Contadores states\nvar contadoresContext=useContext(ContadoresContext);var addContador=contadoresContext.addContador,setThisContador=contadoresContext.setThisContador,thisFecha=contadoresContext.thisFecha,addContadorSector=contadoresContext.addContadorSector;useEffect(function(){if(sb){setContador(setThisContador(sb._id));// eslint-disable-next-line\n}},[sb,setThisContador]);// add 1 to the couter\nvar countOne=function countOne(){if(counter<=2){var count=counter+1;setCounter(count);var contadorActualizado={subsector:{_id:sb._id},contador:1,fecha:thisFecha};if(contador.dbStatus){// addContadorSector(sb.sector, contadorActualizado.fecha);\n}addContador(contadorActualizado,contador._id,sb.sector);}};var resetCount=function resetCount(){setCounter(0);var contadorActualizado={subsector:{_id:sb._id},contador:-counter,fecha:thisFecha};addContador(contadorActualizado,contador._id,sb.sector);};return/*#__PURE__*/React.createElement(\"div\",{id:\"\",className:\"relative flex pr-3 items-center justify-center\"},/*#__PURE__*/React.createElement(\"button\",{className:\" inline-block flex justify-center items-center rounded w-12 px-3 focus:outline-none ' \\n          \".concat(isPast(thisFecha)?'bg-gray-800 text-white':contador.contador===0&&counter===0?'bg-blue-200 text-gray-500':'bg-blue-500 text-white',\" \\n            \"),onClick:countOne,disabled:isPast(thisFecha)},contador&&/*#__PURE__*/React.createElement(\"h5\",{className:\"\"},contador.contador),/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-ghost ml-1\"})),counter>0?/*#__PURE__*/React.createElement(\"button\",{className:\"relative inset-y-0 inline-block bg-transparent focus:outline-none flex justify-center items-center text-sm  text-gray-500\",onClick:resetCount},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-undo ml-3 \"})):'');};//\nexport default GhostCounter;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/components/batches/GhostCounter.js"],"names":["React","useState","useEffect","useContext","ContadoresContext","isPast","GhostCounter","sb","counter","setCounter","contador","setContador","contadoresContext","addContador","setThisContador","thisFecha","addContadorSector","_id","countOne","count","contadorActualizado","subsector","fecha","dbStatus","sector","resetCount"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,iBAAP,KAA8B,4CAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAY,IAATC,CAAAA,EAAS,MAATA,EAAS,eACDN,QAAQ,CAAC,CAAD,CADP,wCACxBO,OADwB,eACfC,UADe,eAE/B;AAF+B,eAGCR,QAAQ,CAAC,CAAD,CAHT,yCAGxBS,QAHwB,eAGdC,WAHc,eAI/B;AACA,GAAMC,CAAAA,iBAAiB,CAAGT,UAAU,CAACC,iBAAD,CAApC,CAL+B,GAO7BS,CAAAA,WAP6B,CAW3BD,iBAX2B,CAO7BC,WAP6B,CAQ7BC,eAR6B,CAW3BF,iBAX2B,CAQ7BE,eAR6B,CAS7BC,SAT6B,CAW3BH,iBAX2B,CAS7BG,SAT6B,CAU7BC,iBAV6B,CAW3BJ,iBAX2B,CAU7BI,iBAV6B,CAa/Bd,SAAS,CAAC,UAAM,CACd,GAAIK,EAAJ,CAAQ,CACNI,WAAW,CAACG,eAAe,CAACP,EAAE,CAACU,GAAJ,CAAhB,CAAX,CACA;AACD,CACF,CALQ,CAKN,CAACV,EAAD,CAAKO,eAAL,CALM,CAAT,CAOA;AACA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAIV,OAAO,EAAI,CAAf,CAAkB,CAChB,GAAIW,CAAAA,KAAK,CAAGX,OAAO,CAAG,CAAtB,CACAC,UAAU,CAACU,KAAD,CAAV,CACA,GAAMC,CAAAA,mBAAmB,CAAG,CAC1BC,SAAS,CAAE,CACTJ,GAAG,CAAEV,EAAE,CAACU,GADC,CADe,CAI1BP,QAAQ,CAAE,CAJgB,CAK1BY,KAAK,CAAEP,SALmB,CAA5B,CAOA,GAAIL,QAAQ,CAACa,QAAb,CAAuB,CACrB;AACD,CACDV,WAAW,CAACO,mBAAD,CAAsBV,QAAQ,CAACO,GAA/B,CAAoCV,EAAE,CAACiB,MAAvC,CAAX,CACD,CACF,CAhBD,CAkBA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBhB,UAAU,CAAC,CAAD,CAAV,CACA,GAAMW,CAAAA,mBAAmB,CAAG,CAC1BC,SAAS,CAAE,CACTJ,GAAG,CAAEV,EAAE,CAACU,GADC,CADe,CAI1BP,QAAQ,CAAE,CAACF,OAJe,CAK1Bc,KAAK,CAAEP,SALmB,CAA5B,CAQAF,WAAW,CAACO,mBAAD,CAAsBV,QAAQ,CAACO,GAA/B,CAAoCV,EAAE,CAACiB,MAAvC,CAAX,CACD,CAXD,CAaA,mBACE,2BAAK,EAAE,CAAC,EAAR,CAAW,SAAS,CAAC,gDAArB,eACE,8BACE,SAAS,6GAELnB,MAAM,CAACU,SAAD,CAAN,CACI,wBADJ,CAEIL,QAAQ,CAACA,QAAT,GAAsB,CAAtB,EAA2BF,OAAO,GAAK,CAAvC,CACA,2BADA,CAEA,wBANC,mBADX,CAUE,OAAO,CAAEU,QAVX,CAWE,QAAQ,CAAEb,MAAM,CAACU,SAAD,CAXlB,EAaGL,QAAQ,eAAI,0BAAI,SAAS,CAAC,EAAd,EAAkBA,QAAQ,CAACA,QAA3B,CAbf,cAcE,yBAAG,SAAS,CAAC,mBAAb,EAdF,CADF,CAiBGF,OAAO,CAAG,CAAV,cACC,8BACE,SAAS,CAAC,2HADZ,CAEE,OAAO,CAAEiB,UAFX,eAIE,yBAAG,SAAS,CAAC,mBAAb,EAJF,CADD,CAQC,EAzBJ,CADF,CA8BD,CAlFD,CAoFA;AAEA,cAAenB,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\nimport isPast from '../../utils/isPast';\n\nconst GhostCounter = ({ sb }) => {\n  const [counter, setCounter] = useState(0);\n  // Contador Global\n  const [contador, setContador] = useState(0);\n  // Contadores states\n  const contadoresContext = useContext(ContadoresContext);\n  const {\n    addContador,\n    setThisContador,\n    thisFecha,\n    addContadorSector,\n  } = contadoresContext;\n\n  useEffect(() => {\n    if (sb) {\n      setContador(setThisContador(sb._id));\n      // eslint-disable-next-line\n    }\n  }, [sb, setThisContador]);\n\n  // add 1 to the couter\n  const countOne = () => {\n    if (counter <= 2) {\n      let count = counter + 1;\n      setCounter(count);\n      const contadorActualizado = {\n        subsector: {\n          _id: sb._id,\n        },\n        contador: 1,\n        fecha: thisFecha,\n      };\n      if (contador.dbStatus) {\n        // addContadorSector(sb.sector, contadorActualizado.fecha);\n      }\n      addContador(contadorActualizado, contador._id, sb.sector);\n    }\n  };\n\n  const resetCount = () => {\n    setCounter(0);\n    const contadorActualizado = {\n      subsector: {\n        _id: sb._id,\n      },\n      contador: -counter,\n      fecha: thisFecha,\n    };\n\n    addContador(contadorActualizado, contador._id, sb.sector);\n  };\n\n  return (\n    <div id='' className='relative flex pr-3 items-center justify-center'>\n      <button\n        className={` inline-block flex justify-center items-center rounded w-12 px-3 focus:outline-none ' \n          ${\n            isPast(thisFecha)\n              ? 'bg-gray-800 text-white'\n              : contador.contador === 0 && counter === 0\n              ? 'bg-blue-200 text-gray-500'\n              : 'bg-blue-500 text-white'\n          } \n            `}\n        onClick={countOne}\n        disabled={isPast(thisFecha)}\n      >\n        {contador && <h5 className=''>{contador.contador}</h5>}\n        <i className='fas fa-ghost ml-1'></i>\n      </button>\n      {counter > 0 ? (\n        <button\n          className='relative inset-y-0 inline-block bg-transparent focus:outline-none flex justify-center items-center text-sm  text-gray-500'\n          onClick={resetCount}\n        >\n          <i className='fas fa-undo ml-3 '></i>\n        </button>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\n//\n\nexport default GhostCounter;\n"]},"metadata":{},"sourceType":"module"}