{"ast":null,"code":"import _regeneratorRuntime from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axios from'axios';import ContadoresContext from'./contadoresContext';import contadoresReducer from'./contadoresReducer';import{GET_CONTADORES,ADD_CONTADORES,LOADING_CONTADORES,ERROR_CONTADORES,GET_CONTADORES_SECTOR,UPDATE_CONTADORES}from'../types';var ContadoresState=function ContadoresState(props){var initialState={contadores:null,contadorSector:null,loading:false,error:null};var _useReducer=useReducer(contadoresReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Loading\nvar loadingContadores=function loadingContadores(){var loading=true;dispatch({type:LOADING_CONTADORES,payload:loading});};// Obtener contadores por subsector\nvar getContadores=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,contadores;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;loadingContadores();_context.next=4;return axios.get(\"/api/v1/contadores\");case 4:res=_context.sent;contadores=res.data.data;dispatch({type:GET_CONTADORES,payload:contadores});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:ERROR_CONTADORES,payload:_context.t0.response});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function getContadores(){return _ref.apply(this,arguments);};}();// Obtener contadores por sector\nvar getContadorSector=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(zonas){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;return _context3.delegateYield(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var sectores,sectoresId,i,res,contadorSector;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:loadingContadores();sectores=zonas.map(function(z){return z.sector;});sectoresId=[];for(i=0;i<sectores.length;i++){sectores[i].map(function(s){return sectoresId.push(s._id);});}_context2.next=6;return Promise.all(sectoresId.map(function(id){return axios.get(\"/api/v1/sectores/\".concat(id,\"/contadores\"));}));case 6:res=_context2.sent;contadorSector=res.map(function(p){return p.data.data;});dispatch({type:GET_CONTADORES_SECTOR,payload:contadorSector});case 9:case\"end\":return _context2.stop();}}},_callee2);})(),\"t0\",2);case 2:_context3.next=7;break;case 4:_context3.prev=4;_context3.t1=_context3[\"catch\"](0);dispatch({type:ERROR_CONTADORES,payload:_context3.t1.response});case 7:case\"end\":return _context3.stop();}}},_callee3,null,[[0,4]]);}));return function getContadorSector(_x){return _ref2.apply(this,arguments);};}();// Add contador\nvar addContador=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(contador,contadorId,sectorId){var config,res,_res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:config={headers:{'Content-Type':'application/json'}};if(contadorId){_context4.next=16;break;}_context4.prev=2;_context4.next=5;return axios.post(\"/api/v1/subsectores/\".concat(contador.subsector._id,\"/contadores/\"),contador,config);case 5:res=_context4.sent;res.data.data.sectorId=sectorId;res.data.data.deltaContador=contador.contador;dispatch({type:ADD_CONTADORES,payload:res.data.data});_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](2);dispatch({type:ERROR_CONTADORES,payload:_context4.t0.response.msg});case 14:_context4.next=28;break;case 16:_context4.prev=16;_context4.next=19;return axios.put(\"/api/v1/contadores/\".concat(contadorId),contador,config);case 19:_res=_context4.sent;_res.data.data.sectorId=sectorId;_res.data.data.deltaContador=contador.contador;dispatch({type:UPDATE_CONTADORES,payload:_res.data.data});// dispatch({ type: ADD_CONTADORES, payload: res.data.data });\n_context4.next=28;break;case 25:_context4.prev=25;_context4.t1=_context4[\"catch\"](16);dispatch({type:ERROR_CONTADORES,payload:_context4.t1.response.msg});case 28:case\"end\":return _context4.stop();}}},_callee4,null,[[2,11],[16,25]]);}));return function addContador(_x2,_x3,_x4){return _ref3.apply(this,arguments);};}();var setThisContador=function setThisContador(subsectorId){if(state.contadores){var contador=state.contadores.filter(function(cont){return cont.subsector._id===subsectorId||cont.subsector===subsectorId;});if(contador.length===0){contador=[{subsector:{_id:subsectorId},fecha:Date.now(),contador:0,dbStatus:401}];}return contador[0];}};return/*#__PURE__*/React.createElement(ContadoresContext.Provider,{value:{contadores:state.contadores,contadorSector:state.contadorSector,loading:state.loading,error:state.error,getContadores:getContadores,loadingContadores:loadingContadores,getContadorSector:getContadorSector,addContador:addContador,setThisContador:setThisContador}},props.children);};export default ContadoresState;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/ContadoresState.js"],"names":["React","useReducer","axios","ContadoresContext","contadoresReducer","GET_CONTADORES","ADD_CONTADORES","LOADING_CONTADORES","ERROR_CONTADORES","GET_CONTADORES_SECTOR","UPDATE_CONTADORES","ContadoresState","props","initialState","contadores","contadorSector","loading","error","state","dispatch","loadingContadores","type","payload","getContadores","get","res","data","response","getContadorSector","zonas","sectores","map","z","sector","sectoresId","i","length","s","push","_id","Promise","all","id","p","addContador","contador","contadorId","sectorId","config","headers","post","subsector","deltaContador","msg","put","setThisContador","subsectorId","filter","cont","fecha","Date","now","dbStatus","children"],"mappings":"+eAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAEA,OACEC,cADF,CAEEC,cAFF,CAGEC,kBAHF,CAIEC,gBAJF,CAKEC,qBALF,CAMEC,iBANF,KAOO,UAPP,CASA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,GAAMC,CAAAA,YAAY,CAAG,CACnBC,UAAU,CAAE,IADO,CAEnBC,cAAc,CAAE,IAFG,CAGnBC,OAAO,CAAE,KAHU,CAInBC,KAAK,CAAE,IAJY,CAArB,CADiC,gBAQPhB,UAAU,CAACG,iBAAD,CAAoBS,YAApB,CARH,4CAQ1BK,KAR0B,iBAQnBC,QARmB,iBAUjC;AACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAMJ,CAAAA,OAAO,CAAG,IAAhB,CACAG,QAAQ,CAAC,CAAEE,IAAI,CAAEd,kBAAR,CAA4Be,OAAO,CAAEN,OAArC,CAAD,CAAR,CACD,CAHD,CAKA;AACA,GAAMO,CAAAA,aAAa,0FAAG,sKAElBH,iBAAiB,GAFC,sBAIAlB,CAAAA,KAAK,CAACsB,GAAN,sBAJA,QAIZC,GAJY,eAMdX,UANc,CAMDW,GAAG,CAACC,IAAJ,CAASA,IANR,CAQlBP,QAAQ,CAAC,CAAEE,IAAI,CAAEhB,cAAR,CAAwBiB,OAAO,CAAER,UAAjC,CAAD,CAAR,CARkB,+EAUlBK,QAAQ,CAAC,CAAEE,IAAI,CAAEb,gBAAR,CAA0Bc,OAAO,CAAE,YAAIK,QAAvC,CAAD,CAAR,CAVkB,oEAAH,kBAAbJ,CAAAA,aAAa,0CAAnB,CAcA;AACA,GAAMK,CAAAA,iBAAiB,2FAAG,kBAAOC,KAAP,iYAEtBT,iBAAiB,GAEXU,QAJgB,CAILD,KAAK,CAACE,GAAN,CAAU,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,MAAT,EAAV,CAJK,CAKhBC,UALgB,CAKH,EALG,CAOtB,IAASC,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGL,QAAQ,CAACM,MAA7B,CAAqCD,CAAC,EAAtC,CAA0C,CACxCL,QAAQ,CAACK,CAAD,CAAR,CAAYJ,GAAZ,CAAgB,SAACM,CAAD,QAAOH,CAAAA,UAAU,CAACI,IAAX,CAAgBD,CAAC,CAACE,GAAlB,CAAP,EAAhB,EACD,CATqB,uBAWJC,CAAAA,OAAO,CAACC,GAAR,CAChBP,UAAU,CAACH,GAAX,CAAe,SAACW,EAAD,QAAQxC,CAAAA,KAAK,CAACsB,GAAN,4BAA8BkB,EAA9B,gBAAR,EAAf,CADgB,CAXI,QAWhBjB,GAXgB,gBAehBV,cAfgB,CAeCU,GAAG,CAACM,GAAJ,CAAQ,SAACY,CAAD,QAAOA,CAAAA,CAAC,CAACjB,IAAF,CAAOA,IAAd,EAAR,CAfD,CAiBtBP,QAAQ,CAAC,CAAEE,IAAI,CAAEZ,qBAAR,CAA+Ba,OAAO,CAAEP,cAAxC,CAAD,CAAR,CAjBsB,6JAmBtBI,QAAQ,CAAC,CAAEE,IAAI,CAAEb,gBAAR,CAA0Bc,OAAO,CAAE,aAAIK,QAAvC,CAAD,CAAR,CAnBsB,qEAAH,kBAAjBC,CAAAA,iBAAiB,6CAAvB,CAuBA;AACA,GAAMgB,CAAAA,WAAW,2FAAG,kBAAOC,QAAP,CAAiBC,UAAjB,CAA6BC,QAA7B,0IACZC,MADY,CACH,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CADI,CADG,IAObH,UAPa,mEASI5C,CAAAA,KAAK,CAACgD,IAAN,+BACOL,QAAQ,CAACM,SAAT,CAAmBZ,GAD1B,iBAEhBM,QAFgB,CAGhBG,MAHgB,CATJ,QASRvB,GATQ,gBAcdA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcqB,QAAd,CAAyBA,QAAzB,CACAtB,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc0B,aAAd,CAA8BP,QAAQ,CAACA,QAAvC,CACA1B,QAAQ,CAAC,CAAEE,IAAI,CAAEf,cAAR,CAAwBgB,OAAO,CAAEG,GAAG,CAACC,IAAJ,CAASA,IAA1C,CAAD,CAAR,CAhBc,qFAkBdP,QAAQ,CAAC,CAAEE,IAAI,CAAEb,gBAAR,CAA0Bc,OAAO,CAAE,aAAIK,QAAJ,CAAa0B,GAAhD,CAAD,CAAR,CAlBc,kFAsBInD,CAAAA,KAAK,CAACoD,GAAN,8BACMR,UADN,EAEhBD,QAFgB,CAGhBG,MAHgB,CAtBJ,SAsBRvB,IAtBQ,gBA2BdA,IAAG,CAACC,IAAJ,CAASA,IAAT,CAAcqB,QAAd,CAAyBA,QAAzB,CACAtB,IAAG,CAACC,IAAJ,CAASA,IAAT,CAAc0B,aAAd,CAA8BP,QAAQ,CAACA,QAAvC,CACA1B,QAAQ,CAAC,CAAEE,IAAI,CAAEX,iBAAR,CAA2BY,OAAO,CAAEG,IAAG,CAACC,IAAJ,CAASA,IAA7C,CAAD,CAAR,CAEA;AA/Bc,sFAiCdP,QAAQ,CAAC,CAAEE,IAAI,CAAEb,gBAAR,CAA0Bc,OAAO,CAAE,aAAIK,QAAJ,CAAa0B,GAAhD,CAAD,CAAR,CAjCc,+EAAH,kBAAXT,CAAAA,WAAW,sDAAjB,CAsCA,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,WAAD,CAAiB,CACvC,GAAItC,KAAK,CAACJ,UAAV,CAAsB,CACpB,GAAI+B,CAAAA,QAAQ,CAAG3B,KAAK,CAACJ,UAAN,CAAiB2C,MAAjB,CACb,SAACC,IAAD,QACEA,CAAAA,IAAI,CAACP,SAAL,CAAeZ,GAAf,GAAuBiB,WAAvB,EAAsCE,IAAI,CAACP,SAAL,GAAmBK,WAD3D,EADa,CAAf,CAKA,GAAIX,QAAQ,CAACT,MAAT,GAAoB,CAAxB,CAA2B,CACzBS,QAAQ,CAAG,CACT,CACEM,SAAS,CAAE,CACTZ,GAAG,CAAEiB,WADI,CADb,CAIEG,KAAK,CAAEC,IAAI,CAACC,GAAL,EAJT,CAKEhB,QAAQ,CAAE,CALZ,CAMEiB,QAAQ,CAAE,GANZ,CADS,CAAX,CAUD,CAED,MAAOjB,CAAAA,QAAQ,CAAC,CAAD,CAAf,CACD,CACF,CAtBD,CAwBA,mBACE,oBAAC,iBAAD,CAAmB,QAAnB,EACE,KAAK,CAAE,CACL/B,UAAU,CAAEI,KAAK,CAACJ,UADb,CAELC,cAAc,CAAEG,KAAK,CAACH,cAFjB,CAGLC,OAAO,CAAEE,KAAK,CAACF,OAHV,CAILC,KAAK,CAAEC,KAAK,CAACD,KAJR,CAKLM,aAAa,CAAbA,aALK,CAMLH,iBAAiB,CAAjBA,iBANK,CAOLQ,iBAAiB,CAAjBA,iBAPK,CAQLgB,WAAW,CAAXA,WARK,CASLW,eAAe,CAAfA,eATK,CADT,EAaG3C,KAAK,CAACmD,QAbT,CADF,CAiBD,CAvID,CAyIA,cAAepD,CAAAA,eAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport ContadoresContext from './contadoresContext';\nimport contadoresReducer from './contadoresReducer';\n\nimport {\n  GET_CONTADORES,\n  ADD_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n} from '../types';\n\nconst ContadoresState = (props) => {\n  const initialState = {\n    contadores: null,\n    contadorSector: null,\n    loading: false,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contadoresReducer, initialState);\n\n  // Loading\n  const loadingContadores = () => {\n    const loading = true;\n    dispatch({ type: LOADING_CONTADORES, payload: loading });\n  };\n\n  // Obtener contadores por subsector\n  const getContadores = async () => {\n    try {\n      loadingContadores();\n\n      const res = await axios.get(`/api/v1/contadores`);\n\n      let contadores = res.data.data;\n\n      dispatch({ type: GET_CONTADORES, payload: contadores });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Obtener contadores por sector\n  const getContadorSector = async (zonas) => {\n    try {\n      loadingContadores();\n\n      const sectores = zonas.map((z) => z.sector);\n      const sectoresId = [];\n\n      for (let i = 0; i < sectores.length; i++) {\n        sectores[i].map((s) => sectoresId.push(s._id));\n      }\n\n      const res = await Promise.all(\n        sectoresId.map((id) => axios.get(`/api/v1/sectores/${id}/contadores`))\n      );\n\n      const contadorSector = res.map((p) => p.data.data);\n\n      dispatch({ type: GET_CONTADORES_SECTOR, payload: contadorSector });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Add contador\n  const addContador = async (contador, contadorId, sectorId) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    if (!contadorId) {\n      try {\n        const res = await axios.post(\n          `/api/v1/subsectores/${contador.subsector._id}/contadores/`,\n          contador,\n          config\n        );\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n        dispatch({ type: ADD_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    } else {\n      try {\n        const res = await axios.put(\n          `/api/v1/contadores/${contadorId}`,\n          contador,\n          config\n        );\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n        dispatch({ type: UPDATE_CONTADORES, payload: res.data.data });\n\n        // dispatch({ type: ADD_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    }\n  };\n\n  const setThisContador = (subsectorId) => {\n    if (state.contadores) {\n      let contador = state.contadores.filter(\n        (cont) =>\n          cont.subsector._id === subsectorId || cont.subsector === subsectorId\n      );\n\n      if (contador.length === 0) {\n        contador = [\n          {\n            subsector: {\n              _id: subsectorId,\n            },\n            fecha: Date.now(),\n            contador: 0,\n            dbStatus: 401,\n          },\n        ];\n      }\n\n      return contador[0];\n    }\n  };\n\n  return (\n    <ContadoresContext.Provider\n      value={{\n        contadores: state.contadores,\n        contadorSector: state.contadorSector,\n        loading: state.loading,\n        error: state.error,\n        getContadores,\n        loadingContadores,\n        getContadorSector,\n        addContador,\n        setThisContador,\n      }}\n    >\n      {props.children}\n    </ContadoresContext.Provider>\n  );\n};\n\nexport default ContadoresState;\n"]},"metadata":{},"sourceType":"module"}