{"ast":null,"code":"var _jsxFileName = \"/Users/eyallevyg/developer/ghost_climber/client/src/components/zonas/SectorCard.js\";\nimport React, { useContext, useState, Fragment } from 'react';\nimport SubSectorModal from '../zonas/SubSectorModal';\nimport GhostTotal from '../batches/GhostTotal';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\n\nconst SectorCard = ({\n  sector\n}) => {\n  const {\n    nombre,\n    subsectores\n  } = sector;\n  const [showModal, setShowModal] = useState(false);\n  const contadoresContext = useContext(ContadoresContext);\n  const {\n    contadores\n  } = contadoresContext;\n  let contadorSector;\n\n  if (contadores) {\n    const subsectoresId = subsectores.map(s => s._id);\n    contadorSector = contadores.filter(c => subsectoresId.indexOf(c._id)).reduce((a, b) => a + (b.contador || 0), 0);\n    console.log(contadorSector);\n  } else {\n    contadorSector = 0;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowModal(true),\n    className: \"inline-block flex justify-between  items-stretch md:items-center rounded shadow-lg m-3 md:w-64 bg-gray-300 focus:outline-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inline-block p-3  text-2xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, nombre), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GhostTotal, {\n    contador: contad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }))), showModal ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SubSectorModal, {\n    setShowModal: () => setShowModal(),\n    subsectores: subsectores,\n    sector: nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })) : null);\n};\n\nexport default SectorCard;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/components/zonas/SectorCard.js"],"names":["React","useContext","useState","Fragment","SubSectorModal","GhostTotal","ContadoresContext","SectorCard","sector","nombre","subsectores","showModal","setShowModal","contadoresContext","contadores","contadorSector","subsectoresId","map","s","_id","filter","c","indexOf","reduce","a","b","contador","console","log","contad"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,iBAAP,MAA8B,4CAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0BF,MAAhC;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMW,iBAAiB,GAAGZ,UAAU,CAACK,iBAAD,CAApC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAiBD,iBAAvB;AACA,MAAIE,cAAJ;;AACA,MAAID,UAAJ,EAAgB;AACd,UAAME,aAAa,GAAGN,WAAW,CAACO,GAAZ,CAAiBC,CAAD,IAAOA,CAAC,CAACC,GAAzB,CAAtB;AAEAJ,IAAAA,cAAc,GAAGD,UAAU,CACxBM,MADc,CACNC,CAAD,IAAOL,aAAa,CAACM,OAAd,CAAsBD,CAAC,CAACF,GAAxB,CADA,EAEdI,MAFc,CAEP,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,IAAIC,CAAC,CAACC,QAAF,IAAc,CAAlB,CAFJ,EAE0B,CAF1B,CAAjB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,cAAZ;AACD,GAPD,MAOO;AACLA,IAAAA,cAAc,GAAG,CAAjB;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,IAAD,CAD7B;AAEE,IAAA,SAAS,EAAC,+HAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CH,MAA7C,CAJF,eAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEoB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,EAUGlB,SAAS,gBACR;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,YAAY,EAAE,MAAMC,YAAY,EADlC;AAEE,IAAA,WAAW,EAAEF,WAFf;AAGE,IAAA,MAAM,EAAED,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,GAQN,IAlBN,CADF;AAsBD,CAxCD;;AA0CA,eAAeF,UAAf","sourcesContent":["import React, { useContext, useState, Fragment } from 'react';\nimport SubSectorModal from '../zonas/SubSectorModal';\nimport GhostTotal from '../batches/GhostTotal';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\n\nconst SectorCard = ({ sector }) => {\n  const { nombre, subsectores } = sector;\n  const [showModal, setShowModal] = useState(false);\n\n  const contadoresContext = useContext(ContadoresContext);\n  const { contadores } = contadoresContext;\n  let contadorSector;\n  if (contadores) {\n    const subsectoresId = subsectores.map((s) => s._id);\n\n    contadorSector = contadores\n      .filter((c) => subsectoresId.indexOf(c._id))\n      .reduce((a, b) => a + (b.contador || 0), 0);\n    console.log(contadorSector);\n  } else {\n    contadorSector = 0;\n  }\n\n  return (\n    <Fragment>\n      <button\n        onClick={() => setShowModal(true)}\n        className='inline-block flex justify-between  items-stretch md:items-center rounded shadow-lg m-3 md:w-64 bg-gray-300 focus:outline-none'\n      >\n        <div className='inline-block p-3  text-2xl'>{nombre}</div>\n        <div className='flex mr-3'>\n          <GhostTotal contador={contad} />\n        </div>\n      </button>\n      {showModal ? (\n        <div className='flex'>\n          <SubSectorModal\n            setShowModal={() => setShowModal()}\n            subsectores={subsectores}\n            sector={nombre}\n          />\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default SectorCard;\n"]},"metadata":{},"sourceType":"module"}