{"ast":null,"code":"import _regeneratorRuntime from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axios from'axios';import ContadoresContext from'./contadoresContext';import contadoresReducer from'./contadoresReducer';import{GET_CONTADORES,ADD_CONTADORES,ADD_CONTADOR_SECTOR,LOADING_CONTADORES,ERROR_CONTADORES,GET_CONTADORES_SECTOR,UPDATE_CONTADORES,FILTRAR_CONTADORES,SET_FECHA}from'../types';import sameDay from'../../utils/sameDay';var ContadoresState=function ContadoresState(props){var initialState={contadores:null,contadoresDay:null,contadorSector:null,contadorSectorDay:null,thisFecha:new Date(),loading:false,error:null};var _useReducer=useReducer(contadoresReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Loading\nvar loadingContadores=function loadingContadores(){var loading=true;dispatch({type:LOADING_CONTADORES,payload:loading});};// Obtener contadores por subsector\nvar getContadores=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,contadores;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;loadingContadores();_context.next=4;return axios.get(\"/api/v1/contadores\");case 4:res=_context.sent;contadores=res.data.data;dispatch({type:GET_CONTADORES,payload:contadores});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:ERROR_CONTADORES,payload:_context.t0.response});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function getContadores(){return _ref.apply(this,arguments);};}();// Obtener contadores por sector\nvar getContadorSector=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(zonas){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;return _context3.delegateYield(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var sectores,sectoresId,i,res,contadorSector;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:loadingContadores();_context2.next=3;return zonas.map(function(z){return z.sector;});case 3:sectores=_context2.sent;sectoresId=[];for(i=0;i<sectores.length;i++){sectores[i].map(function(s){return sectoresId.push(s._id);});}_context2.next=8;return Promise.all(sectoresId.map(function(id){return axios.get(\"/api/v1/sectores/\".concat(id,\"/contadores\"));}));case 8:res=_context2.sent;contadorSector=res.map(function(p){return p.data.data;}).flat(2);dispatch({type:GET_CONTADORES_SECTOR,payload:contadorSector});case 11:case\"end\":return _context2.stop();}}},_callee2);})(),\"t0\",2);case 2:_context3.next=7;break;case 4:_context3.prev=4;_context3.t1=_context3[\"catch\"](0);dispatch({type:ERROR_CONTADORES,payload:_context3.t1.response});case 7:case\"end\":return _context3.stop();}}},_callee3,null,[[0,4]]);}));return function getContadorSector(_x){return _ref2.apply(this,arguments);};}();// Add contador\nvar addContador=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(contador,contadorId,sectorId){var config,res,_res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:config={headers:{'Content-Type':'application/json'}};if(contadorId){_context4.next=16;break;}_context4.prev=2;_context4.next=5;return axios.post(\"/api/v1/subsectores/\".concat(contador.subsector._id,\"/contadores/\"),contador,config);case 5:res=_context4.sent;res.data.data.sectorId=sectorId;res.data.data.deltaContador=contador.contador;dispatch({type:ADD_CONTADORES,payload:res.data.data});_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](2);dispatch({type:ERROR_CONTADORES,payload:_context4.t0.response.msg});case 14:_context4.next=28;break;case 16:_context4.prev=16;_context4.next=19;return axios.put(\"/api/v1/contadores/\".concat(contadorId),contador,config);case 19:_res=_context4.sent;_res.data.data.sectorId=sectorId;_res.data.data.deltaContador=contador.contador;dispatch({type:UPDATE_CONTADORES,payload:_res.data.data});_context4.next=28;break;case 25:_context4.prev=25;_context4.t1=_context4[\"catch\"](16);dispatch({type:ERROR_CONTADORES,payload:_context4.t1.response.msg});case 28:case\"end\":return _context4.stop();}}},_callee4,null,[[2,11],[16,25]]);}));return function addContador(_x2,_x3,_x4){return _ref3.apply(this,arguments);};}();var addContadorSector=function addContadorSector(sectorId){var contadorExist=state.contadorSector.filter(function(cS){return cS._id===sectorId&&sameDay(cS.fecha,state.thisFecha);});if(contadorExist.length===0){var contadorSector={_id:{sector:sectorId},fecha:state.thisFecha,contador:0};dispatch({type:ADD_CONTADOR_SECTOR,payload:contadorSector});}};// Filtrar contador para subsector\nvar setThisContador=function setThisContador(subsectorId){if(state.contadoresDay){var contador=state.contadoresDay.filter(function(cont){return cont.subsector._id===subsectorId||cont.subsector===subsectorId;});if(contador.length===0){contador=[{subsector:{_id:subsectorId},fecha:state.thisFecha,contador:0,dbStatus:401}];}return contador[0];}};// Fijar fecha\nvar setFecha=function setFecha(fecha){dispatch({type:SET_FECHA,payload:fecha});};// Filtrar contadores por dÃ­a seleccionado\nvar filtrarContadores=function filtrarContadores(fecha){loadingContadores();dispatch({type:FILTRAR_CONTADORES,payload:fecha});};return/*#__PURE__*/React.createElement(ContadoresContext.Provider,{value:{contadores:state.contadores,contadoresDay:state.contadoresDay,contadorSector:state.contadorSector,contadorSectorDay:state.contadorSectorDay,thisFecha:state.thisFecha,loading:state.loading,error:state.error,getContadores:getContadores,loadingContadores:loadingContadores,getContadorSector:getContadorSector,addContadorSector:addContadorSector,addContador:addContador,setThisContador:setThisContador,filtrarContadores:filtrarContadores,setFecha:setFecha}},props.children);};export default ContadoresState;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/ContadoresState.js"],"names":["React","useReducer","axios","ContadoresContext","contadoresReducer","GET_CONTADORES","ADD_CONTADORES","ADD_CONTADOR_SECTOR","LOADING_CONTADORES","ERROR_CONTADORES","GET_CONTADORES_SECTOR","UPDATE_CONTADORES","FILTRAR_CONTADORES","SET_FECHA","sameDay","ContadoresState","props","initialState","contadores","contadoresDay","contadorSector","contadorSectorDay","thisFecha","Date","loading","error","state","dispatch","loadingContadores","type","payload","getContadores","get","res","data","response","getContadorSector","zonas","map","z","sector","sectores","sectoresId","i","length","s","push","_id","Promise","all","id","p","flat","addContador","contador","contadorId","sectorId","config","headers","post","subsector","deltaContador","msg","put","addContadorSector","contadorExist","filter","cS","fecha","setThisContador","subsectorId","cont","dbStatus","setFecha","filtrarContadores","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport ContadoresContext from './contadoresContext';\nimport contadoresReducer from './contadoresReducer';\n\nimport {\n  GET_CONTADORES,\n  ADD_CONTADORES,\n  ADD_CONTADOR_SECTOR,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n  FILTRAR_CONTADORES,\n  SET_FECHA,\n} from '../types';\nimport sameDay from '../../utils/sameDay';\n\nconst ContadoresState = (props) => {\n  const initialState = {\n    contadores: null,\n    contadoresDay: null,\n    contadorSector: null,\n    contadorSectorDay: null,\n    thisFecha: new Date(),\n    loading: false,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contadoresReducer, initialState);\n\n  // Loading\n  const loadingContadores = () => {\n    const loading = true;\n    dispatch({ type: LOADING_CONTADORES, payload: loading });\n  };\n\n  // Obtener contadores por subsector\n  const getContadores = async () => {\n    try {\n      loadingContadores();\n\n      const res = await axios.get(`/api/v1/contadores`);\n\n      let contadores = res.data.data;\n\n      dispatch({ type: GET_CONTADORES, payload: contadores });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Obtener contadores por sector\n  const getContadorSector = async (zonas) => {\n    try {\n      loadingContadores();\n\n      const sectores = await zonas.map((z) => z.sector);\n      const sectoresId = [];\n\n      for (let i = 0; i < sectores.length; i++) {\n        sectores[i].map((s) => sectoresId.push(s._id));\n      }\n\n      const res = await Promise.all(\n        sectoresId.map((id) => axios.get(`/api/v1/sectores/${id}/contadores`))\n      );\n\n      const contadorSector = res.map((p) => p.data.data).flat(2);\n\n      dispatch({ type: GET_CONTADORES_SECTOR, payload: contadorSector });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Add contador\n  const addContador = async (contador, contadorId, sectorId) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    if (!contadorId) {\n      try {\n        const res = await axios.post(\n          `/api/v1/subsectores/${contador.subsector._id}/contadores/`,\n          contador,\n          config\n        );\n\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n        dispatch({ type: ADD_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    } else {\n      try {\n        const res = await axios.put(\n          `/api/v1/contadores/${contadorId}`,\n          contador,\n          config\n        );\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n        dispatch({ type: UPDATE_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    }\n  };\n\n  const addContadorSector = (sectorId) => {\n    const contadorExist = state.contadorSector.filter(\n      (cS) => cS._id === sectorId && sameDay(cS.fecha, state.thisFecha)\n    );\n\n    if (contadorExist.length === 0) {\n      const contadorSector = {\n        _id: { sector: sectorId },\n        fecha: state.thisFecha,\n        contador: 0,\n      };\n      dispatch({ type: ADD_CONTADOR_SECTOR, payload: contadorSector });\n    }\n  };\n\n  // Filtrar contador para subsector\n  const setThisContador = (subsectorId) => {\n    if (state.contadoresDay) {\n      let contador = state.contadoresDay.filter(\n        (cont) =>\n          cont.subsector._id === subsectorId || cont.subsector === subsectorId\n      );\n\n      if (contador.length === 0) {\n        contador = [\n          {\n            subsector: {\n              _id: subsectorId,\n            },\n            fecha: state.thisFecha,\n            contador: 0,\n            dbStatus: 401,\n          },\n        ];\n      }\n\n      return contador[0];\n    }\n  };\n\n  // Fijar fecha\n  const setFecha = (fecha) => {\n    dispatch({ type: SET_FECHA, payload: fecha });\n  };\n\n  // Filtrar contadores por dÃ­a seleccionado\n  const filtrarContadores = (fecha) => {\n    loadingContadores();\n    dispatch({ type: FILTRAR_CONTADORES, payload: fecha });\n  };\n\n  return (\n    <ContadoresContext.Provider\n      value={{\n        contadores: state.contadores,\n        contadoresDay: state.contadoresDay,\n        contadorSector: state.contadorSector,\n        contadorSectorDay: state.contadorSectorDay,\n        thisFecha: state.thisFecha,\n        loading: state.loading,\n        error: state.error,\n        getContadores,\n        loadingContadores,\n        getContadorSector,\n        addContadorSector,\n        addContador,\n        setThisContador,\n        filtrarContadores,\n        setFecha,\n      }}\n    >\n      {props.children}\n    </ContadoresContext.Provider>\n  );\n};\n\nexport default ContadoresState;\n"]},"metadata":{},"sourceType":"module"}