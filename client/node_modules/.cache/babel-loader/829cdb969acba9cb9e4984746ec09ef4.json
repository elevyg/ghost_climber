{"ast":null,"code":"var _jsxFileName = \"/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/contadoresState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport groupBy from 'lodash/groupBy';\nimport renameKeys from '../../utils/renameKeys';\nimport ContadoresContext from './contadoresContext';\nimport contadoresReducer from './contadoresReducer';\nimport { GET_ZONAS, ZONAS_ERROR, LOADING_ZONAS } from '../types';\n\nconst ContadoresState = props => {\n  const initialState = {\n    contador: null,\n    loading: false,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contadoresReducer, initialState); // Loading\n\n  const loadingZonas = () => {\n    const loading = true;\n    dispatch({\n      type: LOADING_ZONAS,\n      payload: loading\n    });\n  }; // Get Zonas\n\n\n  const getZonas = async () => {\n    try {\n      loadingZonas();\n      const res = await axios.get('/api/v1/sectores');\n      let zonas = res.data.data;\n      zonas = Object.entries(groupBy(zonas, 'comuna')).map(zona => renameKeys({\n        0: 'comuna',\n        1: 'sector'\n      }, zona));\n      dispatch({\n        type: GET_ZONAS,\n        payload: zonas\n      });\n    } catch (err) {\n      dispatch({\n        type: ZONAS_ERROR,\n        payload: err.response\n      });\n    }\n  }; // // Filter Contacts\n  // const filterContacts = (text) => {\n  //   dispatch({ type: FILTER_CONTACTS, payload: text });\n  // };\n  // // Clear Filter\n  // const clearFilter = () => {\n  //   dispatch({ type: CLEAR_FILTER });\n  // };\n  // // Clear Contacts\n  // const clearContacts = () => dispatch({ type: CLEAR_CONTACTS });\n\n\n  return /*#__PURE__*/React.createElement(ContadoresContext.Provider, {\n    value: {\n      zonas: state.zonas,\n      loading: state.loading,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      // filterContacts,\n      // clearFilter,\n      getZonas,\n      // clearContacts,\n      loadingZonas\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContadoresState;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/contadoresState.js"],"names":["React","useReducer","axios","groupBy","renameKeys","ContadoresContext","contadoresReducer","GET_ZONAS","ZONAS_ERROR","LOADING_ZONAS","ContadoresState","props","initialState","contador","loading","current","filtered","error","state","dispatch","loadingZonas","type","payload","getZonas","res","get","zonas","data","Object","entries","map","zona","err","response","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,aAAjC,QAAsD,UAAtD;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,IADS;AAEnBC,IAAAA,OAAO,EAAE,KAFU;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,QAAQ,EAAE,IAJS;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,UAAU,CAACK,iBAAD,EAAoBM,YAApB,CAApC,CATiC,CAWjC;;AACA,QAAMQ,YAAY,GAAG,MAAM;AACzB,UAAMN,OAAO,GAAG,IAAhB;AACAK,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEZ,aAAR;AAAuBa,MAAAA,OAAO,EAAER;AAAhC,KAAD,CAAR;AACD,GAHD,CAZiC,CAiBjC;;;AACA,QAAMS,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACFH,MAAAA,YAAY;AACZ,YAAMI,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAU,kBAAV,CAAlB;AAEA,UAAIC,KAAK,GAAGF,GAAG,CAACG,IAAJ,CAASA,IAArB;AAEAD,MAAAA,KAAK,GAAGE,MAAM,CAACC,OAAP,CAAe1B,OAAO,CAACuB,KAAD,EAAQ,QAAR,CAAtB,EAAyCI,GAAzC,CAA8CC,IAAD,IACnD3B,UAAU,CAAC;AAAE,WAAG,QAAL;AAAe,WAAG;AAAlB,OAAD,EAA+B2B,IAA/B,CADJ,CAAR;AAIAZ,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEd,SAAR;AAAmBe,QAAAA,OAAO,EAAEI;AAA5B,OAAD,CAAR;AACD,KAXD,CAWE,OAAOM,GAAP,EAAY;AACZb,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEb,WAAR;AAAqBc,QAAAA,OAAO,EAAEU,GAAG,CAACC;AAAlC,OAAD,CAAR;AACD;AACF,GAfD,CAlBiC,CAmCjC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;;AAEA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,KAAK,EAAER,KAAK,CAACQ,KADR;AAELZ,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFV;AAGLC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILC,MAAAA,QAAQ,EAAEE,KAAK,CAACF,QAJX;AAKLC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALR;AAML;AACA;AACAM,MAAAA,QARK;AASL;AACAH,MAAAA;AAVK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGT,KAAK,CAACuB,QAdT,CADF;AAkBD,CAnED;;AAqEA,eAAexB,eAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport groupBy from 'lodash/groupBy';\nimport renameKeys from '../../utils/renameKeys';\n\nimport ContadoresContext from './contadoresContext';\nimport contadoresReducer from './contadoresReducer';\n\nimport { GET_ZONAS, ZONAS_ERROR, LOADING_ZONAS } from '../types';\n\nconst ContadoresState = (props) => {\n  const initialState = {\n    contador: null,\n    loading: false,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contadoresReducer, initialState);\n\n  // Loading\n  const loadingZonas = () => {\n    const loading = true;\n    dispatch({ type: LOADING_ZONAS, payload: loading });\n  };\n\n  // Get Zonas\n  const getZonas = async () => {\n    try {\n      loadingZonas();\n      const res = await axios.get('/api/v1/sectores');\n\n      let zonas = res.data.data;\n\n      zonas = Object.entries(groupBy(zonas, 'comuna')).map((zona) =>\n        renameKeys({ 0: 'comuna', 1: 'sector' }, zona)\n      );\n\n      dispatch({ type: GET_ZONAS, payload: zonas });\n    } catch (err) {\n      dispatch({ type: ZONAS_ERROR, payload: err.response });\n    }\n  };\n\n  // // Filter Contacts\n  // const filterContacts = (text) => {\n  //   dispatch({ type: FILTER_CONTACTS, payload: text });\n  // };\n\n  // // Clear Filter\n  // const clearFilter = () => {\n  //   dispatch({ type: CLEAR_FILTER });\n  // };\n\n  // // Clear Contacts\n\n  // const clearContacts = () => dispatch({ type: CLEAR_CONTACTS });\n\n  return (\n    <ContadoresContext.Provider\n      value={{\n        zonas: state.zonas,\n        loading: state.loading,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        // filterContacts,\n        // clearFilter,\n        getZonas,\n        // clearContacts,\n        loadingZonas,\n      }}\n    >\n      {props.children}\n    </ContadoresContext.Provider>\n  );\n};\n\nexport default ContadoresState;\n"]},"metadata":{},"sourceType":"module"}