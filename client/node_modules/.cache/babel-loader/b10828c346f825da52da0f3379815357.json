{"ast":null,"code":"var _jsxFileName = \"/Users/eyallevyg/developer/ghost_climber/client/src/components/auth/Register.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Register = () => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    register,\n    error,\n    clearErrors\n  } = authContext;\n  useEffect(() => {\n    if (error === 'User already exists') {\n      setAlert(error, 'danger');\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error]);\n  const [user, setUser] = useState({\n    userName: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    userName,\n    password,\n    password2\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (userName === '' || password === '') {\n      setAlert('Por favor complete todos los campos', 'danger');\n    } else if (password !== password2) {\n      setAlert('Las contraseñas no coinciden', 'danger');\n    } else {\n      register({\n        userName,\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Reg\\xEDstrate\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userName\",\n    className: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Usuario\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input mt-1 block w-full\",\n    type: \"text\",\n    name: \"userName\",\n    value: userName,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Contrase\\xF1a\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input mt-1 block w-full\",\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password2\",\n    className: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \" Repetir Contrase\\xF1a\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input mt-1 block w-full\",\n    type: \"password\",\n    name: \"password2\",\n    value: password2,\n    onChange: onChange,\n    required: true,\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"block bg-blue-500 text-white rounded focus:outline-none p-3 mt-2 active:bg-gray-500 focus:shadow-outline hover:bg-blue-300\",\n    type: \"submit\",\n    value: \"Enviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/components/auth/Register.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Register","alertContext","authContext","setAlert","register","error","clearErrors","user","setUser","userName","password","password2","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,YAAY,GAAGL,UAAU,CAACE,YAAD,CAA/B;AACA,QAAMI,WAAW,GAAGN,UAAU,CAACG,WAAD,CAA9B;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAeF,YAArB;AAEA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAmCJ,WAAzC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,KAAK,KAAK,qBAAd,EAAqC;AACnCF,MAAAA,QAAQ,CAACE,KAAD,EAAQ,QAAR,CAAR;AACAC,MAAAA,WAAW;AACZ,KAJa,CAKd;;AACD,GANQ,EAMN,CAACD,KAAD,CANM,CAAT;AAQA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAC/Bc,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,QAAQ,EAAE,EAFqB;AAG/BC,IAAAA,SAAS,EAAE;AAHoB,GAAD,CAAhC;AAMA,QAAM;AAAEF,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAoCJ,IAA1C;;AAEA,QAAMK,QAAQ,GAAIC,CAAD,IAAOL,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,KAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAArC,GAAD,CAA/B;;AAEA,QAAMC,QAAQ,GAAIJ,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAIT,QAAQ,KAAK,EAAb,IAAmBC,QAAQ,KAAK,EAApC,EAAwC;AACtCP,MAAAA,QAAQ,CAAC,qCAAD,EAAwC,QAAxC,CAAR;AACD,KAFD,MAEO,IAAIO,QAAQ,KAAKC,SAAjB,EAA4B;AACjCR,MAAAA,QAAQ,CAAC,8BAAD,EAAiC,QAAjC,CAAR;AACD,KAFM,MAEA;AACLC,MAAAA,QAAQ,CAAC;AACPK,QAAAA,QADO;AAEPC,QAAAA;AAFO,OAAD,CAAR;AAID;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAM,IAAA,QAAQ,EAAEO,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAER,QAJT;AAKE,IAAA,QAAQ,EAAEG,QALZ;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAaE;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEF,QAJT;AAKE,IAAA,QAAQ,EAAEE,QALZ;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,EAAC,GAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,eA0BE;AAAO,IAAA,OAAO,EAAC,WAAf;AAA2B,IAAA,SAAS,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,KAAK,EAAED,SAJT;AAKE,IAAA,QAAQ,EAAEC,QALZ;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,EAAC,GAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA1BF,eAuCE;AACE,IAAA,SAAS,EAAC,4HADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,CAFF,CADF;AAkDD,CA1FD;;AA4FA,eAAeZ,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Register = () => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n\n  const { register, error, clearErrors } = authContext;\n\n  useEffect(() => {\n    if (error === 'User already exists') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [error]);\n\n  const [user, setUser] = useState({\n    userName: '',\n    password: '',\n    password2: '',\n  });\n\n  const { userName, password, password2 } = user;\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (userName === '' || password === '') {\n      setAlert('Por favor complete todos los campos', 'danger');\n    } else if (password !== password2) {\n      setAlert('Las contraseñas no coinciden', 'danger');\n    } else {\n      register({\n        userName,\n        password,\n      });\n    }\n  };\n\n  return (\n    <div className='container'>\n      <h1 className='text-3xl'>Regístrate</h1>\n      <form onSubmit={onSubmit}>\n        <label htmlFor='userName' className='block'>\n          <span className='text-gray-700'>Usuario</span>\n          <input\n            className='form-input mt-1 block w-full'\n            type='text'\n            name='userName'\n            value={userName}\n            onChange={onChange}\n            required\n          />\n        </label>\n\n        <label htmlFor='password' className='block'>\n          <span className='text-gray-700'>Contraseña</span>\n          <input\n            className='form-input mt-1 block w-full'\n            type='password'\n            name='password'\n            value={password}\n            onChange={onChange}\n            required\n            minLength='6'\n          />\n        </label>\n\n        <label htmlFor='password2' className='block'>\n          <span className='text-gray-700'> Repetir Contraseña</span>\n          <input\n            className='form-input mt-1 block w-full'\n            type='password'\n            name='password2'\n            value={password2}\n            onChange={onChange}\n            required\n            minLength='6'\n          />\n        </label>\n\n        <input\n          className='block bg-blue-500 text-white rounded focus:outline-none p-3 mt-2 active:bg-gray-500 focus:shadow-outline hover:bg-blue-300'\n          type='submit'\n          value='Enviar'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}