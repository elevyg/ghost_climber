{"ast":null,"code":"import React,{useContext,useEffect}from'react';// import { useAsync } from 'react-async-hook';\nimport ZonasContext from'../../context/zonas/zonasContext';import Zona from'./Zona';import GhostLoading from'../layout/GhostLoading';import ContadoresContext from'../../context/contadores/contadoresContext';var ZonasList=function ZonasList(){var zonasContext=useContext(ZonasContext);var zonas=zonasContext.zonas,getZonas=zonasContext.getZonas,loading=zonasContext.loading;var contadoresContext=useContext(ContadoresContext);var getContadores=contadoresContext.getContadores,getContadorSector=contadoresContext.getContadorSector,filtrarContadores=contadoresContext.filtrarContadores,contadores=contadoresContext.contadores,contadorSector=contadoresContext.contadorSector,thisFecha=contadoresContext.thisFecha;// const loadingCont = contadoresContext.loading;\nuseEffect(function(){getZonas();getContadores();// eslint-disable-next-line\n},[]);useEffect(function(){if(contadores&&contadorSector){filtrarContadores(thisFecha);}// eslint-disable-next-line\n},[contadores,contadorSector,thisFecha]);useEffect(function(){getContadorSector(zonas);// eslint-disable-next-line\n},[zonas]);if(zonas!==null&&zonas.length===0&&!loading){return/*#__PURE__*/React.createElement(\"h4\",null,\" Error \");}return/*#__PURE__*/React.createElement(\"div\",{className:\"flex flex-wrap items-baseline\"},loading?/*#__PURE__*/React.createElement(GhostLoading,null):zonas&&zonas.map(function(zona){return/*#__PURE__*/React.createElement(Zona,{key:zona.comuna,zona:zona});}));};export default ZonasList;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/components/zonas/ZonasList.js"],"names":["React","useContext","useEffect","ZonasContext","Zona","GhostLoading","ContadoresContext","ZonasList","zonasContext","zonas","getZonas","loading","contadoresContext","getContadores","getContadorSector","filtrarContadores","contadores","contadorSector","thisFecha","length","map","zona","comuna"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA;AACA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,4CAA9B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,YAAY,CAAGP,UAAU,CAACE,YAAD,CAA/B,CADsB,GAEdM,CAAAA,KAFc,CAEeD,YAFf,CAEdC,KAFc,CAEPC,QAFO,CAEeF,YAFf,CAEPE,QAFO,CAEGC,OAFH,CAEeH,YAFf,CAEGG,OAFH,CAItB,GAAMC,CAAAA,iBAAiB,CAAGX,UAAU,CAACK,iBAAD,CAApC,CAJsB,GAMpBO,CAAAA,aANoB,CAYlBD,iBAZkB,CAMpBC,aANoB,CAOpBC,iBAPoB,CAYlBF,iBAZkB,CAOpBE,iBAPoB,CAQpBC,iBARoB,CAYlBH,iBAZkB,CAQpBG,iBARoB,CASpBC,UAToB,CAYlBJ,iBAZkB,CASpBI,UAToB,CAUpBC,cAVoB,CAYlBL,iBAZkB,CAUpBK,cAVoB,CAWpBC,SAXoB,CAYlBN,iBAZkB,CAWpBM,SAXoB,CActB;AAEAhB,SAAS,CAAC,UAAM,CACdQ,QAAQ,GACRG,aAAa,GAEb;AACD,CALQ,CAKN,EALM,CAAT,CAOAX,SAAS,CAAC,UAAM,CACd,GAAIc,UAAU,EAAIC,cAAlB,CAAkC,CAChCF,iBAAiB,CAACG,SAAD,CAAjB,CACD,CAED;AACD,CANQ,CAMN,CAACF,UAAD,CAAaC,cAAb,CAA6BC,SAA7B,CANM,CAAT,CAQAhB,SAAS,CAAC,UAAM,CACdY,iBAAiB,CAACL,KAAD,CAAjB,CACA;AACD,CAHQ,CAGN,CAACA,KAAD,CAHM,CAAT,CAKA,GAAIA,KAAK,GAAK,IAAV,EAAkBA,KAAK,CAACU,MAAN,GAAiB,CAAnC,EAAwC,CAACR,OAA7C,CAAsD,CACpD,mBAAO,wCAAP,CACD,CAED,mBACE,2BAAK,SAAS,CAAC,+BAAf,EACGA,OAAO,cACN,oBAAC,YAAD,MADM,CAGNF,KAAK,EAAIA,KAAK,CAACW,GAAN,CAAU,SAACC,IAAD,qBAAU,oBAAC,IAAD,EAAM,GAAG,CAAEA,IAAI,CAACC,MAAhB,CAAwB,IAAI,CAAED,IAA9B,EAAV,EAAV,CAJb,CADF,CASD,CAjDD,CAmDA,cAAed,CAAAA,SAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\n// import { useAsync } from 'react-async-hook';\nimport ZonasContext from '../../context/zonas/zonasContext';\nimport Zona from './Zona';\nimport GhostLoading from '../layout/GhostLoading';\nimport ContadoresContext from '../../context/contadores/contadoresContext';\n\nconst ZonasList = () => {\n  const zonasContext = useContext(ZonasContext);\n  const { zonas, getZonas, loading } = zonasContext;\n\n  const contadoresContext = useContext(ContadoresContext);\n  const {\n    getContadores,\n    getContadorSector,\n    filtrarContadores,\n    contadores,\n    contadorSector,\n    thisFecha,\n  } = contadoresContext;\n\n  // const loadingCont = contadoresContext.loading;\n\n  useEffect(() => {\n    getZonas();\n    getContadores();\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (contadores && contadorSector) {\n      filtrarContadores(thisFecha);\n    }\n\n    // eslint-disable-next-line\n  }, [contadores, contadorSector, thisFecha]);\n\n  useEffect(() => {\n    getContadorSector(zonas);\n    // eslint-disable-next-line\n  }, [zonas]);\n\n  if (zonas !== null && zonas.length === 0 && !loading) {\n    return <h4> Error </h4>;\n  }\n\n  return (\n    <div className='flex flex-wrap items-baseline'>\n      {loading ? (\n        <GhostLoading />\n      ) : (\n        zonas && zonas.map((zona) => <Zona key={zona.comuna} zona={zona} />)\n      )}\n    </div>\n  );\n};\n\nexport default ZonasList;\n"]},"metadata":{},"sourceType":"module"}