{"ast":null,"code":"import { GET_CONTADORES, ADD_CONTADORES, LOADING_CONTADORES, ERROR_CONTADORES, GET_CONTADORES_SECTOR, UPDATE_CONTADORES, FILTRAR_CONTADORES, SET_FECHA, ADD_CONTADOR_SECTOR } from '../types';\nimport sameDay from '../../utils/sameDay';\nexport default ((state, action) => {\n  switch (action.type) {\n    case LOADING_CONTADORES:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_FECHA:\n      return { ...state,\n        thisFecha: action.payload\n      };\n\n    case GET_CONTADORES:\n      return { ...state,\n        contadores: action.payload,\n        loading: false\n      };\n\n    case GET_CONTADORES_SECTOR:\n      return { ...state,\n        contadorSector: action.payload,\n        loading: false\n      };\n\n    case UPDATE_CONTADORES:\n      return { ...state,\n        contadoresDay: state.contadoresDay.map(contador => contador._id === action.payload._id ? action.payload : contador),\n        contadorSectorDay: state.contadorSectorDay.map(cS => cS._id.sector === action.payload.sectorId ? { ...cS,\n          contador: cS.contador + action.payload.deltaContador\n        } : cS),\n        loading: false\n      };\n\n    case ADD_CONTADORES:\n      return { ...state,\n        contadores: [...state.contadoresDay, action.payload],\n        contadorSectorDay: state.contadorSectorDay.map(cS => cS._id.sector === action.payload.sectorId ? { ...cS,\n          contador: cS.contador + action.payload.deltaContador\n        } : cS)\n      };\n\n    case ADD_CONTADOR_SECTOR:\n      return { ...state,\n        contadorSector: [...state.contadorSector, action.payload],\n        contadorSectorDay: [...state.contadorSectorDay, action.payload]\n      };\n\n    case FILTRAR_CONTADORES:\n      return { ...state,\n        contadoresDay: state.contadores.filter(cont => sameDay(cont.fecha, action.payload)),\n        contadorSectorDay: state.contadorSector.filter(cont => sameDay(cont.fecha, action.payload))\n      };\n\n    case ERROR_CONTADORES:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/contadoresReducer.js"],"names":["GET_CONTADORES","ADD_CONTADORES","LOADING_CONTADORES","ERROR_CONTADORES","GET_CONTADORES_SECTOR","UPDATE_CONTADORES","FILTRAR_CONTADORES","SET_FECHA","ADD_CONTADOR_SECTOR","sameDay","state","action","type","loading","thisFecha","payload","contadores","contadorSector","contadoresDay","map","contador","_id","contadorSectorDay","cS","sector","sectorId","deltaContador","filter","cont","fecha","error"],"mappings":"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","sourcesContent":["import {\n  GET_CONTADORES,\n  ADD_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n  FILTRAR_CONTADORES,\n  SET_FECHA,\n  ADD_CONTADOR_SECTOR,\n} from '../types';\n\nimport sameDay from '../../utils/sameDay';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOADING_CONTADORES:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_FECHA:\n      return {\n        ...state,\n        thisFecha: action.payload,\n      };\n    case GET_CONTADORES:\n      return {\n        ...state,\n        contadores: action.payload,\n        loading: false,\n      };\n    case GET_CONTADORES_SECTOR:\n      return {\n        ...state,\n        contadorSector: action.payload,\n        loading: false,\n      };\n\n    case UPDATE_CONTADORES:\n      return {\n        ...state,\n        contadoresDay: state.contadoresDay.map((contador) =>\n          contador._id === action.payload._id ? action.payload : contador\n        ),\n        contadorSectorDay: state.contadorSectorDay.map((cS) =>\n          cS._id.sector === action.payload.sectorId\n            ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n            : cS\n        ),\n        loading: false,\n      };\n    case ADD_CONTADORES:\n      return {\n        ...state,\n        contadores: [...state.contadoresDay, action.payload],\n        contadorSectorDay: state.contadorSectorDay.map((cS) =>\n          cS._id.sector === action.payload.sectorId\n            ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n            : cS\n        ),\n      };\n    case ADD_CONTADOR_SECTOR:\n      return {\n        ...state,\n        contadorSector: [...state.contadorSector, action.payload],\n        contadorSectorDay: [...state.contadorSectorDay, action.payload],\n      };\n    case FILTRAR_CONTADORES:\n      return {\n        ...state,\n        contadoresDay: state.contadores.filter((cont) =>\n          sameDay(cont.fecha, action.payload)\n        ),\n        contadorSectorDay: state.contadorSector.filter((cont) =>\n          sameDay(cont.fecha, action.payload)\n        ),\n      };\n    case ERROR_CONTADORES:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}