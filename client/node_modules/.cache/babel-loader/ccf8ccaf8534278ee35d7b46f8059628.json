{"ast":null,"code":"import { GET_CONTADORES, ADD_CONTADORES, REST_CONTADORES, LOADING_CONTADORES, ERROR_CONTADORES, GET_CONTADORES_SECTOR, UPDATE_CONTADORES } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case LOADING_CONTADORES:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_CONTADORES:\n      return { ...state,\n        contadores: action.payload,\n        loading: false\n      };\n\n    case GET_CONTADORES_SECTOR:\n      return { ...state,\n        contadorSector: action.payload,\n        loading: false\n      };\n\n    case UPDATE_CONTADORES:\n      console.log(state.contadorSector.map(cS => cS));\n      return { ...state,\n        contadores: state.contadores.map(contador => contador._id === action.payload._id ? action.payload : contador),\n        contadorSector: state.contadorSector.map(cS => cS._id === action.payload.sector ? { ...cS,\n          contador: cS.contador + action.payload.contador\n        } : cS),\n        loading: false\n      };\n\n    case ADD_CONTADORES:\n      console.log(state.contadorSector.map(cS => cS));\n      return { ...state,\n        contadores: [...state.contadores, action.payload],\n        contadorSector: state.contadorSector.map(cS => cS._id === action.payload.sector ? { ...cS,\n          contador: cS.contador + action.payload.contador\n        } : cS)\n      };\n\n    case ERROR_CONTADORES:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/contadoresReducer.js"],"names":["GET_CONTADORES","ADD_CONTADORES","REST_CONTADORES","LOADING_CONTADORES","ERROR_CONTADORES","GET_CONTADORES_SECTOR","UPDATE_CONTADORES","state","action","type","loading","contadores","payload","contadorSector","console","log","map","cS","contador","_id","sector","error"],"mappings":"AAAA,SACEA,cADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,qBANF,EAOEC,iBAPF,QAQO,UARP;AAUA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,kBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKV,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELI,QAAAA,UAAU,EAAEH,MAAM,CAACI,OAFd;AAGLF,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,qBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELM,QAAAA,cAAc,EAAEL,MAAM,CAACI,OAFlB;AAGLF,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,iBAAL;AACEQ,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACM,cAAN,CAAqBG,GAArB,CAA0BC,EAAD,IAAQA,EAAjC,CAAZ;AACA,aAAO,EACL,GAAGV,KADE;AAELI,QAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,CAAiBK,GAAjB,CAAsBE,QAAD,IAC/BA,QAAQ,CAACC,GAAT,KAAiBX,MAAM,CAACI,OAAP,CAAeO,GAAhC,GAAsCX,MAAM,CAACI,OAA7C,GAAuDM,QAD7C,CAFP;AAKLL,QAAAA,cAAc,EAAEN,KAAK,CAACM,cAAN,CAAqBG,GAArB,CAA0BC,EAAD,IACvCA,EAAE,CAACE,GAAH,KAAWX,MAAM,CAACI,OAAP,CAAeQ,MAA1B,GACI,EAAE,GAAGH,EAAL;AAASC,UAAAA,QAAQ,EAAED,EAAE,CAACC,QAAH,GAAcV,MAAM,CAACI,OAAP,CAAeM;AAAhD,SADJ,GAEID,EAHU,CALX;AAULP,QAAAA,OAAO,EAAE;AAVJ,OAAP;;AAYF,SAAKT,cAAL;AACEa,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACM,cAAN,CAAqBG,GAArB,CAA0BC,EAAD,IAAQA,EAAjC,CAAZ;AACA,aAAO,EACL,GAAGV,KADE;AAELI,QAAAA,UAAU,EAAE,CAAC,GAAGJ,KAAK,CAACI,UAAV,EAAsBH,MAAM,CAACI,OAA7B,CAFP;AAGLC,QAAAA,cAAc,EAAEN,KAAK,CAACM,cAAN,CAAqBG,GAArB,CAA0BC,EAAD,IACvCA,EAAE,CAACE,GAAH,KAAWX,MAAM,CAACI,OAAP,CAAeQ,MAA1B,GACI,EAAE,GAAGH,EAAL;AAASC,UAAAA,QAAQ,EAAED,EAAE,CAACC,QAAH,GAAcV,MAAM,CAACI,OAAP,CAAeM;AAAhD,SADJ,GAEID,EAHU;AAHX,OAAP;;AASF,SAAKb,gBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLW,QAAAA,KAAK,EAAEb,MAAM,CAACI;AAHT,OAAP;;AAKF;AACE,aAAOL,KAAP;AAlDJ;AAoDD,CArDD","sourcesContent":["import {\n  GET_CONTADORES,\n  ADD_CONTADORES,\n  REST_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOADING_CONTADORES:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_CONTADORES:\n      return {\n        ...state,\n        contadores: action.payload,\n        loading: false,\n      };\n    case GET_CONTADORES_SECTOR:\n      return {\n        ...state,\n        contadorSector: action.payload,\n        loading: false,\n      };\n    case UPDATE_CONTADORES:\n      console.log(state.contadorSector.map((cS) => cS));\n      return {\n        ...state,\n        contadores: state.contadores.map((contador) =>\n          contador._id === action.payload._id ? action.payload : contador\n        ),\n        contadorSector: state.contadorSector.map((cS) =>\n          cS._id === action.payload.sector\n            ? { ...cS, contador: cS.contador + action.payload.contador }\n            : cS\n        ),\n        loading: false,\n      };\n    case ADD_CONTADORES:\n      console.log(state.contadorSector.map((cS) => cS));\n      return {\n        ...state,\n        contadores: [...state.contadores, action.payload],\n        contadorSector: state.contadorSector.map((cS) =>\n          cS._id === action.payload.sector\n            ? { ...cS, contador: cS.contador + action.payload.contador }\n            : cS\n        ),\n      };\n    case ERROR_CONTADORES:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}