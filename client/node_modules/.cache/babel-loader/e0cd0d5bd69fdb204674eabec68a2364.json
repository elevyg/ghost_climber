{"ast":null,"code":"import _toConsumableArray from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_CONTADORES,GET_ZONAS,GET_CONTADORES_SECTOR,ADD_CONTADORES,LOADING_CONTADORES,ERROR_CONTADORES,UPDATE_CONTADORES,FILTRAR_CONTADORES,CLEAR_FILTER,SET_FECHA,LOADING_ZONAS}from'../types';import moment from'moment';export default(function(state,action){switch(action.type){case GET_ZONAS:return _objectSpread(_objectSpread({},state),{},{loadingZonas:false,zonas:action.payload});case LOADING_CONTADORES:return _objectSpread(_objectSpread({},state),{},{loading:true});case LOADING_ZONAS:return _objectSpread(_objectSpread({},state),{},{loadingZonas:true});case SET_FECHA:return _objectSpread(_objectSpread({},state),{},{thisFecha:action.payload});case GET_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadores:action.payload,loading:false});case GET_CONTADORES_SECTOR:return _objectSpread(_objectSpread({},state),{},{contadorSector:action.payload,loading:false});case UPDATE_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadores:state.contadores.map(function(contador){return contador._id===action.payload._id?action.payload:contador;}),// contadorSector: state.contadorSector.map((cS) =>\n//   cS._id.sector === action.payload.sectorId &&\n//   moment(cS.fecha).isSame(action.payload.fecha, 'day')\n//     ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n//     : cS\n// ),\nloading:false});case ADD_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadores:[].concat(_toConsumableArray(state.contadores),[action.payload])// contadorSector: state.contadorSector.map((cS) =>\n//   cS._id.sector === action.payload.sectorId &&\n//   moment(cS.fecha).isSame(action.payload.fecha, 'day')\n//     ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n//     : cS\n// ),\n});case FILTRAR_CONTADORES:return _objectSpread(_objectSpread({},state),{},{contadoresDay:state.contadores.filter(function(cont){return moment(cont.fecha).isSame(action.payload,'day');}),contadorSectorDay:state.contadorSector.filter(function(cont){return moment(cont.fecha).isSame(action.payload,'day');}),loading:false});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{contadoresDay:null,contadorSectorDay:null});case ERROR_CONTADORES:return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload});default:return state;}});","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/contadoresReducer.js"],"names":["GET_CONTADORES","GET_ZONAS","GET_CONTADORES_SECTOR","ADD_CONTADORES","LOADING_CONTADORES","ERROR_CONTADORES","UPDATE_CONTADORES","FILTRAR_CONTADORES","CLEAR_FILTER","SET_FECHA","LOADING_ZONAS","moment","state","action","type","loadingZonas","zonas","payload","loading","thisFecha","contadores","contadorSector","map","contador","_id","contadoresDay","filter","cont","fecha","isSame","contadorSectorDay","error"],"mappings":"mVAAA,OACEA,cADF,CAEEC,SAFF,CAGEC,qBAHF,CAIEC,cAJF,CAKEC,kBALF,CAMEC,gBANF,CAOEC,iBAPF,CAQEC,kBARF,CASEC,YATF,CAUEC,SAVF,CAWEC,aAXF,KAYO,UAZP,CAcA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKb,CAAAA,SAAL,CACE,sCAAYW,KAAZ,MAAmBG,YAAY,CAAE,KAAjC,CAAwCC,KAAK,CAAEH,MAAM,CAACI,OAAtD,GACF,IAAKb,CAAAA,kBAAL,CACE,sCACKQ,KADL,MAEEM,OAAO,CAAE,IAFX,GAIF,IAAKR,CAAAA,aAAL,CACE,sCACKE,KADL,MAEEG,YAAY,CAAE,IAFhB,GAIF,IAAKN,CAAAA,SAAL,CACE,sCACKG,KADL,MAEEO,SAAS,CAAEN,MAAM,CAACI,OAFpB,GAIF,IAAKjB,CAAAA,cAAL,CACE,sCACKY,KADL,MAEEQ,UAAU,CAAEP,MAAM,CAACI,OAFrB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKhB,CAAAA,qBAAL,CACE,sCACKU,KADL,MAEES,cAAc,CAAER,MAAM,CAACI,OAFzB,CAGEC,OAAO,CAAE,KAHX,GAMF,IAAKZ,CAAAA,iBAAL,CACE,sCACKM,KADL,MAEEQ,UAAU,CAAER,KAAK,CAACQ,UAAN,CAAiBE,GAAjB,CAAqB,SAACC,QAAD,QAC/BA,CAAAA,QAAQ,CAACC,GAAT,GAAiBX,MAAM,CAACI,OAAP,CAAeO,GAAhC,CAAsCX,MAAM,CAACI,OAA7C,CAAuDM,QADxB,EAArB,CAFd,CAKE;AACA;AACA;AACA;AACA;AACA;AACAL,OAAO,CAAE,KAXX,GAaF,IAAKf,CAAAA,cAAL,CACE,sCACKS,KADL,MAEEQ,UAAU,8BAAMR,KAAK,CAACQ,UAAZ,GAAwBP,MAAM,CAACI,OAA/B,EACV;AACA;AACA;AACA;AACA;AACA;AARF,GAUF,IAAKV,CAAAA,kBAAL,CACE,sCACKK,KADL,MAEEa,aAAa,CAAEb,KAAK,CAACQ,UAAN,CAAiBM,MAAjB,CAAwB,SAACC,IAAD,QACrChB,CAAAA,MAAM,CAACgB,IAAI,CAACC,KAAN,CAAN,CAAmBC,MAAnB,CAA0BhB,MAAM,CAACI,OAAjC,CAA0C,KAA1C,CADqC,EAAxB,CAFjB,CAKEa,iBAAiB,CAAElB,KAAK,CAACS,cAAN,CAAqBK,MAArB,CAA4B,SAACC,IAAD,QAC7ChB,CAAAA,MAAM,CAACgB,IAAI,CAACC,KAAN,CAAN,CAAmBC,MAAnB,CAA0BhB,MAAM,CAACI,OAAjC,CAA0C,KAA1C,CAD6C,EAA5B,CALrB,CAQEC,OAAO,CAAE,KARX,GAUF,IAAKV,CAAAA,YAAL,CACE,sCACKI,KADL,MAEEa,aAAa,CAAE,IAFjB,CAGEK,iBAAiB,CAAE,IAHrB,GAKF,IAAKzB,CAAAA,gBAAL,CACE,sCACKO,KADL,MAEEM,OAAO,CAAE,KAFX,CAGEa,KAAK,CAAElB,MAAM,CAACI,OAHhB,GAKF,QACE,MAAOL,CAAAA,KAAP,CAhFJ,CAkFD,CAnFD","sourcesContent":["import {\n  GET_CONTADORES,\n  GET_ZONAS,\n  GET_CONTADORES_SECTOR,\n  ADD_CONTADORES,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  UPDATE_CONTADORES,\n  FILTRAR_CONTADORES,\n  CLEAR_FILTER,\n  SET_FECHA,\n  LOADING_ZONAS,\n} from '../types';\n\nimport moment from 'moment';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_ZONAS:\n      return { ...state, loadingZonas: false, zonas: action.payload };\n    case LOADING_CONTADORES:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOADING_ZONAS:\n      return {\n        ...state,\n        loadingZonas: true,\n      };\n    case SET_FECHA:\n      return {\n        ...state,\n        thisFecha: action.payload,\n      };\n    case GET_CONTADORES:\n      return {\n        ...state,\n        contadores: action.payload,\n        loading: false,\n      };\n    case GET_CONTADORES_SECTOR:\n      return {\n        ...state,\n        contadorSector: action.payload,\n        loading: false,\n      };\n\n    case UPDATE_CONTADORES:\n      return {\n        ...state,\n        contadores: state.contadores.map((contador) =>\n          contador._id === action.payload._id ? action.payload : contador\n        ),\n        // contadorSector: state.contadorSector.map((cS) =>\n        //   cS._id.sector === action.payload.sectorId &&\n        //   moment(cS.fecha).isSame(action.payload.fecha, 'day')\n        //     ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n        //     : cS\n        // ),\n        loading: false,\n      };\n    case ADD_CONTADORES:\n      return {\n        ...state,\n        contadores: [...state.contadores, action.payload],\n        // contadorSector: state.contadorSector.map((cS) =>\n        //   cS._id.sector === action.payload.sectorId &&\n        //   moment(cS.fecha).isSame(action.payload.fecha, 'day')\n        //     ? { ...cS, contador: cS.contador + action.payload.deltaContador }\n        //     : cS\n        // ),\n      };\n    case FILTRAR_CONTADORES:\n      return {\n        ...state,\n        contadoresDay: state.contadores.filter((cont) =>\n          moment(cont.fecha).isSame(action.payload, 'day')\n        ),\n        contadorSectorDay: state.contadorSector.filter((cont) =>\n          moment(cont.fecha).isSame(action.payload, 'day')\n        ),\n        loading: false,\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        contadoresDay: null,\n        contadorSectorDay: null,\n      };\n    case ERROR_CONTADORES:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}