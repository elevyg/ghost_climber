{"ast":null,"code":"var _jsxFileName = \"/Users/eyallevyg/developer/ghost_climber/client/src/context/zonas/ZonasState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport groupBy from 'lodash/groupBy';\nimport ZonasContext from './zonasContext';\nimport zonasReducer from './zonasReducer';\nimport { GET_ZONAS, ZONAS_ERROR, LOADING_ZONAS } from '../types';\n\nconst ZonasState = props => {\n  const initialState = {\n    zonas: null,\n    loading: false,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(zonasReducer, initialState); // Loading\n\n  const loadingZonas = () => {\n    const loading = true;\n    dispatch({\n      type: LOADING_ZONAS,\n      payload: loading\n    });\n  }; // Get Zonas\n\n\n  const getZonas = async () => {\n    try {\n      loadingZonas();\n      const res = await axios.get('/api/v1/sectores');\n      let zonas = res.data.data;\n      zonas = Object.entries(groupBy(zonas, 'comuna'));\n      zonas.map(zona => Object.fromEntries(zona));\n      console.log(typeof zonas);\n      console.log(Object.values(zonas));\n      console.log(typeof zonas);\n      dispatch({\n        type: GET_ZONAS,\n        payload: zonas\n      });\n    } catch (err) {\n      dispatch({\n        type: ZONAS_ERROR,\n        payload: err.response\n      });\n    }\n  }; // // Filter Contacts\n  // const filterContacts = (text) => {\n  //   dispatch({ type: FILTER_CONTACTS, payload: text });\n  // };\n  // // Clear Filter\n  // const clearFilter = () => {\n  //   dispatch({ type: CLEAR_FILTER });\n  // };\n  // // Clear Contacts\n  // const clearContacts = () => dispatch({ type: CLEAR_CONTACTS });\n\n\n  return /*#__PURE__*/React.createElement(ZonasContext.Provider, {\n    value: {\n      zonas: state.zonas,\n      loading: state.loading,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      // filterContacts,\n      // clearFilter,\n      getZonas,\n      // clearContacts,\n      loadingZonas\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ZonasState;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/zonas/ZonasState.js"],"names":["React","useReducer","axios","groupBy","ZonasContext","zonasReducer","GET_ZONAS","ZONAS_ERROR","LOADING_ZONAS","ZonasState","props","initialState","zonas","loading","current","filtered","error","state","dispatch","loadingZonas","type","payload","getZonas","res","get","data","Object","entries","map","zona","fromEntries","console","log","values","err","response","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,aAAjC,QAAsD,UAAtD;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,IADY;AAEnBC,IAAAA,OAAO,EAAE,KAFU;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,QAAQ,EAAE,IAJS;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACI,YAAD,EAAeM,YAAf,CAApC,CAT4B,CAW5B;;AACA,QAAMQ,YAAY,GAAG,MAAM;AACzB,UAAMN,OAAO,GAAG,IAAhB;AACAK,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEZ,aAAR;AAAuBa,MAAAA,OAAO,EAAER;AAAhC,KAAD,CAAR;AACD,GAHD,CAZ4B,CAiB5B;;;AACA,QAAMS,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACFH,MAAAA,YAAY;AACZ,YAAMI,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,kBAAV,CAAlB;AAEA,UAAIZ,KAAK,GAAGW,GAAG,CAACE,IAAJ,CAASA,IAArB;AAEAb,MAAAA,KAAK,GAAGc,MAAM,CAACC,OAAP,CAAexB,OAAO,CAACS,KAAD,EAAQ,QAAR,CAAtB,CAAR;AAEAA,MAAAA,KAAK,CAACgB,GAAN,CAAWC,IAAD,IAAUH,MAAM,CAACI,WAAP,CAAmBD,IAAnB,CAApB;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOpB,KAAnB;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACO,MAAP,CAAcrB,KAAd,CAAZ;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOpB,KAAnB;AACAM,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEd,SAAR;AAAmBe,QAAAA,OAAO,EAAET;AAA5B,OAAD,CAAR;AACD,KAdD,CAcE,OAAOsB,GAAP,EAAY;AACZhB,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEb,WAAR;AAAqBc,QAAAA,OAAO,EAAEa,GAAG,CAACC;AAAlC,OAAD,CAAR;AACD;AACF,GAlBD,CAlB4B,CAsC5B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;;AAEA,sBACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLvB,MAAAA,KAAK,EAAEK,KAAK,CAACL,KADR;AAELC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFV;AAGLC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILC,MAAAA,QAAQ,EAAEE,KAAK,CAACF,QAJX;AAKLC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALR;AAML;AACA;AACAM,MAAAA,QARK;AASL;AACAH,MAAAA;AAVK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGT,KAAK,CAAC0B,QAdT,CADF;AAkBD,CAtED;;AAwEA,eAAe3B,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport groupBy from 'lodash/groupBy';\n\nimport ZonasContext from './zonasContext';\nimport zonasReducer from './zonasReducer';\n\nimport { GET_ZONAS, ZONAS_ERROR, LOADING_ZONAS } from '../types';\n\nconst ZonasState = (props) => {\n  const initialState = {\n    zonas: null,\n    loading: false,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(zonasReducer, initialState);\n\n  // Loading\n  const loadingZonas = () => {\n    const loading = true;\n    dispatch({ type: LOADING_ZONAS, payload: loading });\n  };\n\n  // Get Zonas\n  const getZonas = async () => {\n    try {\n      loadingZonas();\n      const res = await axios.get('/api/v1/sectores');\n\n      let zonas = res.data.data;\n\n      zonas = Object.entries(groupBy(zonas, 'comuna'));\n\n      zonas.map((zona) => Object.fromEntries(zona));\n\n      console.log(typeof zonas);\n      console.log(Object.values(zonas));\n      console.log(typeof zonas);\n      dispatch({ type: GET_ZONAS, payload: zonas });\n    } catch (err) {\n      dispatch({ type: ZONAS_ERROR, payload: err.response });\n    }\n  };\n\n  // // Filter Contacts\n  // const filterContacts = (text) => {\n  //   dispatch({ type: FILTER_CONTACTS, payload: text });\n  // };\n\n  // // Clear Filter\n  // const clearFilter = () => {\n  //   dispatch({ type: CLEAR_FILTER });\n  // };\n\n  // // Clear Contacts\n\n  // const clearContacts = () => dispatch({ type: CLEAR_CONTACTS });\n\n  return (\n    <ZonasContext.Provider\n      value={{\n        zonas: state.zonas,\n        loading: state.loading,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        // filterContacts,\n        // clearFilter,\n        getZonas,\n        // clearContacts,\n        loadingZonas,\n      }}\n    >\n      {props.children}\n    </ZonasContext.Provider>\n  );\n};\n\nexport default ZonasState;\n"]},"metadata":{},"sourceType":"module"}