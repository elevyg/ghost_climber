{"ast":null,"code":"import _regeneratorRuntime from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/eyallevyg/developer/ghost_climber/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axios from'axios';import ContadoresContext from'./contadoresContext';import contadoresReducer from'./contadoresReducer';import groupBy from'lodash/groupBy';import renameKeys from'../../utils/renameKeys';import{GET_CONTADORES,GET_ZONAS,ADD_CONTADORES,ADD_CONTADOR_SECTOR,LOADING_CONTADORES,ERROR_CONTADORES,GET_CONTADORES_SECTOR,UPDATE_CONTADORES,FILTRAR_CONTADORES,CLEAR_FILTER,SET_FECHA}from'../types';import sameDay from'../../utils/sameDay';var ContadoresState=function ContadoresState(props){var initialState={zonas:null,contadores:null,contadoresDay:null,contadorSector:null,contadorSectorDay:null,thisFecha:new Date(),loading:false,error:null};var _useReducer=useReducer(contadoresReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Get Zonas\nvar getZonas=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,zonas;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;loadingContadores();_context.next=4;return axios.get('/api/v1/sectores');case 4:res=_context.sent;zonas=res.data.data;zonas=Object.entries(groupBy(zonas,'comuna')).map(function(zona){return renameKeys({0:'comuna',1:'sector'},zona);});dispatch({type:GET_ZONAS,payload:zonas});_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);dispatch({type:ERROR_CONTADORES,payload:_context.t0.response});case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function getZonas(){return _ref.apply(this,arguments);};}();// Loading\nvar loadingContadores=function loadingContadores(){var loading=true;dispatch({type:LOADING_CONTADORES,payload:loading});};// Obtener contadores por subsector\nvar getContadores=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,contadores;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;loadingContadores();_context2.next=4;return axios.get(\"/api/v1/contadores\");case 4:res=_context2.sent;contadores=res.data.data;dispatch({type:GET_CONTADORES,payload:contadores});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);dispatch({type:ERROR_CONTADORES,payload:_context2.t0.response});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function getContadores(){return _ref2.apply(this,arguments);};}();// Obtener contadores por sector\nvar getContadorSector=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(zonas){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;return _context4.delegateYield(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var sectores,sectoresId,i,res,contadorSector;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:sectores=zonas.map(function(z){return z.sector;});sectoresId=[];for(i=0;i<sectores.length;i++){sectores[i].map(function(s){return sectoresId.push(s._id);});}_context3.next=5;return Promise.all(sectoresId.map(function(id){return axios.get(\"/api/v1/sectores/\".concat(id,\"/contadores\"));}));case 5:res=_context3.sent;contadorSector=res.map(function(p){return p.data.data;}).flat(2);dispatch({type:GET_CONTADORES_SECTOR,payload:contadorSector});case 8:case\"end\":return _context3.stop();}}},_callee3);})(),\"t0\",2);case 2:_context4.next=7;break;case 4:_context4.prev=4;_context4.t1=_context4[\"catch\"](0);dispatch({type:ERROR_CONTADORES,payload:_context4.t1.response});case 7:case\"end\":return _context4.stop();}}},_callee4,null,[[0,4]]);}));return function getContadorSector(_x){return _ref3.apply(this,arguments);};}();// Add contador\nvar addContador=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(contador,contadorId,sectorId){var config,res,_res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:config={headers:{'Content-Type':'application/json'}};if(contadorId){_context5.next=16;break;}_context5.prev=2;_context5.next=5;return axios.post(\"/api/v1/subsectores/\".concat(contador.subsector._id,\"/contadores/\"),contador,config);case 5:res=_context5.sent;res.data.data.sectorId=sectorId;res.data.data.deltaContador=contador.contador;dispatch({type:ADD_CONTADORES,payload:res.data.data});_context5.next=14;break;case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](2);dispatch({type:ERROR_CONTADORES,payload:_context5.t0.response.msg});case 14:_context5.next=28;break;case 16:_context5.prev=16;_context5.next=19;return axios.put(\"/api/v1/contadores/\".concat(contadorId),contador,config);case 19:_res=_context5.sent;_res.data.data.sectorId=sectorId;_res.data.data.deltaContador=contador.contador;dispatch({type:UPDATE_CONTADORES,payload:_res.data.data});_context5.next=28;break;case 25:_context5.prev=25;_context5.t1=_context5[\"catch\"](16);dispatch({type:ERROR_CONTADORES,payload:_context5.t1.response.msg});case 28:case\"end\":return _context5.stop();}}},_callee5,null,[[2,11],[16,25]]);}));return function addContador(_x2,_x3,_x4){return _ref4.apply(this,arguments);};}();var addContadorSector=function addContadorSector(sectorId,fecha){var contadorExist=state.contadorSector.filter(function(cS){return cS._id===sectorId&&sameDay(cS.fecha,state.thisFecha);});if(contadorExist.length===0){var contadorSector={_id:{sector:sectorId},fecha:fecha,contador:0};dispatch({type:ADD_CONTADOR_SECTOR,payload:contadorSector});}};// Filtrar contador para subsector\nvar setThisContador=function setThisContador(subsectorId){if(state.contadoresDay){var contador=state.contadoresDay.filter(function(cont){return cont.subsector._id===subsectorId||cont.subsector===subsectorId;});if(contador.length===0){contador=[{subsector:{_id:subsectorId},fecha:state.thisFecha,contador:0,dbStatus:401}];}return contador[0];}};// Fijar fecha\nvar setFecha=function setFecha(fecha){dispatch({type:SET_FECHA,payload:fecha});};// Filtrar contadores por dÃ­a seleccionado\nvar filtrarContadores=function filtrarContadores(fecha){loadingContadores();dispatch({type:FILTRAR_CONTADORES,payload:fecha});};var clearFilter=function clearFilter(){dispatch({type:CLEAR_FILTER});};return/*#__PURE__*/React.createElement(ContadoresContext.Provider,{value:{zonas:state.zonas,contadores:state.contadores,contadoresDay:state.contadoresDay,contadorSector:state.contadorSector,contadorSectorDay:state.contadorSectorDay,thisFecha:state.thisFecha,loading:state.loading,error:state.error,getZonas:getZonas,getContadores:getContadores,loadingContadores:loadingContadores,getContadorSector:getContadorSector,addContadorSector:addContadorSector,addContador:addContador,setThisContador:setThisContador,filtrarContadores:filtrarContadores,setFecha:setFecha,clearFilter:clearFilter}},props.children);};export default ContadoresState;","map":{"version":3,"sources":["/Users/eyallevyg/developer/ghost_climber/client/src/context/contadores/ContadoresState.js"],"names":["React","useReducer","axios","ContadoresContext","contadoresReducer","groupBy","renameKeys","GET_CONTADORES","GET_ZONAS","ADD_CONTADORES","ADD_CONTADOR_SECTOR","LOADING_CONTADORES","ERROR_CONTADORES","GET_CONTADORES_SECTOR","UPDATE_CONTADORES","FILTRAR_CONTADORES","CLEAR_FILTER","SET_FECHA","sameDay","ContadoresState","props","initialState","zonas","contadores","contadoresDay","contadorSector","contadorSectorDay","thisFecha","Date","loading","error","state","dispatch","getZonas","loadingContadores","get","res","data","Object","entries","map","zona","type","payload","response","getContadores","getContadorSector","sectores","z","sector","sectoresId","i","length","s","push","_id","Promise","all","id","p","flat","addContador","contador","contadorId","sectorId","config","headers","post","subsector","deltaContador","msg","put","addContadorSector","fecha","contadorExist","filter","cS","setThisContador","subsectorId","cont","dbStatus","setFecha","filtrarContadores","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport ContadoresContext from './contadoresContext';\nimport contadoresReducer from './contadoresReducer';\n\nimport groupBy from 'lodash/groupBy';\nimport renameKeys from '../../utils/renameKeys';\n\nimport {\n  GET_CONTADORES,\n  GET_ZONAS,\n  ADD_CONTADORES,\n  ADD_CONTADOR_SECTOR,\n  LOADING_CONTADORES,\n  ERROR_CONTADORES,\n  GET_CONTADORES_SECTOR,\n  UPDATE_CONTADORES,\n  FILTRAR_CONTADORES,\n  CLEAR_FILTER,\n  SET_FECHA,\n} from '../types';\nimport sameDay from '../../utils/sameDay';\n\nconst ContadoresState = (props) => {\n  const initialState = {\n    zonas: null,\n    contadores: null,\n    contadoresDay: null,\n    contadorSector: null,\n    contadorSectorDay: null,\n    thisFecha: new Date(),\n    loading: false,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contadoresReducer, initialState);\n\n  // Get Zonas\n  const getZonas = async () => {\n    try {\n      loadingContadores();\n      const res = await axios.get('/api/v1/sectores');\n\n      let zonas = res.data.data;\n\n      zonas = Object.entries(groupBy(zonas, 'comuna')).map((zona) =>\n        renameKeys({ 0: 'comuna', 1: 'sector' }, zona)\n      );\n\n      dispatch({ type: GET_ZONAS, payload: zonas });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Loading\n  const loadingContadores = () => {\n    const loading = true;\n    dispatch({ type: LOADING_CONTADORES, payload: loading });\n  };\n\n  // Obtener contadores por subsector\n  const getContadores = async () => {\n    try {\n      loadingContadores();\n\n      const res = await axios.get(`/api/v1/contadores`);\n\n      let contadores = res.data.data;\n\n      dispatch({ type: GET_CONTADORES, payload: contadores });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Obtener contadores por sector\n  const getContadorSector = async (zonas) => {\n    try {\n      const sectores = zonas.map((z) => z.sector);\n\n      const sectoresId = [];\n\n      for (let i = 0; i < sectores.length; i++) {\n        sectores[i].map((s) => sectoresId.push(s._id));\n      }\n\n      const res = await Promise.all(\n        sectoresId.map((id) => axios.get(`/api/v1/sectores/${id}/contadores`))\n      );\n\n      const contadorSector = res.map((p) => p.data.data).flat(2);\n\n      dispatch({ type: GET_CONTADORES_SECTOR, payload: contadorSector });\n    } catch (err) {\n      dispatch({ type: ERROR_CONTADORES, payload: err.response });\n    }\n  };\n\n  // Add contador\n  const addContador = async (contador, contadorId, sectorId) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    if (!contadorId) {\n      try {\n        const res = await axios.post(\n          `/api/v1/subsectores/${contador.subsector._id}/contadores/`,\n          contador,\n          config\n        );\n\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n\n        dispatch({ type: ADD_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    } else {\n      try {\n        const res = await axios.put(\n          `/api/v1/contadores/${contadorId}`,\n          contador,\n          config\n        );\n        res.data.data.sectorId = sectorId;\n        res.data.data.deltaContador = contador.contador;\n\n        dispatch({ type: UPDATE_CONTADORES, payload: res.data.data });\n      } catch (err) {\n        dispatch({ type: ERROR_CONTADORES, payload: err.response.msg });\n      }\n    }\n  };\n\n  const addContadorSector = (sectorId, fecha) => {\n    const contadorExist = state.contadorSector.filter(\n      (cS) => cS._id === sectorId && sameDay(cS.fecha, state.thisFecha)\n    );\n\n    if (contadorExist.length === 0) {\n      const contadorSector = {\n        _id: { sector: sectorId },\n        fecha,\n        contador: 0,\n      };\n      dispatch({ type: ADD_CONTADOR_SECTOR, payload: contadorSector });\n    }\n  };\n\n  // Filtrar contador para subsector\n  const setThisContador = (subsectorId) => {\n    if (state.contadoresDay) {\n      let contador = state.contadoresDay.filter(\n        (cont) =>\n          cont.subsector._id === subsectorId || cont.subsector === subsectorId\n      );\n\n      if (contador.length === 0) {\n        contador = [\n          {\n            subsector: {\n              _id: subsectorId,\n            },\n            fecha: state.thisFecha,\n            contador: 0,\n            dbStatus: 401,\n          },\n        ];\n      }\n\n      return contador[0];\n    }\n  };\n\n  // Fijar fecha\n  const setFecha = (fecha) => {\n    dispatch({ type: SET_FECHA, payload: fecha });\n  };\n\n  // Filtrar contadores por dÃ­a seleccionado\n  const filtrarContadores = (fecha) => {\n    loadingContadores();\n    dispatch({ type: FILTRAR_CONTADORES, payload: fecha });\n  };\n\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n  return (\n    <ContadoresContext.Provider\n      value={{\n        zonas: state.zonas,\n        contadores: state.contadores,\n        contadoresDay: state.contadoresDay,\n        contadorSector: state.contadorSector,\n        contadorSectorDay: state.contadorSectorDay,\n        thisFecha: state.thisFecha,\n        loading: state.loading,\n        error: state.error,\n        getZonas,\n        getContadores,\n        loadingContadores,\n        getContadorSector,\n        addContadorSector,\n        addContador,\n        setThisContador,\n        filtrarContadores,\n        setFecha,\n        clearFilter,\n      }}\n    >\n      {props.children}\n    </ContadoresContext.Provider>\n  );\n};\n\nexport default ContadoresState;\n"]},"metadata":{},"sourceType":"module"}